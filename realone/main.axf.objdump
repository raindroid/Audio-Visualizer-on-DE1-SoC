
E:/ece243/project/ece243project/realone/main.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
       0:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
      10:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
      20:	40 00 00 00 3c 7e 00 00 40 7e 00 00 44 7e 00 00     @...<~..@~..D~..
      30:	48 7e 00 00 38 7e 00 00 4c 7e 00 00 50 7e 00 00     H~..8~..L~..P~..

00000040 <__cs3_reset>:
      40:	ea000026 	b	e0 <__cs3_start_asm_sim>

00000044 <__cs3_start_c>:
      44:	e59f608c 	ldr	r6, [pc, #140]	; d8 <__cs3_start_c+0x94>
      48:	e3560000 	cmp	r6, #0
      4c:	e92d4080 	push	{r7, lr}
      50:	e2466001 	sub	r6, r6, #1
      54:	0a00001e 	beq	d4 <__cs3_start_c+0x90>
      58:	e59f507c 	ldr	r5, [pc, #124]	; dc <__cs3_start_c+0x98>
      5c:	e3a00000 	mov	r0, #0
      60:	e3a01000 	mov	r1, #0
      64:	e515200c 	ldr	r2, [r5, #-12]
      68:	e515e010 	ldr	lr, [r5, #-16]
      6c:	e5154008 	ldr	r4, [r5, #-8]
      70:	e15e0002 	cmp	lr, r2
      74:	00822004 	addeq	r2, r2, r4
      78:	0a000009 	beq	a4 <__cs3_start_c+0x60>
      7c:	e3540000 	cmp	r4, #0
      80:	0a000007 	beq	a4 <__cs3_start_c+0x60>
      84:	e1a07002 	mov	r7, r2
      88:	e1a0c002 	mov	r12, r2
      8c:	e8be000c 	ldm	lr!, {r2, r3}
      90:	e8ac000c 	stmia	r12!, {r2, r3}
      94:	e067300c 	rsb	r3, r7, r12
      98:	e1540003 	cmp	r4, r3
      9c:	e1a0200c 	mov	r2, r12
      a0:	1afffff9 	bne	8c <__cs3_start_c+0x48>
      a4:	e515e004 	ldr	lr, [r5, #-4]
      a8:	e35e0000 	cmp	lr, #0
      ac:	11a03002 	movne	r3, r2
      b0:	0a000003 	beq	c4 <__cs3_start_c+0x80>
      b4:	e8a30003 	stmia	r3!, {r0, r1}
      b8:	e062c003 	rsb	r12, r2, r3
      bc:	e15e000c 	cmp	lr, r12
      c0:	1afffffb 	bne	b4 <__cs3_start_c+0x70>
      c4:	e2466001 	sub	r6, r6, #1
      c8:	e3760001 	cmn	r6, #1
      cc:	e2855014 	add	r5, r5, #20
      d0:	1affffe3 	bne	64 <__cs3_start_c+0x20>
      d4:	eb001f3e 	bl	7dd4 <__cs3_premain>
      d8:	00000001 	.word	0x00000001
      dc:	0000a6e8 	.word	0x0000a6e8

000000e0 <__cs3_start_asm_sim>:
      e0:	e28f103c 	add	r1, pc, #60	; 0x3c
      e4:	e3a00016 	mov	r0, #22
      e8:	ef123456 	svc	0x00123456
      ec:	e3500000 	cmp	r0, #0
      f0:	ba000008 	blt	118 <__cs3_start_asm_sim+0x38>
      f4:	e59f2028 	ldr	r2, [pc, #40]	; 124 <__cs3_heap_start_ptr>
      f8:	e59fd01c 	ldr	sp, [pc, #28]	; 11c <__cs3_start_asm_sim+0x3c>
      fc:	e5920008 	ldr	r0, [r2, #8]
     100:	e3500000 	cmp	r0, #0
     104:	11a0d000 	movne	sp, r0
     108:	e59f1010 	ldr	r1, [pc, #16]	; 120 <__cs3_start_asm_sim+0x40>
     10c:	e5920004 	ldr	r0, [r2, #4]
     110:	e3500000 	cmp	r0, #0
     114:	15810000 	strne	r0, [r1]
     118:	eaffffc9 	b	44 <__cs3_start_c>
     11c:	3ffffff8 	.word	0x3ffffff8
     120:	0000ab80 	.word	0x0000ab80

00000124 <__cs3_heap_start_ptr>:
     124:	00014818 	.word	0x00014818

00000128 <_start>:
     128:	e51fd000 	ldr	sp, [pc, #-0]	; 130 <_start+0x8>
     12c:	eaffffc4 	b	44 <__cs3_start_c>
     130:	3ffffff8 	.word	0x3ffffff8

00000134 <deregister_tm_clones>:
     134:	e92d4008 	push	{r3, lr}
     138:	e59f002c 	ldr	r0, [pc, #44]	; 16c <deregister_tm_clones+0x38>
     13c:	e59f302c 	ldr	r3, [pc, #44]	; 170 <deregister_tm_clones+0x3c>
     140:	e0603003 	rsb	r3, r0, r3
     144:	e3530006 	cmp	r3, #6
     148:	8a000001 	bhi	154 <deregister_tm_clones+0x20>
     14c:	e8bd4008 	pop	{r3, lr}
     150:	e12fff1e 	bx	lr
     154:	e59f3018 	ldr	r3, [pc, #24]	; 174 <deregister_tm_clones+0x40>
     158:	e3530000 	cmp	r3, #0
     15c:	0afffffa 	beq	14c <deregister_tm_clones+0x18>
     160:	e1a0e00f 	mov	lr, pc
     164:	e12fff13 	bx	r3
     168:	eafffff7 	b	14c <deregister_tm_clones+0x18>
     16c:	0000ab88 	.word	0x0000ab88
     170:	0000ab8b 	.word	0x0000ab8b
     174:	00000000 	.word	0x00000000

00000178 <register_tm_clones>:
     178:	e92d4008 	push	{r3, lr}
     17c:	e59f0034 	ldr	r0, [pc, #52]	; 1b8 <register_tm_clones+0x40>
     180:	e59f3034 	ldr	r3, [pc, #52]	; 1bc <register_tm_clones+0x44>
     184:	e0603003 	rsb	r3, r0, r3
     188:	e1a03143 	asr	r3, r3, #2
     18c:	e0833fa3 	add	r3, r3, r3, lsr #31
     190:	e1b010c3 	asrs	r1, r3, #1
     194:	1a000001 	bne	1a0 <register_tm_clones+0x28>
     198:	e8bd4008 	pop	{r3, lr}
     19c:	e12fff1e 	bx	lr
     1a0:	e59f2018 	ldr	r2, [pc, #24]	; 1c0 <register_tm_clones+0x48>
     1a4:	e3520000 	cmp	r2, #0
     1a8:	0afffffa 	beq	198 <register_tm_clones+0x20>
     1ac:	e1a0e00f 	mov	lr, pc
     1b0:	e12fff12 	bx	r2
     1b4:	eafffff7 	b	198 <register_tm_clones+0x20>
     1b8:	0000ab88 	.word	0x0000ab88
     1bc:	0000ab88 	.word	0x0000ab88
     1c0:	00000000 	.word	0x00000000

000001c4 <__do_global_dtors_aux>:
     1c4:	e92d4010 	push	{r4, lr}
     1c8:	e59f402c 	ldr	r4, [pc, #44]	; 1fc <__do_global_dtors_aux+0x38>
     1cc:	e5d43000 	ldrb	r3, [r4]
     1d0:	e3530000 	cmp	r3, #0
     1d4:	1a000006 	bne	1f4 <__do_global_dtors_aux+0x30>
     1d8:	ebffffd5 	bl	134 <deregister_tm_clones>
     1dc:	e59f301c 	ldr	r3, [pc, #28]	; 200 <__do_global_dtors_aux+0x3c>
     1e0:	e3530000 	cmp	r3, #0
     1e4:	159f0018 	ldrne	r0, [pc, #24]	; 204 <__do_global_dtors_aux+0x40>
     1e8:	1320f000 	nopne	{0}
     1ec:	e3a03001 	mov	r3, #1
     1f0:	e5c43000 	strb	r3, [r4]
     1f4:	e8bd4010 	pop	{r4, lr}
     1f8:	e12fff1e 	bx	lr
     1fc:	0000ab88 	.word	0x0000ab88
     200:	00000000 	.word	0x00000000
     204:	00007edc 	.word	0x00007edc

00000208 <frame_dummy>:
     208:	e92d4008 	push	{r3, lr}
     20c:	e59f3034 	ldr	r3, [pc, #52]	; 248 <frame_dummy+0x40>
     210:	e3530000 	cmp	r3, #0
     214:	159f0030 	ldrne	r0, [pc, #48]	; 24c <frame_dummy+0x44>
     218:	159f1030 	ldrne	r1, [pc, #48]	; 250 <frame_dummy+0x48>
     21c:	1320f000 	nopne	{0}
     220:	e59f002c 	ldr	r0, [pc, #44]	; 254 <frame_dummy+0x4c>
     224:	e5903000 	ldr	r3, [r0]
     228:	e3530000 	cmp	r3, #0
     22c:	0a000003 	beq	240 <frame_dummy+0x38>
     230:	e59f3020 	ldr	r3, [pc, #32]	; 258 <frame_dummy+0x50>
     234:	e3530000 	cmp	r3, #0
     238:	11a0e00f 	movne	lr, pc
     23c:	112fff13 	bxne	r3
     240:	e8bd4008 	pop	{r3, lr}
     244:	eaffffcb 	b	178 <register_tm_clones>
     248:	00000000 	.word	0x00000000
     24c:	00007edc 	.word	0x00007edc
     250:	0000ab8c 	.word	0x0000ab8c
     254:	0000a6e8 	.word	0x0000a6e8
     258:	00000000 	.word	0x00000000

0000025c <main>:
#include "tests/tests.h"

int main(void)
{
     25c:	e92d4800 	push	{r11, lr}
     260:	e28db004 	add	r11, sp, #4
    // led_test();
    // uart_test();
    //audio_test();
    // hex_test();
     audio_transform_test();
     264:	eb0003b8 	bl	114c <audio_transform_test>
    //display_test();
    // color_test();

    for (;;); 
     268:	eafffffe 	b	268 <main+0xc>

0000026c <VIS_ERROR_Handler>:
#include "values.h"
void VIS_ERROR_Handler() {
     26c:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
     270:	e28db000 	add	r11, sp, #0
    // if error happens, stop here
    for (;;);
     274:	eafffffe 	b	274 <VIS_ERROR_Handler+0x8>

00000278 <VIS_Uart_TxChar>:
#include "JTAG_UART.h"

static volatile int * red_LED_ptr = (int *)0xFF200000;
const char intToChar[10] = {'0','1','2','3','4','5','6','7','8','9'};  

void VIS_Uart_TxChar(volatile int * JTAG_UART_ptr, char c) {
     278:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
     27c:	e28db000 	add	r11, sp, #0
     280:	e24dd00c 	sub	sp, sp, #12
     284:	e50b0008 	str	r0, [r11, #-8]
     288:	e1a03001 	mov	r3, r1
     28c:	e54b3009 	strb	r3, [r11, #-9]
    *(red_LED_ptr) = 0x1; // turn on LEDR[0]
     290:	e30a36f0 	movw	r3, #42736	; 0xa6f0
     294:	e3403000 	movt	r3, #0
     298:	e5933000 	ldr	r3, [r3]
     29c:	e3a02001 	mov	r2, #1
     2a0:	e5832000 	str	r2, [r3]
    while (!((*(JTAG_UART_ptr + 1)) & 0xFFFF0000)) {
     2a4:	e1a00000 	nop			; (mov r0, r0)
     2a8:	e51b3008 	ldr	r3, [r11, #-8]
     2ac:	e2833004 	add	r3, r3, #4
     2b0:	e5933000 	ldr	r3, [r3]
     2b4:	e1a03823 	lsr	r3, r3, #16
     2b8:	e1a03803 	lsl	r3, r3, #16
     2bc:	e3530000 	cmp	r3, #0
     2c0:	0afffff8 	beq	2a8 <VIS_Uart_TxChar+0x30>
        // if space, echo character, else wait
    } 
    *(JTAG_UART_ptr) = c;
     2c4:	e55b2009 	ldrb	r2, [r11, #-9]
     2c8:	e51b3008 	ldr	r3, [r11, #-8]
     2cc:	e5832000 	str	r2, [r3]
    *(red_LED_ptr) = 0x0; // turn off LEDR[0]
     2d0:	e30a36f0 	movw	r3, #42736	; 0xa6f0
     2d4:	e3403000 	movt	r3, #0
     2d8:	e5933000 	ldr	r3, [r3]
     2dc:	e3a02000 	mov	r2, #0
     2e0:	e5832000 	str	r2, [r3]
}
     2e4:	e28bd000 	add	sp, r11, #0
     2e8:	e8bd0800 	ldmfd	sp!, {r11}
     2ec:	e12fff1e 	bx	lr

000002f0 <VIS_Uart_Tx>:

void VIS_Uart_Tx(volatile int * JTAG_UART_ptr, char * s, int size) {
     2f0:	e92d4800 	push	{r11, lr}
     2f4:	e28db004 	add	r11, sp, #4
     2f8:	e24dd018 	sub	sp, sp, #24
     2fc:	e50b0010 	str	r0, [r11, #-16]
     300:	e50b1014 	str	r1, [r11, #-20]	; 0xffffffec
     304:	e50b2018 	str	r2, [r11, #-24]	; 0xffffffe8
    
    for (int i = 0; i < size; i++)
     308:	e3a03000 	mov	r3, #0
     30c:	e50b3008 	str	r3, [r11, #-8]
     310:	ea000009 	b	33c <VIS_Uart_Tx+0x4c>
        VIS_Uart_TxChar(JTAG_UART_ptr, s[i]);
     314:	e51b3008 	ldr	r3, [r11, #-8]
     318:	e51b2014 	ldr	r2, [r11, #-20]	; 0xffffffec
     31c:	e0823003 	add	r3, r2, r3
     320:	e5d33000 	ldrb	r3, [r3]
     324:	e51b0010 	ldr	r0, [r11, #-16]
     328:	e1a01003 	mov	r1, r3
     32c:	ebffffd1 	bl	278 <VIS_Uart_TxChar>
    *(red_LED_ptr) = 0x0; // turn off LEDR[0]
}

void VIS_Uart_Tx(volatile int * JTAG_UART_ptr, char * s, int size) {
    
    for (int i = 0; i < size; i++)
     330:	e51b3008 	ldr	r3, [r11, #-8]
     334:	e2833001 	add	r3, r3, #1
     338:	e50b3008 	str	r3, [r11, #-8]
     33c:	e51b2008 	ldr	r2, [r11, #-8]
     340:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
     344:	e1520003 	cmp	r2, r3
     348:	bafffff1 	blt	314 <VIS_Uart_Tx+0x24>
        VIS_Uart_TxChar(JTAG_UART_ptr, s[i]);
}
     34c:	e24bd004 	sub	sp, r11, #4
     350:	e8bd8800 	pop	{r11, pc}

00000354 <VIS_UART_TxInt>:

void VIS_UART_TxInt(volatile int * JTAG_UART_ptr, int num) {
     354:	e92d4800 	push	{r11, lr}
     358:	e28db004 	add	r11, sp, #4
     35c:	e24dd010 	sub	sp, sp, #16
     360:	e50b0010 	str	r0, [r11, #-16]
     364:	e50b1014 	str	r1, [r11, #-20]	; 0xffffffec
    if (num < 0) {
     368:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
     36c:	e3530000 	cmp	r3, #0
     370:	aa000005 	bge	38c <VIS_UART_TxInt+0x38>
        num = -num;
     374:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
     378:	e2633000 	rsb	r3, r3, #0
     37c:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
        VIS_Uart_TxChar(JTAG_UART_ptr, '-');
     380:	e51b0010 	ldr	r0, [r11, #-16]
     384:	e3a0102d 	mov	r1, #45	; 0x2d
     388:	ebffffba 	bl	278 <VIS_Uart_TxChar>
    }
    if (num < 10) {
     38c:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
     390:	e3530009 	cmp	r3, #9
     394:	ca000008 	bgt	3bc <VIS_UART_TxInt+0x68>
        VIS_Uart_TxChar(JTAG_UART_ptr, intToChar[num]);
     398:	e3073ee0 	movw	r3, #32480	; 0x7ee0
     39c:	e3403000 	movt	r3, #0
     3a0:	e51b2014 	ldr	r2, [r11, #-20]	; 0xffffffec
     3a4:	e0833002 	add	r3, r3, r2
     3a8:	e5d33000 	ldrb	r3, [r3]
     3ac:	e51b0010 	ldr	r0, [r11, #-16]
     3b0:	e1a01003 	mov	r1, r3
     3b4:	ebffffaf 	bl	278 <VIS_Uart_TxChar>
     3b8:	ea00002b 	b	46c <VIS_UART_TxInt+0x118>
    } else {
        int tens = 1;
     3bc:	e3a03001 	mov	r3, #1
     3c0:	e50b3008 	str	r3, [r11, #-8]
        while (num / tens > 0) tens *= 10;
     3c4:	ea000005 	b	3e0 <VIS_UART_TxInt+0x8c>
     3c8:	e51b2008 	ldr	r2, [r11, #-8]
     3cc:	e1a03002 	mov	r3, r2
     3d0:	e1a03103 	lsl	r3, r3, #2
     3d4:	e0833002 	add	r3, r3, r2
     3d8:	e1a03083 	lsl	r3, r3, #1
     3dc:	e50b3008 	str	r3, [r11, #-8]
     3e0:	e51b0014 	ldr	r0, [r11, #-20]	; 0xffffffec
     3e4:	e51b1008 	ldr	r1, [r11, #-8]
     3e8:	eb00187d 	bl	65e4 <__aeabi_idiv>
     3ec:	e1a03000 	mov	r3, r0
     3f0:	e3530000 	cmp	r3, #0
     3f4:	cafffff3 	bgt	3c8 <VIS_UART_TxInt+0x74>
        while (tens > 1) {
     3f8:	ea000018 	b	460 <VIS_UART_TxInt+0x10c>
            tens /= 10;
     3fc:	e51b2008 	ldr	r2, [r11, #-8]
     400:	e3063667 	movw	r3, #26215	; 0x6667
     404:	e3463666 	movt	r3, #26214	; 0x6666
     408:	e0c31293 	smull	r1, r3, r3, r2
     40c:	e1a01143 	asr	r1, r3, #2
     410:	e1a03fc2 	asr	r3, r2, #31
     414:	e0633001 	rsb	r3, r3, r1
     418:	e50b3008 	str	r3, [r11, #-8]
            VIS_Uart_TxChar(JTAG_UART_ptr, intToChar[num / tens]);
     41c:	e51b0014 	ldr	r0, [r11, #-20]	; 0xffffffec
     420:	e51b1008 	ldr	r1, [r11, #-8]
     424:	eb00186e 	bl	65e4 <__aeabi_idiv>
     428:	e1a03000 	mov	r3, r0
     42c:	e1a02003 	mov	r2, r3
     430:	e3073ee0 	movw	r3, #32480	; 0x7ee0
     434:	e3403000 	movt	r3, #0
     438:	e7d33002 	ldrb	r3, [r3, r2]
     43c:	e51b0010 	ldr	r0, [r11, #-16]
     440:	e1a01003 	mov	r1, r3
     444:	ebffff8b 	bl	278 <VIS_Uart_TxChar>
            num %= tens;
     448:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
     44c:	e1a00003 	mov	r0, r3
     450:	e51b1008 	ldr	r1, [r11, #-8]
     454:	eb0018ac 	bl	670c <__aeabi_idivmod>
     458:	e1a03001 	mov	r3, r1
     45c:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
    if (num < 10) {
        VIS_Uart_TxChar(JTAG_UART_ptr, intToChar[num]);
    } else {
        int tens = 1;
        while (num / tens > 0) tens *= 10;
        while (tens > 1) {
     460:	e51b3008 	ldr	r3, [r11, #-8]
     464:	e3530001 	cmp	r3, #1
     468:	caffffe3 	bgt	3fc <VIS_UART_TxInt+0xa8>
            tens /= 10;
            VIS_Uart_TxChar(JTAG_UART_ptr, intToChar[num / tens]);
            num %= tens;
        }
    }
}
     46c:	e24bd004 	sub	sp, r11, #4
     470:	e8bd8800 	pop	{r11, pc}

00000474 <VIS_UART_TxEnter>:

void VIS_UART_TxEnter(volatile int * JTAG_UART_ptr) {
     474:	e92d4800 	push	{r11, lr}
     478:	e28db004 	add	r11, sp, #4
     47c:	e24dd008 	sub	sp, sp, #8
     480:	e50b0008 	str	r0, [r11, #-8]
    VIS_Uart_TxChar(JTAG_UART_ptr, '\r');
     484:	e51b0008 	ldr	r0, [r11, #-8]
     488:	e3a0100d 	mov	r1, #13
     48c:	ebffff79 	bl	278 <VIS_Uart_TxChar>
    VIS_Uart_TxChar(JTAG_UART_ptr, '\n');
     490:	e51b0008 	ldr	r0, [r11, #-8]
     494:	e3a0100a 	mov	r1, #10
     498:	ebffff76 	bl	278 <VIS_Uart_TxChar>
}
     49c:	e24bd004 	sub	sp, r11, #4
     4a0:	e8bd8800 	pop	{r11, pc}

000004a4 <VIS_Uart_RxChar>:

char VIS_Uart_RxChar(volatile int * JTAG_UART_ptr) {
     4a4:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
     4a8:	e28db000 	add	r11, sp, #0
     4ac:	e24dd014 	sub	sp, sp, #20
     4b0:	e50b0010 	str	r0, [r11, #-16]
    int data;
    data = *(JTAG_UART_ptr); // read the JTAG_UART data register
     4b4:	e51b3010 	ldr	r3, [r11, #-16]
     4b8:	e5933000 	ldr	r3, [r3]
     4bc:	e50b3008 	str	r3, [r11, #-8]
    if (data & 0x00008000)   // check RVALID to see if there is new data
     4c0:	e51b3008 	ldr	r3, [r11, #-8]
     4c4:	e2033902 	and	r3, r3, #32768	; 0x8000
     4c8:	e3530000 	cmp	r3, #0
     4cc:	0a000002 	beq	4dc <VIS_Uart_RxChar+0x38>
        return ((char)data & 0xFF);
     4d0:	e51b3008 	ldr	r3, [r11, #-8]
     4d4:	e6ef3073 	uxtb	r3, r3
     4d8:	ea000000 	b	4e0 <VIS_Uart_RxChar+0x3c>
    else
        return ('\0');
     4dc:	e3a03000 	mov	r3, #0
}
     4e0:	e1a00003 	mov	r0, r3
     4e4:	e28bd000 	add	sp, r11, #0
     4e8:	e8bd0800 	ldmfd	sp!, {r11}
     4ec:	e12fff1e 	bx	lr

000004f0 <VIS_LED_Get>:
#include "LED.h"
#include "../values.h"

static volatile unsigned * red_LED_ptr = (unsigned *)0xFF200000;

unsigned VIS_LED_Get(unsigned index) {
     4f0:	e92d4800 	push	{r11, lr}
     4f4:	e28db004 	add	r11, sp, #4
     4f8:	e24dd010 	sub	sp, sp, #16
     4fc:	e50b0010 	str	r0, [r11, #-16]
#ifdef DEBUG
    if (index > 9) VIS_ERROR_Handler();    
     500:	e51b3010 	ldr	r3, [r11, #-16]
     504:	e3530009 	cmp	r3, #9
     508:	9a000000 	bls	510 <VIS_LED_Get+0x20>
     50c:	ebffff56 	bl	26c <VIS_ERROR_Handler>
#endif // DEBUG
    unsigned led = *(red_LED_ptr);
     510:	e30a36f4 	movw	r3, #42740	; 0xa6f4
     514:	e3403000 	movt	r3, #0
     518:	e5933000 	ldr	r3, [r3]
     51c:	e5933000 	ldr	r3, [r3]
     520:	e50b3008 	str	r3, [r11, #-8]
    return led & (0x1u << index);
     524:	e51b3010 	ldr	r3, [r11, #-16]
     528:	e3a02001 	mov	r2, #1
     52c:	e1a02312 	lsl	r2, r2, r3
     530:	e51b3008 	ldr	r3, [r11, #-8]
     534:	e0023003 	and	r3, r2, r3
}
     538:	e1a00003 	mov	r0, r3
     53c:	e24bd004 	sub	sp, r11, #4
     540:	e8bd8800 	pop	{r11, pc}

00000544 <VIS_LED_Set>:

void VIS_LED_Set(unsigned index, unsigned status) {
     544:	e92d4800 	push	{r11, lr}
     548:	e28db004 	add	r11, sp, #4
     54c:	e24dd010 	sub	sp, sp, #16
     550:	e50b0010 	str	r0, [r11, #-16]
     554:	e50b1014 	str	r1, [r11, #-20]	; 0xffffffec
#ifdef DEBUG
    if (index > 9) VIS_ERROR_Handler();    
     558:	e51b3010 	ldr	r3, [r11, #-16]
     55c:	e3530009 	cmp	r3, #9
     560:	9a000000 	bls	568 <VIS_LED_Set+0x24>
     564:	ebffff40 	bl	26c <VIS_ERROR_Handler>
    if (status != VIS_LED_SET && status != VIS_LED_RESET) VIS_ERROR_Handler();
     568:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
     56c:	e3530001 	cmp	r3, #1
     570:	0a000003 	beq	584 <VIS_LED_Set+0x40>
     574:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
     578:	e3530000 	cmp	r3, #0
     57c:	0a000000 	beq	584 <VIS_LED_Set+0x40>
     580:	ebffff39 	bl	26c <VIS_ERROR_Handler>
#endif // DEBUG
    unsigned led = *(red_LED_ptr);
     584:	e30a36f4 	movw	r3, #42740	; 0xa6f4
     588:	e3403000 	movt	r3, #0
     58c:	e5933000 	ldr	r3, [r3]
     590:	e5933000 	ldr	r3, [r3]
     594:	e50b3008 	str	r3, [r11, #-8]
    if (status == VIS_LED_SET) {
     598:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
     59c:	e3530001 	cmp	r3, #1
     5a0:	1a000006 	bne	5c0 <VIS_LED_Set+0x7c>
        led |= 0x1u << index;
     5a4:	e51b3010 	ldr	r3, [r11, #-16]
     5a8:	e3a02001 	mov	r2, #1
     5ac:	e1a03312 	lsl	r3, r2, r3
     5b0:	e51b2008 	ldr	r2, [r11, #-8]
     5b4:	e1823003 	orr	r3, r2, r3
     5b8:	e50b3008 	str	r3, [r11, #-8]
     5bc:	ea000006 	b	5dc <VIS_LED_Set+0x98>
    } else {
        led &= ~(0x1u << index);
     5c0:	e51b3010 	ldr	r3, [r11, #-16]
     5c4:	e3a02001 	mov	r2, #1
     5c8:	e1a03312 	lsl	r3, r2, r3
     5cc:	e1e03003 	mvn	r3, r3
     5d0:	e51b2008 	ldr	r2, [r11, #-8]
     5d4:	e0023003 	and	r3, r2, r3
     5d8:	e50b3008 	str	r3, [r11, #-8]
    }
    *(red_LED_ptr) = led;
     5dc:	e30a36f4 	movw	r3, #42740	; 0xa6f4
     5e0:	e3403000 	movt	r3, #0
     5e4:	e5933000 	ldr	r3, [r3]
     5e8:	e51b2008 	ldr	r2, [r11, #-8]
     5ec:	e5832000 	str	r2, [r3]
}
     5f0:	e24bd004 	sub	sp, r11, #4
     5f4:	e8bd8800 	pop	{r11, pc}

000005f8 <VIS_LED_Toggle>:

unsigned VIS_LED_Toggle(unsigned index) {
     5f8:	e92d4800 	push	{r11, lr}
     5fc:	e28db004 	add	r11, sp, #4
     600:	e24dd010 	sub	sp, sp, #16
     604:	e50b0010 	str	r0, [r11, #-16]
#ifdef DEBUG
    if (index > 9) VIS_ERROR_Handler();    
     608:	e51b3010 	ldr	r3, [r11, #-16]
     60c:	e3530009 	cmp	r3, #9
     610:	9a000000 	bls	618 <VIS_LED_Toggle+0x20>
     614:	ebffff14 	bl	26c <VIS_ERROR_Handler>
#endif // DEBUG
    unsigned led = *(red_LED_ptr);
     618:	e30a36f4 	movw	r3, #42740	; 0xa6f4
     61c:	e3403000 	movt	r3, #0
     620:	e5933000 	ldr	r3, [r3]
     624:	e5933000 	ldr	r3, [r3]
     628:	e50b3008 	str	r3, [r11, #-8]
    led ^= 0x1u << index;
     62c:	e51b3010 	ldr	r3, [r11, #-16]
     630:	e3a02001 	mov	r2, #1
     634:	e1a03312 	lsl	r3, r2, r3
     638:	e51b2008 	ldr	r2, [r11, #-8]
     63c:	e0223003 	eor	r3, r2, r3
     640:	e50b3008 	str	r3, [r11, #-8]
    *(red_LED_ptr) = led;
     644:	e30a36f4 	movw	r3, #42740	; 0xa6f4
     648:	e3403000 	movt	r3, #0
     64c:	e5933000 	ldr	r3, [r3]
     650:	e51b2008 	ldr	r2, [r11, #-8]
     654:	e5832000 	str	r2, [r3]
    return led & (0x1u << index);
     658:	e51b3010 	ldr	r3, [r11, #-16]
     65c:	e3a02001 	mov	r2, #1
     660:	e1a02312 	lsl	r2, r2, r3
     664:	e51b3008 	ldr	r3, [r11, #-8]
     668:	e0023003 	and	r3, r2, r3
}
     66c:	e1a00003 	mov	r0, r3
     670:	e24bd004 	sub	sp, r11, #4
     674:	e8bd8800 	pop	{r11, pc}

00000678 <VIS_LED_SetAll>:

void VIS_LED_SetAll() {
     678:	e92d4800 	push	{r11, lr}
     67c:	e28db004 	add	r11, sp, #4
     680:	e24dd008 	sub	sp, sp, #8
    for (unsigned i = 0; i <= 9; i++) {
     684:	e3a03000 	mov	r3, #0
     688:	e50b3008 	str	r3, [r11, #-8]
     68c:	ea000005 	b	6a8 <VIS_LED_SetAll+0x30>
        VIS_LED_Set(i, VIS_LED_SET);
     690:	e51b0008 	ldr	r0, [r11, #-8]
     694:	e3a01001 	mov	r1, #1
     698:	ebffffa9 	bl	544 <VIS_LED_Set>
    *(red_LED_ptr) = led;
    return led & (0x1u << index);
}

void VIS_LED_SetAll() {
    for (unsigned i = 0; i <= 9; i++) {
     69c:	e51b3008 	ldr	r3, [r11, #-8]
     6a0:	e2833001 	add	r3, r3, #1
     6a4:	e50b3008 	str	r3, [r11, #-8]
     6a8:	e51b3008 	ldr	r3, [r11, #-8]
     6ac:	e3530009 	cmp	r3, #9
     6b0:	9afffff6 	bls	690 <VIS_LED_SetAll+0x18>
        VIS_LED_Set(i, VIS_LED_SET);
    }
}
     6b4:	e24bd004 	sub	sp, r11, #4
     6b8:	e8bd8800 	pop	{r11, pc}

000006bc <VIS_LED_ResetAll>:
void VIS_LED_ResetAll() {
     6bc:	e92d4800 	push	{r11, lr}
     6c0:	e28db004 	add	r11, sp, #4
     6c4:	e24dd008 	sub	sp, sp, #8
    for (unsigned i = 0; i <= 9; i++) {
     6c8:	e3a03000 	mov	r3, #0
     6cc:	e50b3008 	str	r3, [r11, #-8]
     6d0:	ea000005 	b	6ec <VIS_LED_ResetAll+0x30>
        VIS_LED_Set(i, VIS_LED_RESET);
     6d4:	e51b0008 	ldr	r0, [r11, #-8]
     6d8:	e3a01000 	mov	r1, #0
     6dc:	ebffff98 	bl	544 <VIS_LED_Set>
    for (unsigned i = 0; i <= 9; i++) {
        VIS_LED_Set(i, VIS_LED_SET);
    }
}
void VIS_LED_ResetAll() {
    for (unsigned i = 0; i <= 9; i++) {
     6e0:	e51b3008 	ldr	r3, [r11, #-8]
     6e4:	e2833001 	add	r3, r3, #1
     6e8:	e50b3008 	str	r3, [r11, #-8]
     6ec:	e51b3008 	ldr	r3, [r11, #-8]
     6f0:	e3530009 	cmp	r3, #9
     6f4:	9afffff6 	bls	6d4 <VIS_LED_ResetAll+0x18>
        VIS_LED_Set(i, VIS_LED_RESET);
    }
     6f8:	e24bd004 	sub	sp, r11, #4
     6fc:	e8bd8800 	pop	{r11, pc}

00000700 <VIS_HEX_Set>:
    [0x4] = 0b1100110, 0b1101101, 0b11111101, 0b111,
    [0x8] = 0b1111111, 0b1101111, 0b1110111, 0b1111100, 
    [0xC] = 0b111001, 0b1011110, 0b1111001, 0b1110001
};

void VIS_HEX_Set(unsigned index, unsigned data) {
     700:	e92d4800 	push	{r11, lr}
     704:	e28db004 	add	r11, sp, #4
     708:	e24dd010 	sub	sp, sp, #16
     70c:	e50b0010 	str	r0, [r11, #-16]
     710:	e50b1014 	str	r1, [r11, #-20]	; 0xffffffec
#ifdef DEBUG
    if (index > 6) VIS_ERROR_Handler();
     714:	e51b3010 	ldr	r3, [r11, #-16]
     718:	e3530006 	cmp	r3, #6
     71c:	9a000000 	bls	724 <VIS_HEX_Set+0x24>
     720:	ebfffed1 	bl	26c <VIS_ERROR_Handler>
#endif // DEBUG
    data &= 0x7F;
     724:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
     728:	e203307f 	and	r3, r3, #127	; 0x7f
     72c:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
    if (index < 4) {
     730:	e51b3010 	ldr	r3, [r11, #-16]
     734:	e3530003 	cmp	r3, #3
     738:	8a000017 	bhi	79c <VIS_HEX_Set+0x9c>
        // HEX 0 ~ 3
        unsigned original = *(HEX3_HEX0_ptr);
     73c:	e30a36f8 	movw	r3, #42744	; 0xa6f8
     740:	e3403000 	movt	r3, #0
     744:	e5933000 	ldr	r3, [r3]
     748:	e5933000 	ldr	r3, [r3]
     74c:	e50b3008 	str	r3, [r11, #-8]
        // clear the byte
        original &= ~(0xFF << (index << 3));
     750:	e51b3010 	ldr	r3, [r11, #-16]
     754:	e1a03183 	lsl	r3, r3, #3
     758:	e3a020ff 	mov	r2, #255	; 0xff
     75c:	e1a03312 	lsl	r3, r2, r3
     760:	e1e03003 	mvn	r3, r3
     764:	e51b2008 	ldr	r2, [r11, #-8]
     768:	e0023003 	and	r3, r2, r3
     76c:	e50b3008 	str	r3, [r11, #-8]
        *(HEX3_HEX0_ptr) = original | (data << (index << 3));
     770:	e30a36f8 	movw	r3, #42744	; 0xa6f8
     774:	e3403000 	movt	r3, #0
     778:	e5933000 	ldr	r3, [r3]
     77c:	e51b2010 	ldr	r2, [r11, #-16]
     780:	e1a02182 	lsl	r2, r2, #3
     784:	e51b1014 	ldr	r1, [r11, #-20]	; 0xffffffec
     788:	e1a01211 	lsl	r1, r1, r2
     78c:	e51b2008 	ldr	r2, [r11, #-8]
     790:	e1812002 	orr	r2, r1, r2
     794:	e5832000 	str	r2, [r3]
     798:	ea000018 	b	800 <VIS_HEX_Set+0x100>
    } else {
        // HEX 4 ~ 5
        unsigned original = *(HEX5_HEX4_ptr);
     79c:	e30a36fc 	movw	r3, #42748	; 0xa6fc
     7a0:	e3403000 	movt	r3, #0
     7a4:	e5933000 	ldr	r3, [r3]
     7a8:	e5933000 	ldr	r3, [r3]
     7ac:	e50b300c 	str	r3, [r11, #-12]
        // clear the byte
        original &= ~(0xFF << ((index - 4) << 3));
     7b0:	e51b3010 	ldr	r3, [r11, #-16]
     7b4:	e2433004 	sub	r3, r3, #4
     7b8:	e1a03183 	lsl	r3, r3, #3
     7bc:	e3a020ff 	mov	r2, #255	; 0xff
     7c0:	e1a03312 	lsl	r3, r2, r3
     7c4:	e1e03003 	mvn	r3, r3
     7c8:	e51b200c 	ldr	r2, [r11, #-12]
     7cc:	e0023003 	and	r3, r2, r3
     7d0:	e50b300c 	str	r3, [r11, #-12]
        *(HEX5_HEX4_ptr) = original | (data << ((index - 4) << 3));
     7d4:	e30a36fc 	movw	r3, #42748	; 0xa6fc
     7d8:	e3403000 	movt	r3, #0
     7dc:	e5933000 	ldr	r3, [r3]
     7e0:	e51b2010 	ldr	r2, [r11, #-16]
     7e4:	e2422004 	sub	r2, r2, #4
     7e8:	e1a02182 	lsl	r2, r2, #3
     7ec:	e51b1014 	ldr	r1, [r11, #-20]	; 0xffffffec
     7f0:	e1a01211 	lsl	r1, r1, r2
     7f4:	e51b200c 	ldr	r2, [r11, #-12]
     7f8:	e1812002 	orr	r2, r1, r2
     7fc:	e5832000 	str	r2, [r3]
    }
}
     800:	e24bd004 	sub	sp, r11, #4
     804:	e8bd8800 	pop	{r11, pc}

00000808 <VIS_HEX_SetDigit>:

void VIS_HEX_SetDigit(unsigned index, unsigned data) {
     808:	e92d4800 	push	{r11, lr}
     80c:	e28db004 	add	r11, sp, #4
     810:	e24dd008 	sub	sp, sp, #8
     814:	e50b0008 	str	r0, [r11, #-8]
     818:	e50b100c 	str	r1, [r11, #-12]
#ifdef DEBUG
    if (index > 6) VIS_ERROR_Handler();
     81c:	e51b3008 	ldr	r3, [r11, #-8]
     820:	e3530006 	cmp	r3, #6
     824:	9a000000 	bls	82c <VIS_HEX_SetDigit+0x24>
     828:	ebfffe8f 	bl	26c <VIS_ERROR_Handler>
    if (data > 0xF) VIS_ERROR_Handler();
     82c:	e51b300c 	ldr	r3, [r11, #-12]
     830:	e353000f 	cmp	r3, #15
     834:	9a000000 	bls	83c <VIS_HEX_SetDigit+0x34>
     838:	ebfffe8b 	bl	26c <VIS_ERROR_Handler>
#endif // DEBUG
    VIS_HEX_Set(index, HEX_HEXs[data]);
     83c:	e30a3700 	movw	r3, #42752	; 0xa700
     840:	e3403000 	movt	r3, #0
     844:	e51b200c 	ldr	r2, [r11, #-12]
     848:	e7933102 	ldr	r3, [r3, r2, lsl #2]
     84c:	e51b0008 	ldr	r0, [r11, #-8]
     850:	e1a01003 	mov	r1, r3
     854:	ebffffa9 	bl	700 <VIS_HEX_Set>
}
     858:	e24bd004 	sub	sp, r11, #4
     85c:	e8bd8800 	pop	{r11, pc}

00000860 <VIS_HEX_SetUint_HEX>:

void VIS_HEX_SetUint_HEX(unsigned data) {
     860:	e92d4800 	push	{r11, lr}
     864:	e28db004 	add	r11, sp, #4
     868:	e24dd010 	sub	sp, sp, #16
     86c:	e50b0010 	str	r0, [r11, #-16]
    data &= 0xFFFFFF;
     870:	e51b3010 	ldr	r3, [r11, #-16]
     874:	e3c334ff 	bic	r3, r3, #-16777216	; 0xff000000
     878:	e50b3010 	str	r3, [r11, #-16]
    for (unsigned i = 0; i <= 5; i++) {
     87c:	e3a03000 	mov	r3, #0
     880:	e50b3008 	str	r3, [r11, #-8]
     884:	ea00000a 	b	8b4 <VIS_HEX_SetUint_HEX+0x54>
        VIS_HEX_SetDigit(i, data & (0xF));
     888:	e51b3010 	ldr	r3, [r11, #-16]
     88c:	e203300f 	and	r3, r3, #15
     890:	e51b0008 	ldr	r0, [r11, #-8]
     894:	e1a01003 	mov	r1, r3
     898:	ebffffda 	bl	808 <VIS_HEX_SetDigit>
        data >>= 4;
     89c:	e51b3010 	ldr	r3, [r11, #-16]
     8a0:	e1a03223 	lsr	r3, r3, #4
     8a4:	e50b3010 	str	r3, [r11, #-16]
    VIS_HEX_Set(index, HEX_HEXs[data]);
}

void VIS_HEX_SetUint_HEX(unsigned data) {
    data &= 0xFFFFFF;
    for (unsigned i = 0; i <= 5; i++) {
     8a8:	e51b3008 	ldr	r3, [r11, #-8]
     8ac:	e2833001 	add	r3, r3, #1
     8b0:	e50b3008 	str	r3, [r11, #-8]
     8b4:	e51b3008 	ldr	r3, [r11, #-8]
     8b8:	e3530005 	cmp	r3, #5
     8bc:	9afffff1 	bls	888 <VIS_HEX_SetUint_HEX+0x28>
        VIS_HEX_SetDigit(i, data & (0xF));
        data >>= 4;
    }
}
     8c0:	e24bd004 	sub	sp, r11, #4
     8c4:	e8bd8800 	pop	{r11, pc}

000008c8 <VIS_HEX_SetUint_DEC>:

void VIS_HEX_SetUint_DEC(unsigned data) {
     8c8:	e92d4800 	push	{r11, lr}
     8cc:	e28db004 	add	r11, sp, #4
     8d0:	e24dd010 	sub	sp, sp, #16
     8d4:	e50b0010 	str	r0, [r11, #-16]
    data %= 1000000;
     8d8:	e51b2010 	ldr	r2, [r11, #-16]
     8dc:	e30d3e83 	movw	r3, #56963	; 0xde83
     8e0:	e344331b 	movt	r3, #17179	; 0x431b
     8e4:	e0831293 	umull	r1, r3, r3, r2
     8e8:	e1a01923 	lsr	r1, r3, #18
     8ec:	e3043240 	movw	r3, #16960	; 0x4240
     8f0:	e340300f 	movt	r3, #15
     8f4:	e0030193 	mul	r3, r3, r1
     8f8:	e0633002 	rsb	r3, r3, r2
     8fc:	e50b3010 	str	r3, [r11, #-16]
    for (unsigned i = 0; i <= 5; i++) {
     900:	e3a03000 	mov	r3, #0
     904:	e50b3008 	str	r3, [r11, #-8]
     908:	ea000015 	b	964 <VIS_HEX_SetUint_DEC+0x9c>
        VIS_HEX_SetDigit(i, data %10);
     90c:	e51b1010 	ldr	r1, [r11, #-16]
     910:	e30c3ccd 	movw	r3, #52429	; 0xcccd
     914:	e34c3ccc 	movt	r3, #52428	; 0xcccc
     918:	e0832193 	umull	r2, r3, r3, r1
     91c:	e1a021a3 	lsr	r2, r3, #3
     920:	e1a03002 	mov	r3, r2
     924:	e1a03103 	lsl	r3, r3, #2
     928:	e0833002 	add	r3, r3, r2
     92c:	e1a03083 	lsl	r3, r3, #1
     930:	e0632001 	rsb	r2, r3, r1
     934:	e51b0008 	ldr	r0, [r11, #-8]
     938:	e1a01002 	mov	r1, r2
     93c:	ebffffb1 	bl	808 <VIS_HEX_SetDigit>
        data /= 10;
     940:	e51b2010 	ldr	r2, [r11, #-16]
     944:	e30c3ccd 	movw	r3, #52429	; 0xcccd
     948:	e34c3ccc 	movt	r3, #52428	; 0xcccc
     94c:	e0831293 	umull	r1, r3, r3, r2
     950:	e1a031a3 	lsr	r3, r3, #3
     954:	e50b3010 	str	r3, [r11, #-16]
    }
}

void VIS_HEX_SetUint_DEC(unsigned data) {
    data %= 1000000;
    for (unsigned i = 0; i <= 5; i++) {
     958:	e51b3008 	ldr	r3, [r11, #-8]
     95c:	e2833001 	add	r3, r3, #1
     960:	e50b3008 	str	r3, [r11, #-8]
     964:	e51b3008 	ldr	r3, [r11, #-8]
     968:	e3530005 	cmp	r3, #5
     96c:	9affffe6 	bls	90c <VIS_HEX_SetUint_DEC+0x44>
        VIS_HEX_SetDigit(i, data %10);
        data /= 10;
    }
     970:	e24bd004 	sub	sp, r11, #4
     974:	e8bd8800 	pop	{r11, pc}

00000978 <led_test>:

static volatile int *JTAG_UART_ptr = (int *)JTAG_UART_BASE; // JTAG UART address
static volatile int * audio_ptr   = (int *)AUDIO_BASE; // Audio in address

// LED test passed
void led_test() {
     978:	e92d4800 	push	{r11, lr}
     97c:	e28db004 	add	r11, sp, #4
    VIS_LED_Set(1, VIS_LED_SET);
     980:	e3a00001 	mov	r0, #1
     984:	e3a01001 	mov	r1, #1
     988:	ebfffeed 	bl	544 <VIS_LED_Set>
    VIS_LED_Set(3, VIS_LED_SET);
     98c:	e3a00003 	mov	r0, #3
     990:	e3a01001 	mov	r1, #1
     994:	ebfffeea 	bl	544 <VIS_LED_Set>
    VIS_LED_Set(5, VIS_LED_SET);
     998:	e3a00005 	mov	r0, #5
     99c:	e3a01001 	mov	r1, #1
     9a0:	ebfffee7 	bl	544 <VIS_LED_Set>
    VIS_LED_Set(7, VIS_LED_SET);
     9a4:	e3a00007 	mov	r0, #7
     9a8:	e3a01001 	mov	r1, #1
     9ac:	ebfffee4 	bl	544 <VIS_LED_Set>
    VIS_LED_Toggle(9);
     9b0:	e3a00009 	mov	r0, #9
     9b4:	ebffff0f 	bl	5f8 <VIS_LED_Toggle>
    VIS_LED_Toggle(2);
     9b8:	e3a00002 	mov	r0, #2
     9bc:	ebffff0d 	bl	5f8 <VIS_LED_Toggle>
    VIS_LED_Toggle(2);
     9c0:	e3a00002 	mov	r0, #2
     9c4:	ebffff0b 	bl	5f8 <VIS_LED_Toggle>
    VIS_LED_Set(4, VIS_LED_SET);
     9c8:	e3a00004 	mov	r0, #4
     9cc:	e3a01001 	mov	r1, #1
     9d0:	ebfffedb 	bl	544 <VIS_LED_Set>
    VIS_LED_Set(4, VIS_LED_RESET);
     9d4:	e3a00004 	mov	r0, #4
     9d8:	e3a01000 	mov	r1, #0
     9dc:	ebfffed8 	bl	544 <VIS_LED_Set>
}
     9e0:	e8bd8800 	pop	{r11, pc}

000009e4 <audio_test>:

void audio_test() {
     9e4:	e92d4800 	push	{r11, lr}
     9e8:	e28db004 	add	r11, sp, #4
     9ec:	e24ddc19 	sub	sp, sp, #6400	; 0x1900
     9f0:	e24dd008 	sub	sp, sp, #8
 /* used for audio record/playback */
    int fifospace, buffer_index = 0;
     9f4:	e3a03000 	mov	r3, #0
     9f8:	e50b3008 	str	r3, [r11, #-8]
    int left_buffer[BUF_SIZE];
    int right_buffer[BUF_SIZE];

    fifospace = *(audio_ptr + 1); // read the audio port fifospace register
     9fc:	e30a3744 	movw	r3, #42820	; 0xa744
     a00:	e3403000 	movt	r3, #0
     a04:	e5933000 	ldr	r3, [r3]
     a08:	e5933004 	ldr	r3, [r3, #4]
     a0c:	e50b300c 	str	r3, [r11, #-12]
        // is full
        // while ((fifospace & 0x000000FF) && (buffer_index < BUF_SIZE)) {
        while(1) {
            // left_buffer[buffer_index]  = *(audio_ptr + 2);
            // right_buffer[buffer_index] = *(audio_ptr + 3);
            while (!(fifospace & 0x000000FF));
     a10:	ea000000 	b	a18 <audio_test+0x34>
            if (VIS_Uart_RxChar(JTAG_UART_ptr) != 0) {
                // reset counter
                buffer_index = 0;
            }
            // fifospace = *(audio_ptr + 1); // read the audio port fifospace register
        }
     a14:	e1a00000 	nop			; (mov r0, r0)
        // is full
        // while ((fifospace & 0x000000FF) && (buffer_index < BUF_SIZE)) {
        while(1) {
            // left_buffer[buffer_index]  = *(audio_ptr + 2);
            // right_buffer[buffer_index] = *(audio_ptr + 3);
            while (!(fifospace & 0x000000FF));
     a18:	e1a00000 	nop			; (mov r0, r0)
     a1c:	e51b300c 	ldr	r3, [r11, #-12]
     a20:	e6ef3073 	uxtb	r3, r3
     a24:	e3530000 	cmp	r3, #0
     a28:	0afffffb 	beq	a1c <audio_test+0x38>
            *(audio_ptr + 2)  = *(audio_ptr + 2) >> 6;
     a2c:	e30a3744 	movw	r3, #42820	; 0xa744
     a30:	e3403000 	movt	r3, #0
     a34:	e5933000 	ldr	r3, [r3]
     a38:	e2832008 	add	r2, r3, #8
     a3c:	e30a3744 	movw	r3, #42820	; 0xa744
     a40:	e3403000 	movt	r3, #0
     a44:	e5933000 	ldr	r3, [r3]
     a48:	e2833008 	add	r3, r3, #8
     a4c:	e5933000 	ldr	r3, [r3]
     a50:	e1a03343 	asr	r3, r3, #6
     a54:	e5823000 	str	r3, [r2]
            *(audio_ptr + 3)  = *(audio_ptr + 3) >> 6;
     a58:	e30a3744 	movw	r3, #42820	; 0xa744
     a5c:	e3403000 	movt	r3, #0
     a60:	e5933000 	ldr	r3, [r3]
     a64:	e283200c 	add	r2, r3, #12
     a68:	e30a3744 	movw	r3, #42820	; 0xa744
     a6c:	e3403000 	movt	r3, #0
     a70:	e5933000 	ldr	r3, [r3]
     a74:	e283300c 	add	r3, r3, #12
     a78:	e5933000 	ldr	r3, [r3]
     a7c:	e1a03343 	asr	r3, r3, #6
     a80:	e5823000 	str	r3, [r2]
            ++buffer_index;
     a84:	e51b3008 	ldr	r3, [r11, #-8]
     a88:	e2833001 	add	r3, r3, #1
     a8c:	e50b3008 	str	r3, [r11, #-8]
            if (buffer_index >= 0xFFFFFF) buffer_index = 0;
     a90:	e51b2008 	ldr	r2, [r11, #-8]
     a94:	e30f3ffe 	movw	r3, #65534	; 0xfffe
     a98:	e34030ff 	movt	r3, #255	; 0xff
     a9c:	e1520003 	cmp	r2, r3
     aa0:	da000001 	ble	aac <audio_test+0xc8>
     aa4:	e3a03000 	mov	r3, #0
     aa8:	e50b3008 	str	r3, [r11, #-8]
            VIS_HEX_SetUint_HEX(buffer_index);
     aac:	e51b3008 	ldr	r3, [r11, #-8]
     ab0:	e1a00003 	mov	r0, r3
     ab4:	ebffff69 	bl	860 <VIS_HEX_SetUint_HEX>
            if (VIS_Uart_RxChar(JTAG_UART_ptr) != 0) {
     ab8:	e30a3740 	movw	r3, #42816	; 0xa740
     abc:	e3403000 	movt	r3, #0
     ac0:	e5933000 	ldr	r3, [r3]
     ac4:	e1a00003 	mov	r0, r3
     ac8:	ebfffe75 	bl	4a4 <VIS_Uart_RxChar>
     acc:	e1a03000 	mov	r3, r0
     ad0:	e3530000 	cmp	r3, #0
     ad4:	0affffce 	beq	a14 <audio_test+0x30>
                // reset counter
                buffer_index = 0;
     ad8:	e3a03000 	mov	r3, #0
     adc:	e50b3008 	str	r3, [r11, #-8]
            }
            // fifospace = *(audio_ptr + 1); // read the audio port fifospace register
        }
     ae0:	eaffffcb 	b	a14 <audio_test+0x30>

00000ae4 <uart_test>:
        VIS_UART_TxInt(JTAG_UART_ptr, left_buffer[i]);
        VIS_Uart_Tx(JTAG_UART_ptr, "\r\n", strlen("\r\n"));
    }
}

void uart_test() {
     ae4:	e92d4810 	push	{r4, r11, lr}
     ae8:	e28db008 	add	r11, sp, #8
     aec:	e24dd024 	sub	sp, sp, #36	; 0x24
    
    char text_string[] = "\nJTAG UART test\n> \0";
     af0:	e3073eec 	movw	r3, #32492	; 0x7eec
     af4:	e3403000 	movt	r3, #0
     af8:	e24bc028 	sub	r12, r11, #40	; 0x28
     afc:	e1a0e003 	mov	lr, r3
     b00:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
     b04:	e8ac000f 	stmia	r12!, {r0, r1, r2, r3}
     b08:	e59e3000 	ldr	r3, [lr]
     b0c:	e58c3000 	str	r3, [r12]
    char c;

    VIS_Uart_Tx(JTAG_UART_ptr, text_string, strlen(text_string));
     b10:	e30a3740 	movw	r3, #42816	; 0xa740
     b14:	e3403000 	movt	r3, #0
     b18:	e5934000 	ldr	r4, [r3]
     b1c:	e24b3028 	sub	r3, r11, #40	; 0x28
     b20:	e1a00003 	mov	r0, r3
     b24:	eb001bdc 	bl	7a9c <strlen>
     b28:	e1a03000 	mov	r3, r0
     b2c:	e24b2028 	sub	r2, r11, #40	; 0x28
     b30:	e1a00004 	mov	r0, r4
     b34:	e1a01002 	mov	r1, r2
     b38:	e1a02003 	mov	r2, r3
     b3c:	ebfffdeb 	bl	2f0 <VIS_Uart_Tx>

    for (int i = 0; i < BUF_SIZE; i++) {
     b40:	e3a03000 	mov	r3, #0
     b44:	e50b3010 	str	r3, [r11, #-16]
     b48:	ea00000e 	b	b88 <uart_test+0xa4>
        VIS_UART_TxInt(JTAG_UART_ptr, i);
     b4c:	e30a3740 	movw	r3, #42816	; 0xa740
     b50:	e3403000 	movt	r3, #0
     b54:	e5933000 	ldr	r3, [r3]
     b58:	e1a00003 	mov	r0, r3
     b5c:	e51b1010 	ldr	r1, [r11, #-16]
     b60:	ebfffdfb 	bl	354 <VIS_UART_TxInt>
        VIS_Uart_TxChar(JTAG_UART_ptr, ' ');
     b64:	e30a3740 	movw	r3, #42816	; 0xa740
     b68:	e3403000 	movt	r3, #0
     b6c:	e5933000 	ldr	r3, [r3]
     b70:	e1a00003 	mov	r0, r3
     b74:	e3a01020 	mov	r1, #32
     b78:	ebfffdbe 	bl	278 <VIS_Uart_TxChar>
    char text_string[] = "\nJTAG UART test\n> \0";
    char c;

    VIS_Uart_Tx(JTAG_UART_ptr, text_string, strlen(text_string));

    for (int i = 0; i < BUF_SIZE; i++) {
     b7c:	e51b3010 	ldr	r3, [r11, #-16]
     b80:	e2833001 	add	r3, r3, #1
     b84:	e50b3010 	str	r3, [r11, #-16]
     b88:	e51b2010 	ldr	r2, [r11, #-16]
     b8c:	e300331f 	movw	r3, #799	; 0x31f
     b90:	e1520003 	cmp	r2, r3
     b94:	daffffec 	ble	b4c <uart_test+0x68>
     b98:	ea000000 	b	ba0 <uart_test+0xbc>
        if (c != '\0') {
            VIS_Uart_Tx(JTAG_UART_ptr, text_string, strlen(text_string));

            VIS_Uart_TxChar(JTAG_UART_ptr, c);
        }
    }
     b9c:	e1a00000 	nop			; (mov r0, r0)
    }

    /* read and echo characters */
    while (1)
    {
        c = VIS_Uart_RxChar(JTAG_UART_ptr);
     ba0:	e30a3740 	movw	r3, #42816	; 0xa740
     ba4:	e3403000 	movt	r3, #0
     ba8:	e5933000 	ldr	r3, [r3]
     bac:	e1a00003 	mov	r0, r3
     bb0:	ebfffe3b 	bl	4a4 <VIS_Uart_RxChar>
     bb4:	e1a03000 	mov	r3, r0
     bb8:	e54b3011 	strb	r3, [r11, #-17]	; 0xffffffef
        if (c != '\0') {
     bbc:	e55b3011 	ldrb	r3, [r11, #-17]	; 0xffffffef
     bc0:	e3530000 	cmp	r3, #0
     bc4:	0afffff4 	beq	b9c <uart_test+0xb8>
            VIS_Uart_Tx(JTAG_UART_ptr, text_string, strlen(text_string));
     bc8:	e30a3740 	movw	r3, #42816	; 0xa740
     bcc:	e3403000 	movt	r3, #0
     bd0:	e5934000 	ldr	r4, [r3]
     bd4:	e24b3028 	sub	r3, r11, #40	; 0x28
     bd8:	e1a00003 	mov	r0, r3
     bdc:	eb001bae 	bl	7a9c <strlen>
     be0:	e1a03000 	mov	r3, r0
     be4:	e24b2028 	sub	r2, r11, #40	; 0x28
     be8:	e1a00004 	mov	r0, r4
     bec:	e1a01002 	mov	r1, r2
     bf0:	e1a02003 	mov	r2, r3
     bf4:	ebfffdbd 	bl	2f0 <VIS_Uart_Tx>

            VIS_Uart_TxChar(JTAG_UART_ptr, c);
     bf8:	e30a3740 	movw	r3, #42816	; 0xa740
     bfc:	e3403000 	movt	r3, #0
     c00:	e5932000 	ldr	r2, [r3]
     c04:	e55b3011 	ldrb	r3, [r11, #-17]	; 0xffffffef
     c08:	e1a00002 	mov	r0, r2
     c0c:	e1a01003 	mov	r1, r3
     c10:	ebfffd98 	bl	278 <VIS_Uart_TxChar>
        }
    }
     c14:	eaffffe0 	b	b9c <uart_test+0xb8>

00000c18 <hex_test>:
}

void hex_test() {
     c18:	e92d4810 	push	{r4, r11, lr}
     c1c:	e28db008 	add	r11, sp, #8
     c20:	e24dd024 	sub	sp, sp, #36	; 0x24
    char text_string[] = "\nPress any key to continue\n> \0";
     c24:	e3073f00 	movw	r3, #32512	; 0x7f00
     c28:	e3403000 	movt	r3, #0
     c2c:	e24bc02c 	sub	r12, r11, #44	; 0x2c
     c30:	e1a0e003 	mov	lr, r3
     c34:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
     c38:	e8ac000f 	stmia	r12!, {r0, r1, r2, r3}
     c3c:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
     c40:	e8ac0007 	stmia	r12!, {r0, r1, r2}
     c44:	e1cc30b0 	strh	r3, [r12]
     c48:	e28cc002 	add	r12, r12, #2
     c4c:	e1a03823 	lsr	r3, r3, #16
     c50:	e5cc3000 	strb	r3, [r12]
    VIS_HEX_Set(0, (0x1U << 6) + 0x1U);
     c54:	e3a00000 	mov	r0, #0
     c58:	e3a01041 	mov	r1, #65	; 0x41
     c5c:	ebfffea7 	bl	700 <VIS_HEX_Set>
    VIS_Uart_Tx(JTAG_UART_ptr, text_string, strlen(text_string));
     c60:	e30a3740 	movw	r3, #42816	; 0xa740
     c64:	e3403000 	movt	r3, #0
     c68:	e5934000 	ldr	r4, [r3]
     c6c:	e24b302c 	sub	r3, r11, #44	; 0x2c
     c70:	e1a00003 	mov	r0, r3
     c74:	eb001b88 	bl	7a9c <strlen>
     c78:	e1a03000 	mov	r3, r0
     c7c:	e24b202c 	sub	r2, r11, #44	; 0x2c
     c80:	e1a00004 	mov	r0, r4
     c84:	e1a01002 	mov	r1, r2
     c88:	e1a02003 	mov	r2, r3
     c8c:	ebfffd97 	bl	2f0 <VIS_Uart_Tx>
    while(VIS_Uart_RxChar(JTAG_UART_ptr) == '\0');
     c90:	e1a00000 	nop			; (mov r0, r0)
     c94:	e30a3740 	movw	r3, #42816	; 0xa740
     c98:	e3403000 	movt	r3, #0
     c9c:	e5933000 	ldr	r3, [r3]
     ca0:	e1a00003 	mov	r0, r3
     ca4:	ebfffdfe 	bl	4a4 <VIS_Uart_RxChar>
     ca8:	e1a03000 	mov	r3, r0
     cac:	e3530000 	cmp	r3, #0
     cb0:	0afffff7 	beq	c94 <hex_test+0x7c>
    VIS_HEX_SetDigit(1, 0x3);
     cb4:	e3a00001 	mov	r0, #1
     cb8:	e3a01003 	mov	r1, #3
     cbc:	ebfffed1 	bl	808 <VIS_HEX_SetDigit>
    VIS_Uart_Tx(JTAG_UART_ptr, text_string, strlen(text_string));
     cc0:	e30a3740 	movw	r3, #42816	; 0xa740
     cc4:	e3403000 	movt	r3, #0
     cc8:	e5934000 	ldr	r4, [r3]
     ccc:	e24b302c 	sub	r3, r11, #44	; 0x2c
     cd0:	e1a00003 	mov	r0, r3
     cd4:	eb001b70 	bl	7a9c <strlen>
     cd8:	e1a03000 	mov	r3, r0
     cdc:	e24b202c 	sub	r2, r11, #44	; 0x2c
     ce0:	e1a00004 	mov	r0, r4
     ce4:	e1a01002 	mov	r1, r2
     ce8:	e1a02003 	mov	r2, r3
     cec:	ebfffd7f 	bl	2f0 <VIS_Uart_Tx>
    while(VIS_Uart_RxChar(JTAG_UART_ptr) == '\0');
     cf0:	e1a00000 	nop			; (mov r0, r0)
     cf4:	e30a3740 	movw	r3, #42816	; 0xa740
     cf8:	e3403000 	movt	r3, #0
     cfc:	e5933000 	ldr	r3, [r3]
     d00:	e1a00003 	mov	r0, r3
     d04:	ebfffde6 	bl	4a4 <VIS_Uart_RxChar>
     d08:	e1a03000 	mov	r3, r0
     d0c:	e3530000 	cmp	r3, #0
     d10:	0afffff7 	beq	cf4 <hex_test+0xdc>
    VIS_HEX_SetDigit(2, 0x2);
     d14:	e3a00002 	mov	r0, #2
     d18:	e3a01002 	mov	r1, #2
     d1c:	ebfffeb9 	bl	808 <VIS_HEX_SetDigit>
    VIS_Uart_Tx(JTAG_UART_ptr, text_string, strlen(text_string));
     d20:	e30a3740 	movw	r3, #42816	; 0xa740
     d24:	e3403000 	movt	r3, #0
     d28:	e5934000 	ldr	r4, [r3]
     d2c:	e24b302c 	sub	r3, r11, #44	; 0x2c
     d30:	e1a00003 	mov	r0, r3
     d34:	eb001b58 	bl	7a9c <strlen>
     d38:	e1a03000 	mov	r3, r0
     d3c:	e24b202c 	sub	r2, r11, #44	; 0x2c
     d40:	e1a00004 	mov	r0, r4
     d44:	e1a01002 	mov	r1, r2
     d48:	e1a02003 	mov	r2, r3
     d4c:	ebfffd67 	bl	2f0 <VIS_Uart_Tx>
    while(VIS_Uart_RxChar(JTAG_UART_ptr) == '\0');
     d50:	e1a00000 	nop			; (mov r0, r0)
     d54:	e30a3740 	movw	r3, #42816	; 0xa740
     d58:	e3403000 	movt	r3, #0
     d5c:	e5933000 	ldr	r3, [r3]
     d60:	e1a00003 	mov	r0, r3
     d64:	ebfffdce 	bl	4a4 <VIS_Uart_RxChar>
     d68:	e1a03000 	mov	r3, r0
     d6c:	e3530000 	cmp	r3, #0
     d70:	0afffff7 	beq	d54 <hex_test+0x13c>
    VIS_HEX_SetDigit(3, 0x1);
     d74:	e3a00003 	mov	r0, #3
     d78:	e3a01001 	mov	r1, #1
     d7c:	ebfffea1 	bl	808 <VIS_HEX_SetDigit>
    VIS_Uart_Tx(JTAG_UART_ptr, text_string, strlen(text_string));
     d80:	e30a3740 	movw	r3, #42816	; 0xa740
     d84:	e3403000 	movt	r3, #0
     d88:	e5934000 	ldr	r4, [r3]
     d8c:	e24b302c 	sub	r3, r11, #44	; 0x2c
     d90:	e1a00003 	mov	r0, r3
     d94:	eb001b40 	bl	7a9c <strlen>
     d98:	e1a03000 	mov	r3, r0
     d9c:	e24b202c 	sub	r2, r11, #44	; 0x2c
     da0:	e1a00004 	mov	r0, r4
     da4:	e1a01002 	mov	r1, r2
     da8:	e1a02003 	mov	r2, r3
     dac:	ebfffd4f 	bl	2f0 <VIS_Uart_Tx>
    while(VIS_Uart_RxChar(JTAG_UART_ptr) == '\0');
     db0:	e1a00000 	nop			; (mov r0, r0)
     db4:	e30a3740 	movw	r3, #42816	; 0xa740
     db8:	e3403000 	movt	r3, #0
     dbc:	e5933000 	ldr	r3, [r3]
     dc0:	e1a00003 	mov	r0, r3
     dc4:	ebfffdb6 	bl	4a4 <VIS_Uart_RxChar>
     dc8:	e1a03000 	mov	r3, r0
     dcc:	e3530000 	cmp	r3, #0
     dd0:	0afffff7 	beq	db4 <hex_test+0x19c>
    VIS_HEX_Set(4, (0x1U << 6) + 0x1U);
     dd4:	e3a00004 	mov	r0, #4
     dd8:	e3a01041 	mov	r1, #65	; 0x41
     ddc:	ebfffe47 	bl	700 <VIS_HEX_Set>
    VIS_Uart_Tx(JTAG_UART_ptr, text_string, strlen(text_string));
     de0:	e30a3740 	movw	r3, #42816	; 0xa740
     de4:	e3403000 	movt	r3, #0
     de8:	e5934000 	ldr	r4, [r3]
     dec:	e24b302c 	sub	r3, r11, #44	; 0x2c
     df0:	e1a00003 	mov	r0, r3
     df4:	eb001b28 	bl	7a9c <strlen>
     df8:	e1a03000 	mov	r3, r0
     dfc:	e24b202c 	sub	r2, r11, #44	; 0x2c
     e00:	e1a00004 	mov	r0, r4
     e04:	e1a01002 	mov	r1, r2
     e08:	e1a02003 	mov	r2, r3
     e0c:	ebfffd37 	bl	2f0 <VIS_Uart_Tx>
    while(VIS_Uart_RxChar(JTAG_UART_ptr) == '\0');
     e10:	e1a00000 	nop			; (mov r0, r0)
     e14:	e30a3740 	movw	r3, #42816	; 0xa740
     e18:	e3403000 	movt	r3, #0
     e1c:	e5933000 	ldr	r3, [r3]
     e20:	e1a00003 	mov	r0, r3
     e24:	ebfffd9e 	bl	4a4 <VIS_Uart_RxChar>
     e28:	e1a03000 	mov	r3, r0
     e2c:	e3530000 	cmp	r3, #0
     e30:	0afffff7 	beq	e14 <hex_test+0x1fc>
    VIS_HEX_SetDigit(5, 0xF);
     e34:	e3a00005 	mov	r0, #5
     e38:	e3a0100f 	mov	r1, #15
     e3c:	ebfffe71 	bl	808 <VIS_HEX_SetDigit>

    VIS_Uart_Tx(JTAG_UART_ptr, text_string, strlen(text_string));
     e40:	e30a3740 	movw	r3, #42816	; 0xa740
     e44:	e3403000 	movt	r3, #0
     e48:	e5934000 	ldr	r4, [r3]
     e4c:	e24b302c 	sub	r3, r11, #44	; 0x2c
     e50:	e1a00003 	mov	r0, r3
     e54:	eb001b10 	bl	7a9c <strlen>
     e58:	e1a03000 	mov	r3, r0
     e5c:	e24b202c 	sub	r2, r11, #44	; 0x2c
     e60:	e1a00004 	mov	r0, r4
     e64:	e1a01002 	mov	r1, r2
     e68:	e1a02003 	mov	r2, r3
     e6c:	ebfffd1f 	bl	2f0 <VIS_Uart_Tx>
    while(VIS_Uart_RxChar(JTAG_UART_ptr) == '\0');
     e70:	e1a00000 	nop			; (mov r0, r0)
     e74:	e30a3740 	movw	r3, #42816	; 0xa740
     e78:	e3403000 	movt	r3, #0
     e7c:	e5933000 	ldr	r3, [r3]
     e80:	e1a00003 	mov	r0, r3
     e84:	ebfffd86 	bl	4a4 <VIS_Uart_RxChar>
     e88:	e1a03000 	mov	r3, r0
     e8c:	e3530000 	cmp	r3, #0
     e90:	0afffff7 	beq	e74 <hex_test+0x25c>

    VIS_HEX_SetUint_DEC(123456);
     e94:	e30e0240 	movw	r0, #57920	; 0xe240
     e98:	e3400001 	movt	r0, #1
     e9c:	ebfffe89 	bl	8c8 <VIS_HEX_SetUint_DEC>
    VIS_Uart_Tx(JTAG_UART_ptr, text_string, strlen(text_string));
     ea0:	e30a3740 	movw	r3, #42816	; 0xa740
     ea4:	e3403000 	movt	r3, #0
     ea8:	e5934000 	ldr	r4, [r3]
     eac:	e24b302c 	sub	r3, r11, #44	; 0x2c
     eb0:	e1a00003 	mov	r0, r3
     eb4:	eb001af8 	bl	7a9c <strlen>
     eb8:	e1a03000 	mov	r3, r0
     ebc:	e24b202c 	sub	r2, r11, #44	; 0x2c
     ec0:	e1a00004 	mov	r0, r4
     ec4:	e1a01002 	mov	r1, r2
     ec8:	e1a02003 	mov	r2, r3
     ecc:	ebfffd07 	bl	2f0 <VIS_Uart_Tx>
    while(VIS_Uart_RxChar(JTAG_UART_ptr) == '\0');
     ed0:	e1a00000 	nop			; (mov r0, r0)
     ed4:	e30a3740 	movw	r3, #42816	; 0xa740
     ed8:	e3403000 	movt	r3, #0
     edc:	e5933000 	ldr	r3, [r3]
     ee0:	e1a00003 	mov	r0, r3
     ee4:	ebfffd6e 	bl	4a4 <VIS_Uart_RxChar>
     ee8:	e1a03000 	mov	r3, r0
     eec:	e3530000 	cmp	r3, #0
     ef0:	0afffff7 	beq	ed4 <hex_test+0x2bc>

    VIS_HEX_SetUint_HEX(0x123ACF);
     ef4:	e3030acf 	movw	r0, #15055	; 0x3acf
     ef8:	e3400012 	movt	r0, #18
     efc:	ebfffe57 	bl	860 <VIS_HEX_SetUint_HEX>
    
}
     f00:	e24bd008 	sub	sp, r11, #8
     f04:	e8bd8810 	pop	{r4, r11, pc}

00000f08 <display_test>:

void display_test() {
     f08:	e92d4810 	push	{r4, r11, lr}
     f0c:	e28db008 	add	r11, sp, #8
     f10:	e24ddefa 	sub	sp, sp, #4000	; 0xfa0
     f14:	e24dd00c 	sub	sp, sp, #12
    VIS_VGA_SetBuffer(SDRAM_BASE, FPGA_ONCHIP_BASE);
     f18:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
     f1c:	e3a01332 	mov	r1, #-939524096	; 0xc8000000
     f20:	eb0003e6 	bl	1ec0 <VIS_VGA_SetBuffer>
    unsigned k = 100;
     f24:	e3a03064 	mov	r3, #100	; 0x64
     f28:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
    unsigned fakeSpect[MAX_LINES] = {0}; 
     f2c:	e24b3efa 	sub	r3, r11, #4000	; 0xfa0
     f30:	e243300c 	sub	r3, r3, #12
     f34:	e2433008 	sub	r3, r3, #8
     f38:	e3a02efa 	mov	r2, #4000	; 0xfa0
     f3c:	e1a00003 	mov	r0, r3
     f40:	e3a01000 	mov	r1, #0
     f44:	eb001a69 	bl	78f0 <memset>
    while(1) {
        for (unsigned i = 0; i < k; i++) {
     f48:	e3a03000 	mov	r3, #0
     f4c:	e50b3010 	str	r3, [r11, #-16]
     f50:	ea00006b 	b	1104 <display_test+0x1fc>
            if (i != 0 && rand() % 10 < 2)
     f54:	e51b3010 	ldr	r3, [r11, #-16]
     f58:	e3530000 	cmp	r3, #0
     f5c:	0a00002d 	beq	1018 <display_test+0x110>
     f60:	eb001ab6 	bl	7a40 <rand>
     f64:	e1a01000 	mov	r1, r0
     f68:	e3063667 	movw	r3, #26215	; 0x6667
     f6c:	e3463666 	movt	r3, #26214	; 0x6666
     f70:	e0c30193 	smull	r0, r3, r3, r1
     f74:	e1a02143 	asr	r2, r3, #2
     f78:	e1a03fc1 	asr	r3, r1, #31
     f7c:	e0632002 	rsb	r2, r3, r2
     f80:	e1a03002 	mov	r3, r2
     f84:	e1a03103 	lsl	r3, r3, #2
     f88:	e0833002 	add	r3, r3, r2
     f8c:	e1a03083 	lsl	r3, r3, #1
     f90:	e0632001 	rsb	r2, r3, r1
     f94:	e3520001 	cmp	r2, #1
     f98:	ca00001e 	bgt	1018 <display_test+0x110>
                fakeSpect[i] = fakeSpect[i - 1] + (rand() % 800 - 400);
     f9c:	e51b3010 	ldr	r3, [r11, #-16]
     fa0:	e2432001 	sub	r2, r3, #1
     fa4:	e30f3058 	movw	r3, #61528	; 0xf058
     fa8:	e34f3fff 	movt	r3, #65535	; 0xffff
     fac:	e1a02102 	lsl	r2, r2, #2
     fb0:	e24b100c 	sub	r1, r11, #12
     fb4:	e0812002 	add	r2, r1, r2
     fb8:	e0823003 	add	r3, r2, r3
     fbc:	e5934000 	ldr	r4, [r3]
     fc0:	eb001a9e 	bl	7a40 <rand>
     fc4:	e1a02000 	mov	r2, r0
     fc8:	e308351f 	movw	r3, #34079	; 0x851f
     fcc:	e34531eb 	movt	r3, #20971	; 0x51eb
     fd0:	e0c30293 	smull	r0, r3, r3, r2
     fd4:	e1a01443 	asr	r1, r3, #8
     fd8:	e1a03fc2 	asr	r3, r2, #31
     fdc:	e0633001 	rsb	r3, r3, r1
     fe0:	e3a01e32 	mov	r1, #800	; 0x320
     fe4:	e0030391 	mul	r3, r1, r3
     fe8:	e0633002 	rsb	r3, r3, r2
     fec:	e0843003 	add	r3, r4, r3
     ff0:	e2432e19 	sub	r2, r3, #400	; 0x190
     ff4:	e51b1010 	ldr	r1, [r11, #-16]
     ff8:	e30f3058 	movw	r3, #61528	; 0xf058
     ffc:	e34f3fff 	movt	r3, #65535	; 0xffff
    1000:	e1a01101 	lsl	r1, r1, #2
    1004:	e24b000c 	sub	r0, r11, #12
    1008:	e0801001 	add	r1, r0, r1
    100c:	e0813003 	add	r3, r1, r3
    1010:	e5832000 	str	r2, [r3]
    1014:	ea000037 	b	10f8 <display_test+0x1f0>
            else if (rand() % 10 < 3)
    1018:	eb001a88 	bl	7a40 <rand>
    101c:	e1a01000 	mov	r1, r0
    1020:	e3063667 	movw	r3, #26215	; 0x6667
    1024:	e3463666 	movt	r3, #26214	; 0x6666
    1028:	e0c32193 	smull	r2, r3, r3, r1
    102c:	e1a02143 	asr	r2, r3, #2
    1030:	e1a03fc1 	asr	r3, r1, #31
    1034:	e0632002 	rsb	r2, r3, r2
    1038:	e1a03002 	mov	r3, r2
    103c:	e1a03103 	lsl	r3, r3, #2
    1040:	e0833002 	add	r3, r3, r2
    1044:	e1a03083 	lsl	r3, r3, #1
    1048:	e0632001 	rsb	r2, r3, r1
    104c:	e3520002 	cmp	r2, #2
    1050:	ca000014 	bgt	10a8 <display_test+0x1a0>
                fakeSpect[i] = rand() % 20000;
    1054:	eb001a79 	bl	7a40 <rand>
    1058:	e1a02000 	mov	r2, r0
    105c:	e3083bad 	movw	r3, #35757	; 0x8bad
    1060:	e34638db 	movt	r3, #26843	; 0x68db
    1064:	e0c30293 	smull	r0, r3, r3, r2
    1068:	e1a016c3 	asr	r1, r3, #13
    106c:	e1a03fc2 	asr	r3, r2, #31
    1070:	e0633001 	rsb	r3, r3, r1
    1074:	e3041e20 	movw	r1, #20000	; 0x4e20
    1078:	e0030391 	mul	r3, r1, r3
    107c:	e0633002 	rsb	r3, r3, r2
    1080:	e1a02003 	mov	r2, r3
    1084:	e51b1010 	ldr	r1, [r11, #-16]
    1088:	e30f3058 	movw	r3, #61528	; 0xf058
    108c:	e34f3fff 	movt	r3, #65535	; 0xffff
    1090:	e1a01101 	lsl	r1, r1, #2
    1094:	e24b000c 	sub	r0, r11, #12
    1098:	e0801001 	add	r1, r0, r1
    109c:	e0813003 	add	r3, r1, r3
    10a0:	e5832000 	str	r2, [r3]
    10a4:	ea000013 	b	10f8 <display_test+0x1f0>
            else 
                fakeSpect[i] = rand() % 12000;
    10a8:	eb001a64 	bl	7a40 <rand>
    10ac:	e1a02000 	mov	r2, r0
    10b0:	e30139f1 	movw	r3, #6641	; 0x19f1
    10b4:	e3403576 	movt	r3, #1398	; 0x576
    10b8:	e0c31293 	smull	r1, r3, r3, r2
    10bc:	e1a01443 	asr	r1, r3, #8
    10c0:	e1a03fc2 	asr	r3, r2, #31
    10c4:	e0633001 	rsb	r3, r3, r1
    10c8:	e3021ee0 	movw	r1, #12000	; 0x2ee0
    10cc:	e0030391 	mul	r3, r1, r3
    10d0:	e0633002 	rsb	r3, r3, r2
    10d4:	e1a02003 	mov	r2, r3
    10d8:	e51b1010 	ldr	r1, [r11, #-16]
    10dc:	e30f3058 	movw	r3, #61528	; 0xf058
    10e0:	e34f3fff 	movt	r3, #65535	; 0xffff
    10e4:	e1a01101 	lsl	r1, r1, #2
    10e8:	e24b000c 	sub	r0, r11, #12
    10ec:	e0801001 	add	r1, r0, r1
    10f0:	e0813003 	add	r3, r1, r3
    10f4:	e5832000 	str	r2, [r3]
void display_test() {
    VIS_VGA_SetBuffer(SDRAM_BASE, FPGA_ONCHIP_BASE);
    unsigned k = 100;
    unsigned fakeSpect[MAX_LINES] = {0}; 
    while(1) {
        for (unsigned i = 0; i < k; i++) {
    10f8:	e51b3010 	ldr	r3, [r11, #-16]
    10fc:	e2833001 	add	r3, r3, #1
    1100:	e50b3010 	str	r3, [r11, #-16]
    1104:	e51b2010 	ldr	r2, [r11, #-16]
    1108:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
    110c:	e1520003 	cmp	r2, r3
    1110:	3affff8f 	bcc	f54 <display_test+0x4c>
            else if (rand() % 10 < 3)
                fakeSpect[i] = rand() % 20000;
            else 
                fakeSpect[i] = rand() % 12000;
        }
        VIS_VGA_UpdateFrame(k, fakeSpect);
    1114:	e24b3efa 	sub	r3, r11, #4000	; 0xfa0
    1118:	e243300c 	sub	r3, r3, #12
    111c:	e2433008 	sub	r3, r3, #8
    1120:	e51b0014 	ldr	r0, [r11, #-20]	; 0xffffffec
    1124:	e1a01003 	mov	r1, r3
    1128:	eb0001ef 	bl	18ec <VIS_VGA_UpdateFrame>
        // VIS_VGA_ColorTest();
    }
    112c:	eaffff85 	b	f48 <display_test+0x40>

00001130 <color_test>:
}

void color_test() {
    1130:	e92d4800 	push	{r11, lr}
    1134:	e28db004 	add	r11, sp, #4
    VIS_VGA_SetBuffer(SDRAM_BASE, FPGA_ONCHIP_BASE);
    1138:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
    113c:	e3a01332 	mov	r1, #-939524096	; 0xc8000000
    1140:	eb00035e 	bl	1ec0 <VIS_VGA_SetBuffer>
    VIS_VGA_ColorTest();
    1144:	eb000324 	bl	1ddc <VIS_VGA_ColorTest>
}
    1148:	e8bd8800 	pop	{r11, pc}

0000114c <audio_transform_test>:

void audio_transform_test() {
    114c:	e92d4bf0 	push	{r4, r5, r6, r7, r8, r9, r11, lr}
    1150:	e28db01c 	add	r11, sp, #28
    1154:	e24ddd65 	sub	sp, sp, #6464	; 0x1940
    1158:	e24dd030 	sub	sp, sp, #48	; 0x30
    VIS_VGA_SetBuffer(SDRAM_BASE, FPGA_ONCHIP_BASE);
    115c:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
    1160:	e3a01332 	mov	r1, #-939524096	; 0xc8000000
    1164:	eb000355 	bl	1ec0 <VIS_VGA_SetBuffer>
    volatile int * red_LED_ptr = (int *)LEDR_BASE;
    1168:	e3a03000 	mov	r3, #0
    116c:	e34f3f20 	movt	r3, #65312	; 0xff20
    1170:	e50b302c 	str	r3, [r11, #-44]	; 0xffffffd4
    volatile int * audio_ptr   = (int *)AUDIO_BASE;
    1174:	e3a03dc1 	mov	r3, #12352	; 0x3040
    1178:	e34f3f20 	movt	r3, #65312	; 0xff20
    117c:	e50b3030 	str	r3, [r11, #-48]	; 0xffffffd0

    /* used for audio record/playback */
    int fifospace;
    int buffer_index_start = 0;
    1180:	e3a03000 	mov	r3, #0
    1184:	e50b3034 	str	r3, [r11, #-52]	; 0xffffffcc
    int fourierIndex = 0;
    1188:	e3a03000 	mov	r3, #0
    118c:	e50b3038 	str	r3, [r11, #-56]	; 0xffffffc8
    const int fourierLength = 160;
    1190:	e3a030a0 	mov	r3, #160	; 0xa0
    1194:	e50b303c 	str	r3, [r11, #-60]	; 0xffffffc4
    int fourierSize = BUF_SIZE/fourierLength;
    1198:	e3a00e32 	mov	r0, #800	; 0x320
    119c:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    11a0:	eb00150f 	bl	65e4 <__aeabi_idiv>
    11a4:	e1a03000 	mov	r3, r0
    11a8:	e50b3040 	str	r3, [r11, #-64]	; 0xffffffc0
    int record = 0, play = 0, vga = 0, buffer_index = 0;
    11ac:	e3a03000 	mov	r3, #0
    11b0:	e50b3044 	str	r3, [r11, #-68]	; 0xffffffbc
    11b4:	e3a03000 	mov	r3, #0
    11b8:	e50b3048 	str	r3, [r11, #-72]	; 0xffffffb8
    11bc:	e3a03000 	mov	r3, #0
    11c0:	e50b304c 	str	r3, [r11, #-76]	; 0xffffffb4
    11c4:	e3a03000 	mov	r3, #0
    11c8:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
    int left_buffer[BUF_SIZE];
    int right_buffer[BUF_SIZE];
    unsigned fftamp[fourierLength];
    11cc:	e51b303c 	ldr	r3, [r11, #-60]	; 0xffffffc4
    11d0:	e2433001 	sub	r3, r3, #1
    11d4:	e50b3050 	str	r3, [r11, #-80]	; 0xffffffb0
    11d8:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    11dc:	e1a02001 	mov	r2, r1
    11e0:	e3a03000 	mov	r3, #0
    11e4:	e1a01da2 	lsr	r1, r2, #27
    11e8:	e1a00283 	lsl	r0, r3, #5
    11ec:	e24bca02 	sub	r12, r11, #8192	; 0x2000
    11f0:	e58c0678 	str	r0, [r12, #1656]	; 0x678
    11f4:	e24b0a02 	sub	r0, r11, #8192	; 0x2000
    11f8:	e5900678 	ldr	r0, [r0, #1656]	; 0x678
    11fc:	e1810000 	orr	r0, r1, r0
    1200:	e24bca02 	sub	r12, r11, #8192	; 0x2000
    1204:	e58c0678 	str	r0, [r12, #1656]	; 0x678
    1208:	e1a01282 	lsl	r1, r2, #5
    120c:	e24bca02 	sub	r12, r11, #8192	; 0x2000
    1210:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    1214:	e1a02001 	mov	r2, r1
    1218:	e3a03000 	mov	r3, #0
    121c:	e1a01da2 	lsr	r1, r2, #27
    1220:	e1a09283 	lsl	r9, r3, #5
    1224:	e1819009 	orr	r9, r1, r9
    1228:	e1a08282 	lsl	r8, r2, #5
    122c:	e51b303c 	ldr	r3, [r11, #-60]	; 0xffffffc4
    1230:	e1a03103 	lsl	r3, r3, #2
    1234:	e2833003 	add	r3, r3, #3
    1238:	e2833007 	add	r3, r3, #7
    123c:	e1a031a3 	lsr	r3, r3, #3
    1240:	e1a03183 	lsl	r3, r3, #3
    1244:	e04dd003 	sub	sp, sp, r3
    1248:	e1a0300d 	mov	r3, sp
    124c:	e2833003 	add	r3, r3, #3
    1250:	e1a03123 	lsr	r3, r3, #2
    1254:	e1a03103 	lsl	r3, r3, #2
    1258:	e50b3054 	str	r3, [r11, #-84]	; 0xffffffac
    Complex cArray[fourierLength];
    125c:	e51b303c 	ldr	r3, [r11, #-60]	; 0xffffffc4
    1260:	e2433001 	sub	r3, r3, #1
    1264:	e50b3058 	str	r3, [r11, #-88]	; 0xffffffa8
    1268:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    126c:	e1a02001 	mov	r2, r1
    1270:	e3a03000 	mov	r3, #0
    1274:	e3a01060 	mov	r1, #96	; 0x60
    1278:	e0000391 	mul	r0, r1, r3
    127c:	e3a01000 	mov	r1, #0
    1280:	e0010291 	mul	r1, r1, r2
    1284:	e0801001 	add	r1, r0, r1
    1288:	e3a00060 	mov	r0, #96	; 0x60
    128c:	e0832092 	umull	r2, r3, r2, r0
    1290:	e0811003 	add	r1, r1, r3
    1294:	e1a03001 	mov	r3, r1
    1298:	e51b203c 	ldr	r2, [r11, #-60]	; 0xffffffc4
    129c:	e1a03002 	mov	r3, r2
    12a0:	e1a03083 	lsl	r3, r3, #1
    12a4:	e0833002 	add	r3, r3, r2
    12a8:	e1a03103 	lsl	r3, r3, #2
    12ac:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    12b0:	e1a02001 	mov	r2, r1
    12b4:	e3a03000 	mov	r3, #0
    12b8:	e3a01060 	mov	r1, #96	; 0x60
    12bc:	e0000391 	mul	r0, r1, r3
    12c0:	e3a01000 	mov	r1, #0
    12c4:	e0010291 	mul	r1, r1, r2
    12c8:	e0801001 	add	r1, r0, r1
    12cc:	e3a00060 	mov	r0, #96	; 0x60
    12d0:	e0832092 	umull	r2, r3, r2, r0
    12d4:	e0811003 	add	r1, r1, r3
    12d8:	e1a03001 	mov	r3, r1
    12dc:	e51b203c 	ldr	r2, [r11, #-60]	; 0xffffffc4
    12e0:	e1a03002 	mov	r3, r2
    12e4:	e1a03083 	lsl	r3, r3, #1
    12e8:	e0833002 	add	r3, r3, r2
    12ec:	e1a03103 	lsl	r3, r3, #2
    12f0:	e2833003 	add	r3, r3, #3
    12f4:	e2833007 	add	r3, r3, #7
    12f8:	e1a031a3 	lsr	r3, r3, #3
    12fc:	e1a03183 	lsl	r3, r3, #3
    1300:	e04dd003 	sub	sp, sp, r3
    1304:	e1a0300d 	mov	r3, sp
    1308:	e2833003 	add	r3, r3, #3
    130c:	e1a03123 	lsr	r3, r3, #2
    1310:	e1a03103 	lsl	r3, r3, #2
    1314:	e50b305c 	str	r3, [r11, #-92]	; 0xffffffa4
    Complex fourierResult[fourierLength];
    1318:	e51b303c 	ldr	r3, [r11, #-60]	; 0xffffffc4
    131c:	e2433001 	sub	r3, r3, #1
    1320:	e50b3060 	str	r3, [r11, #-96]	; 0xffffffa0
    1324:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    1328:	e1a02001 	mov	r2, r1
    132c:	e3a03000 	mov	r3, #0
    1330:	e3a01060 	mov	r1, #96	; 0x60
    1334:	e0000391 	mul	r0, r1, r3
    1338:	e3a01000 	mov	r1, #0
    133c:	e0010291 	mul	r1, r1, r2
    1340:	e0801001 	add	r1, r0, r1
    1344:	e3a00060 	mov	r0, #96	; 0x60
    1348:	e0832092 	umull	r2, r3, r2, r0
    134c:	e0811003 	add	r1, r1, r3
    1350:	e1a03001 	mov	r3, r1
    1354:	e51b203c 	ldr	r2, [r11, #-60]	; 0xffffffc4
    1358:	e1a03002 	mov	r3, r2
    135c:	e1a03083 	lsl	r3, r3, #1
    1360:	e0833002 	add	r3, r3, r2
    1364:	e1a03103 	lsl	r3, r3, #2
    1368:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    136c:	e1a02001 	mov	r2, r1
    1370:	e3a03000 	mov	r3, #0
    1374:	e3a01060 	mov	r1, #96	; 0x60
    1378:	e0000391 	mul	r0, r1, r3
    137c:	e3a01000 	mov	r1, #0
    1380:	e0010291 	mul	r1, r1, r2
    1384:	e0801001 	add	r1, r0, r1
    1388:	e3a00060 	mov	r0, #96	; 0x60
    138c:	e0832092 	umull	r2, r3, r2, r0
    1390:	e0811003 	add	r1, r1, r3
    1394:	e1a03001 	mov	r3, r1
    1398:	e51b203c 	ldr	r2, [r11, #-60]	; 0xffffffc4
    139c:	e1a03002 	mov	r3, r2
    13a0:	e1a03083 	lsl	r3, r3, #1
    13a4:	e0833002 	add	r3, r3, r2
    13a8:	e1a03103 	lsl	r3, r3, #2
    13ac:	e2833003 	add	r3, r3, #3
    13b0:	e2833007 	add	r3, r3, #7
    13b4:	e1a031a3 	lsr	r3, r3, #3
    13b8:	e1a03183 	lsl	r3, r3, #3
    13bc:	e04dd003 	sub	sp, sp, r3
    13c0:	e1a0300d 	mov	r3, sp
    13c4:	e2833003 	add	r3, r3, #3
    13c8:	e1a03123 	lsr	r3, r3, #2
    13cc:	e1a03103 	lsl	r3, r3, #2
    13d0:	e50b3064 	str	r3, [r11, #-100]	; 0xffffff9c
    unsigned result[fourierLength];
    13d4:	e51b303c 	ldr	r3, [r11, #-60]	; 0xffffffc4
    13d8:	e2433001 	sub	r3, r3, #1
    13dc:	e50b3068 	str	r3, [r11, #-104]	; 0xffffff98
    13e0:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    13e4:	e1a02001 	mov	r2, r1
    13e8:	e3a03000 	mov	r3, #0
    13ec:	e1a01da2 	lsr	r1, r2, #27
    13f0:	e1a07283 	lsl	r7, r3, #5
    13f4:	e1817007 	orr	r7, r1, r7
    13f8:	e1a06282 	lsl	r6, r2, #5
    13fc:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    1400:	e1a02001 	mov	r2, r1
    1404:	e3a03000 	mov	r3, #0
    1408:	e1a01da2 	lsr	r1, r2, #27
    140c:	e1a05283 	lsl	r5, r3, #5
    1410:	e1815005 	orr	r5, r1, r5
    1414:	e1a04282 	lsl	r4, r2, #5
    1418:	e51b303c 	ldr	r3, [r11, #-60]	; 0xffffffc4
    141c:	e1a03103 	lsl	r3, r3, #2
    1420:	e2833003 	add	r3, r3, #3
    1424:	e2833007 	add	r3, r3, #7
    1428:	e1a031a3 	lsr	r3, r3, #3
    142c:	e1a03183 	lsl	r3, r3, #3
    1430:	e04dd003 	sub	sp, sp, r3
    1434:	e1a0300d 	mov	r3, sp
    1438:	e2833003 	add	r3, r3, #3
    143c:	e1a03123 	lsr	r3, r3, #2
    1440:	e1a03103 	lsl	r3, r3, #2
    1444:	e50b306c 	str	r3, [r11, #-108]	; 0xffffff94
    Complex c;

    Complex omegaInverse[fourierLength];
    1448:	e51b303c 	ldr	r3, [r11, #-60]	; 0xffffffc4
    144c:	e2433001 	sub	r3, r3, #1
    1450:	e50b3070 	str	r3, [r11, #-112]	; 0xffffff90
    1454:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    1458:	e1a02001 	mov	r2, r1
    145c:	e3a03000 	mov	r3, #0
    1460:	e3a01060 	mov	r1, #96	; 0x60
    1464:	e0000391 	mul	r0, r1, r3
    1468:	e3a01000 	mov	r1, #0
    146c:	e0010291 	mul	r1, r1, r2
    1470:	e0801001 	add	r1, r0, r1
    1474:	e3a00060 	mov	r0, #96	; 0x60
    1478:	e0832092 	umull	r2, r3, r2, r0
    147c:	e0811003 	add	r1, r1, r3
    1480:	e1a03001 	mov	r3, r1
    1484:	e51b203c 	ldr	r2, [r11, #-60]	; 0xffffffc4
    1488:	e1a03002 	mov	r3, r2
    148c:	e1a03083 	lsl	r3, r3, #1
    1490:	e0833002 	add	r3, r3, r2
    1494:	e1a03103 	lsl	r3, r3, #2
    1498:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    149c:	e1a02001 	mov	r2, r1
    14a0:	e3a03000 	mov	r3, #0
    14a4:	e3a01060 	mov	r1, #96	; 0x60
    14a8:	e0000391 	mul	r0, r1, r3
    14ac:	e3a01000 	mov	r1, #0
    14b0:	e0010291 	mul	r1, r1, r2
    14b4:	e0801001 	add	r1, r0, r1
    14b8:	e3a00060 	mov	r0, #96	; 0x60
    14bc:	e0832092 	umull	r2, r3, r2, r0
    14c0:	e0811003 	add	r1, r1, r3
    14c4:	e1a03001 	mov	r3, r1
    14c8:	e51b203c 	ldr	r2, [r11, #-60]	; 0xffffffc4
    14cc:	e1a03002 	mov	r3, r2
    14d0:	e1a03083 	lsl	r3, r3, #1
    14d4:	e0833002 	add	r3, r3, r2
    14d8:	e1a03103 	lsl	r3, r3, #2
    14dc:	e2833003 	add	r3, r3, #3
    14e0:	e2833007 	add	r3, r3, #7
    14e4:	e1a031a3 	lsr	r3, r3, #3
    14e8:	e1a03183 	lsl	r3, r3, #3
    14ec:	e04dd003 	sub	sp, sp, r3
    14f0:	e1a0300d 	mov	r3, sp
    14f4:	e2833003 	add	r3, r3, #3
    14f8:	e1a03123 	lsr	r3, r3, #2
    14fc:	e1a03103 	lsl	r3, r3, #2
    1500:	e50b3074 	str	r3, [r11, #-116]	; 0xffffff8c
    //initExps( fourierLength, omegaInverse);
    
    fifospace = *(audio_ptr + 1); // read the audio port fifospace register
    1504:	e51b3030 	ldr	r3, [r11, #-48]	; 0xffffffd0
    1508:	e5933004 	ldr	r3, [r3, #4]
    150c:	e50b3078 	str	r3, [r11, #-120]	; 0xffffff88
        // is full
        // while ((fifospace & 0x000000FF) && (buffer_index < BUF_SIZE)) {
        while(1) {
            // left_buffer[buffer_index]  = *(audio_ptr + 2);
            // right_buffer[buffer_index] = *(audio_ptr + 3);
            while (!(fifospace & 0x000000FF));
    1510:	ea000000 	b	1518 <audio_transform_test+0x3cc>
                // reset counter
                buffer_index = 0;
            }

            // fifospace = *(audio_ptr + 1); // read the audio port fifospace register
        }
    1514:	e1a00000 	nop			; (mov r0, r0)
        // is full
        // while ((fifospace & 0x000000FF) && (buffer_index < BUF_SIZE)) {
        while(1) {
            // left_buffer[buffer_index]  = *(audio_ptr + 2);
            // right_buffer[buffer_index] = *(audio_ptr + 3);
            while (!(fifospace & 0x000000FF));
    1518:	e1a00000 	nop			; (mov r0, r0)
    151c:	e51b3078 	ldr	r3, [r11, #-120]	; 0xffffff88
    1520:	e6ef3073 	uxtb	r3, r3
    1524:	e3530000 	cmp	r3, #0
    1528:	0afffffb 	beq	151c <audio_transform_test+0x3d0>
            *(audio_ptr + 2)  = *(audio_ptr + 2) >> 16;
    152c:	e51b3030 	ldr	r3, [r11, #-48]	; 0xffffffd0
    1530:	e2833008 	add	r3, r3, #8
    1534:	e51b2030 	ldr	r2, [r11, #-48]	; 0xffffffd0
    1538:	e2822008 	add	r2, r2, #8
    153c:	e5922000 	ldr	r2, [r2]
    1540:	e1a02842 	asr	r2, r2, #16
    1544:	e5832000 	str	r2, [r3]
            *(audio_ptr + 3)  = *(audio_ptr + 3) >> 16;
    1548:	e51b3030 	ldr	r3, [r11, #-48]	; 0xffffffd0
    154c:	e283300c 	add	r3, r3, #12
    1550:	e51b2030 	ldr	r2, [r11, #-48]	; 0xffffffd0
    1554:	e282200c 	add	r2, r2, #12
    1558:	e5922000 	ldr	r2, [r2]
    155c:	e1a02842 	asr	r2, r2, #16
    1560:	e5832000 	str	r2, [r3]
            //     }else{
            //         count ++;
            //     }
            //   }
            
            if(buffer_index == fourierLength){
    1564:	e51b2020 	ldr	r2, [r11, #-32]	; 0xffffffe0
    1568:	e51b303c 	ldr	r3, [r11, #-60]	; 0xffffffc4
    156c:	e1520003 	cmp	r2, r3
    1570:	1a000030 	bne	1638 <audio_transform_test+0x4ec>
                buffer_index = 0;
    1574:	e3a03000 	mov	r3, #0
    1578:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
                sdft(cArray, fourierLength, omegaInverse, fourierResult);
    157c:	e51b105c 	ldr	r1, [r11, #-92]	; 0xffffffa4
    1580:	e51b2074 	ldr	r2, [r11, #-116]	; 0xffffff8c
    1584:	e51b3064 	ldr	r3, [r11, #-100]	; 0xffffff9c
    1588:	e1a00001 	mov	r0, r1
    158c:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    1590:	eb0006ad 	bl	304c <sdft>
                int display = 0;
    1594:	e3a03000 	mov	r3, #0
    1598:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc
                for(int i=0;i<fourierLength; i++){
    159c:	e3a03000 	mov	r3, #0
    15a0:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
    15a4:	ea000017 	b	1608 <audio_transform_test+0x4bc>
                    result[i] = magnitude(fourierResult[i]);
    15a8:	e51b1064 	ldr	r1, [r11, #-100]	; 0xffffff9c
    15ac:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
    15b0:	e1a03002 	mov	r3, r2
    15b4:	e1a03083 	lsl	r3, r3, #1
    15b8:	e0833002 	add	r3, r3, r2
    15bc:	e1a03103 	lsl	r3, r3, #2
    15c0:	e0813003 	add	r3, r1, r3
    15c4:	e8930007 	ldm	r3, {r0, r1, r2}
    15c8:	eb000629 	bl	2e74 <magnitude>
    15cc:	e1a03000 	mov	r3, r0
    15d0:	e1a01003 	mov	r1, r3
    15d4:	e51b306c 	ldr	r3, [r11, #-108]	; 0xffffff94
    15d8:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
    15dc:	e7831102 	str	r1, [r3, r2, lsl #2]
                    if(result [i] > 2147483600) display = 1;
    15e0:	e51b306c 	ldr	r3, [r11, #-108]	; 0xffffff94
    15e4:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
    15e8:	e7933102 	ldr	r3, [r3, r2, lsl #2]
    15ec:	e37301c2 	cmn	r3, #-2147483600	; 0x80000030
    15f0:	9a000001 	bls	15fc <audio_transform_test+0x4b0>
    15f4:	e3a03001 	mov	r3, #1
    15f8:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc
            
            if(buffer_index == fourierLength){
                buffer_index = 0;
                sdft(cArray, fourierLength, omegaInverse, fourierResult);
                int display = 0;
                for(int i=0;i<fourierLength; i++){
    15fc:	e51b3028 	ldr	r3, [r11, #-40]	; 0xffffffd8
    1600:	e2833001 	add	r3, r3, #1
    1604:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
    1608:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
    160c:	e51b303c 	ldr	r3, [r11, #-60]	; 0xffffffc4
    1610:	e1520003 	cmp	r2, r3
    1614:	baffffe3 	blt	15a8 <audio_transform_test+0x45c>
                    result[i] = magnitude(fourierResult[i]);
                    if(result [i] > 2147483600) display = 1;
                }
                if(display == 1)
    1618:	e51b3024 	ldr	r3, [r11, #-36]	; 0xffffffdc
    161c:	e3530001 	cmp	r3, #1
    1620:	1a000004 	bne	1638 <audio_transform_test+0x4ec>
                    VIS_VGA_UpdateFrame(fourierLength, result );
    1624:	e51b203c 	ldr	r2, [r11, #-60]	; 0xffffffc4
    1628:	e51b306c 	ldr	r3, [r11, #-108]	; 0xffffff94
    162c:	e1a00002 	mov	r0, r2
    1630:	e1a01003 	mov	r1, r3
    1634:	eb0000ac 	bl	18ec <VIS_VGA_UpdateFrame>
            }
            
            
            c.i = 0;
    1638:	e30e3698 	movw	r3, #59032	; 0xe698
    163c:	e34f3fff 	movt	r3, #65535	; 0xffff
    1640:	e3a02004 	mov	r2, #4
    1644:	e24b001c 	sub	r0, r11, #28
    1648:	e0803003 	add	r3, r0, r3
    164c:	e0833002 	add	r3, r3, r2
    1650:	e3a02000 	mov	r2, #0
    1654:	e5832000 	str	r2, [r3]
            c.r = ((float) *(audio_ptr + 2));
    1658:	e51b3030 	ldr	r3, [r11, #-48]	; 0xffffffd0
    165c:	e2833008 	add	r3, r3, #8
    1660:	e5933000 	ldr	r3, [r3]
    1664:	ee073a10 	vmov	s14, r3
    1668:	eef87ac7 	vcvt.f32.s32	s15, s14
    166c:	e30e3698 	movw	r3, #59032	; 0xe698
    1670:	e34f3fff 	movt	r3, #65535	; 0xffff
    1674:	e24b001c 	sub	r0, r11, #28
    1678:	e0803003 	add	r3, r0, r3
    167c:	edc37a00 	vstr	s15, [r3]
            cArray[buffer_index] = c;
    1680:	e51b105c 	ldr	r1, [r11, #-92]	; 0xffffffa4
    1684:	e51b2020 	ldr	r2, [r11, #-32]	; 0xffffffe0
    1688:	e1a03002 	mov	r3, r2
    168c:	e1a03083 	lsl	r3, r3, #1
    1690:	e0833002 	add	r3, r3, r2
    1694:	e1a03103 	lsl	r3, r3, #2
    1698:	e0812003 	add	r2, r1, r3
    169c:	e30e3698 	movw	r3, #59032	; 0xe698
    16a0:	e34f3fff 	movt	r3, #65535	; 0xffff
    16a4:	e1a0c002 	mov	r12, r2
    16a8:	e24b101c 	sub	r1, r11, #28
    16ac:	e0813003 	add	r3, r1, r3
    16b0:	e8930007 	ldm	r3, {r0, r1, r2}
    16b4:	e88c0007 	stm	r12, {r0, r1, r2}

            ++buffer_index;
    16b8:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
    16bc:	e2833001 	add	r3, r3, #1
    16c0:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
            if (buffer_index >= 0xFFFFFF) buffer_index = 0;
    16c4:	e51b2020 	ldr	r2, [r11, #-32]	; 0xffffffe0
    16c8:	e30f3ffe 	movw	r3, #65534	; 0xfffe
    16cc:	e34030ff 	movt	r3, #255	; 0xff
    16d0:	e1520003 	cmp	r2, r3
    16d4:	da000001 	ble	16e0 <audio_transform_test+0x594>
    16d8:	e3a03000 	mov	r3, #0
    16dc:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
            VIS_HEX_SetUint_HEX(buffer_index);
    16e0:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
    16e4:	e1a00003 	mov	r0, r3
    16e8:	ebfffc5c 	bl	860 <VIS_HEX_SetUint_HEX>
            if (VIS_Uart_RxChar(JTAG_UART_ptr) != 0) {
    16ec:	e30a3740 	movw	r3, #42816	; 0xa740
    16f0:	e3403000 	movt	r3, #0
    16f4:	e5933000 	ldr	r3, [r3]
    16f8:	e1a00003 	mov	r0, r3
    16fc:	ebfffb68 	bl	4a4 <VIS_Uart_RxChar>
    1700:	e1a03000 	mov	r3, r0
    1704:	e3530000 	cmp	r3, #0
    1708:	0affff81 	beq	1514 <audio_transform_test+0x3c8>
                // reset counter
                buffer_index = 0;
    170c:	e3a03000 	mov	r3, #0
    1710:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
            }

            // fifospace = *(audio_ptr + 1); // read the audio port fifospace register
        }
    1714:	eaffff7e 	b	1514 <audio_transform_test+0x3c8>

00001718 <check_KEYs>:
    }
}
void check_KEYs(int * KEY0, int * KEY1, int * KEY2, int * counter) {
    1718:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    171c:	e28db000 	add	r11, sp, #0
    1720:	e24dd024 	sub	sp, sp, #36	; 0x24
    1724:	e50b0018 	str	r0, [r11, #-24]	; 0xffffffe8
    1728:	e50b101c 	str	r1, [r11, #-28]	; 0xffffffe4
    172c:	e50b2020 	str	r2, [r11, #-32]	; 0xffffffe0
    1730:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc
    volatile int * KEY_ptr   = (int *)KEY_BASE;
    1734:	e3a03050 	mov	r3, #80	; 0x50
    1738:	e34f3f20 	movt	r3, #65312	; 0xff20
    173c:	e50b3008 	str	r3, [r11, #-8]
    volatile int * audio_ptr = (int *)AUDIO_BASE;
    1740:	e3a03dc1 	mov	r3, #12352	; 0x3040
    1744:	e34f3f20 	movt	r3, #65312	; 0xff20
    1748:	e50b300c 	str	r3, [r11, #-12]
    int            KEY_value;

    KEY_value = *(KEY_ptr); // read the pushbutton KEY values
    174c:	e51b3008 	ldr	r3, [r11, #-8]
    1750:	e5933000 	ldr	r3, [r3]
    1754:	e50b3010 	str	r3, [r11, #-16]
    while (*KEY_ptr)
    1758:	e1a00000 	nop			; (mov r0, r0)
    175c:	e51b3008 	ldr	r3, [r11, #-8]
    1760:	e5933000 	ldr	r3, [r3]
    1764:	e3530000 	cmp	r3, #0
    1768:	1afffffb 	bne	175c <check_KEYs+0x44>
        ; // wait for pushbutton KEY release

    if (KEY_value == 0x1) // check KEY0
    176c:	e51b3010 	ldr	r3, [r11, #-16]
    1770:	e3530001 	cmp	r3, #1
    1774:	1a00000c 	bne	17ac <check_KEYs+0x94>
    {
        // reset counter to start recording
        *counter = 0;
    1778:	e51b3024 	ldr	r3, [r11, #-36]	; 0xffffffdc
    177c:	e3a02000 	mov	r2, #0
    1780:	e5832000 	str	r2, [r3]
        // clear audio-in FIFO
        *(audio_ptr) = 0x4;
    1784:	e51b300c 	ldr	r3, [r11, #-12]
    1788:	e3a02004 	mov	r2, #4
    178c:	e5832000 	str	r2, [r3]
        *(audio_ptr) = 0x0;
    1790:	e51b300c 	ldr	r3, [r11, #-12]
    1794:	e3a02000 	mov	r2, #0
    1798:	e5832000 	str	r2, [r3]

        *KEY0 = 1;
    179c:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    17a0:	e3a02001 	mov	r2, #1
    17a4:	e5832000 	str	r2, [r3]
    17a8:	ea00001e 	b	1828 <check_KEYs+0x110>
    } else if (KEY_value == 0x2) // check KEY1
    17ac:	e51b3010 	ldr	r3, [r11, #-16]
    17b0:	e3530002 	cmp	r3, #2
    17b4:	1a00000c 	bne	17ec <check_KEYs+0xd4>
    {
        // reset counter to start playback
        *counter = 0;
    17b8:	e51b3024 	ldr	r3, [r11, #-36]	; 0xffffffdc
    17bc:	e3a02000 	mov	r2, #0
    17c0:	e5832000 	str	r2, [r3]
        // clear audio-out FIFO
        *(audio_ptr) = 0x8;
    17c4:	e51b300c 	ldr	r3, [r11, #-12]
    17c8:	e3a02008 	mov	r2, #8
    17cc:	e5832000 	str	r2, [r3]
        *(audio_ptr) = 0x0;
    17d0:	e51b300c 	ldr	r3, [r11, #-12]
    17d4:	e3a02000 	mov	r2, #0
    17d8:	e5832000 	str	r2, [r3]

        *KEY1 = 1;
    17dc:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
    17e0:	e3a02001 	mov	r2, #1
    17e4:	e5832000 	str	r2, [r3]
    17e8:	ea00000e 	b	1828 <check_KEYs+0x110>
    }
    else if (KEY_value == 0x4) // check KEY2
    17ec:	e51b3010 	ldr	r3, [r11, #-16]
    17f0:	e3530004 	cmp	r3, #4
    17f4:	1a00000b 	bne	1828 <check_KEYs+0x110>
    {
        // reset counter to start playback
        *counter = 0;
    17f8:	e51b3024 	ldr	r3, [r11, #-36]	; 0xffffffdc
    17fc:	e3a02000 	mov	r2, #0
    1800:	e5832000 	str	r2, [r3]
        // clear audio-out FIFO
        *(audio_ptr) = 0x8;
    1804:	e51b300c 	ldr	r3, [r11, #-12]
    1808:	e3a02008 	mov	r2, #8
    180c:	e5832000 	str	r2, [r3]
        *(audio_ptr) = 0x0;
    1810:	e51b300c 	ldr	r3, [r11, #-12]
    1814:	e3a02000 	mov	r2, #0
    1818:	e5832000 	str	r2, [r3]

        *KEY2 = 1;
    181c:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
    1820:	e3a02001 	mov	r2, #1
    1824:	e5832000 	str	r2, [r3]
    }
}
    1828:	e28bd000 	add	sp, r11, #0
    182c:	e8bd0800 	ldmfd	sp!, {r11}
    1830:	e12fff1e 	bx	lr
    1834:	00000000 	andeq	r0, r0, r0

00001838 <VIS_VGA_Setup>:

static RingProperty ring;
static Line canvasHistory[2][MAX_LINES]; 
static int historyIndicator;

void VIS_VGA_Setup() {
    1838:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    183c:	e28db000 	add	r11, sp, #0
    ring.colorSeed = 0;
    1840:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1844:	e3403000 	movt	r3, #0
    1848:	e3a02000 	mov	r2, #0
    184c:	e5832000 	str	r2, [r3]
    ring.offsetDeg = 0;
    1850:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1854:	e3403000 	movt	r3, #0
    1858:	e3a02000 	mov	r2, #0
    185c:	e5832004 	str	r2, [r3, #4]
    ring.radius = SCREEN_H / 6;
    1860:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1864:	e3403000 	movt	r3, #0
    1868:	e3a02028 	mov	r2, #40	; 0x28
    186c:	e5832008 	str	r2, [r3, #8]
    ring.inOffset = 100;
    1870:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1874:	e3403000 	movt	r3, #0
    1878:	e3a02064 	mov	r2, #100	; 0x64
    187c:	e583200c 	str	r2, [r3, #12]
    ring.loudnessThreshold = 1000;
    1880:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1884:	e3403000 	movt	r3, #0
    1888:	e3a02ffa 	mov	r2, #1000	; 0x3e8
    188c:	e5832018 	str	r2, [r3, #24]
    ring.cX = SCREEN_W / 2;
    1890:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1894:	e3403000 	movt	r3, #0
    1898:	e3a020a0 	mov	r2, #160	; 0xa0
    189c:	e5832010 	str	r2, [r3, #16]
    ring.cY = SCREEN_H / 2;
    18a0:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    18a4:	e3403000 	movt	r3, #0
    18a8:	e3a02078 	mov	r2, #120	; 0x78
    18ac:	e5832014 	str	r2, [r3, #20]
    historyIndicator = 0;
    18b0:	e3043804 	movw	r3, #18436	; 0x4804
    18b4:	e3403001 	movt	r3, #1
    18b8:	e3a02000 	mov	r2, #0
    18bc:	e5832000 	str	r2, [r3]
}
    18c0:	e28bd000 	add	sp, r11, #0
    18c4:	e8bd0800 	ldmfd	sp!, {r11}
    18c8:	e12fff1e 	bx	lr

000018cc <get_ring>:

RingProperty *get_ring() {
    18cc:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    18d0:	e28db000 	add	r11, sp, #0
    return &ring;
    18d4:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    18d8:	e3403000 	movt	r3, #0
}
    18dc:	e1a00003 	mov	r0, r3
    18e0:	e28bd000 	add	sp, r11, #0
    18e4:	e8bd0800 	ldmfd	sp!, {r11}
    18e8:	e12fff1e 	bx	lr

000018ec <VIS_VGA_UpdateFrame>:

void VIS_VGA_UpdateFrame(unsigned size, unsigned spect[]) {
    18ec:	e92d4810 	push	{r4, r11, lr}
    18f0:	e28db008 	add	r11, sp, #8
    18f4:	e24dd044 	sub	sp, sp, #68	; 0x44
    18f8:	e50b0040 	str	r0, [r11, #-64]	; 0xffffffc0
    18fc:	e50b1044 	str	r1, [r11, #-68]	; 0xffffffbc
    while((*(pixel_ctrl_ptr + 3)) & 0x1); // wait for the previous swap
    1900:	e1a00000 	nop			; (mov r0, r0)
    1904:	e30a3748 	movw	r3, #42824	; 0xa748
    1908:	e3403000 	movt	r3, #0
    190c:	e5933000 	ldr	r3, [r3]
    1910:	e283300c 	add	r3, r3, #12
    1914:	e5933000 	ldr	r3, [r3]
    1918:	e2033001 	and	r3, r3, #1
    191c:	e3530000 	cmp	r3, #0
    1920:	1afffff7 	bne	1904 <VIS_VGA_UpdateFrame+0x18>
    pixel_buffer_start = *(pixel_ctrl_ptr + 1); // we draw on the back buffer
    1924:	e30a3748 	movw	r3, #42824	; 0xa748
    1928:	e3403000 	movt	r3, #0
    192c:	e5933000 	ldr	r3, [r3]
    1930:	e5932004 	ldr	r2, [r3, #4]
    1934:	e30a3ba4 	movw	r3, #43940	; 0xaba4
    1938:	e3403000 	movt	r3, #0
    193c:	e5832000 	str	r2, [r3]
    historyIndicator = 1 - historyIndicator;
    1940:	e3043804 	movw	r3, #18436	; 0x4804
    1944:	e3403001 	movt	r3, #1
    1948:	e5933000 	ldr	r3, [r3]
    194c:	e2632001 	rsb	r2, r3, #1
    1950:	e3043804 	movw	r3, #18436	; 0x4804
    1954:	e3403001 	movt	r3, #1
    1958:	e5832000 	str	r2, [r3]

    // find the largest number and default max is set in ring property
    unsigned maxLoudness = ring.loudnessThreshold;
    195c:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1960:	e3403000 	movt	r3, #0
    1964:	e5933018 	ldr	r3, [r3, #24]
    1968:	e50b3010 	str	r3, [r11, #-16]
    for (int i = 0; i < size; i++) {
    196c:	e3a03000 	mov	r3, #0
    1970:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
    1974:	ea00000b 	b	19a8 <VIS_VGA_UpdateFrame+0xbc>
        maxLoudness = maxLoudness >= spect[i] ? maxLoudness : spect[i];
    1978:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
    197c:	e1a03103 	lsl	r3, r3, #2
    1980:	e51b2044 	ldr	r2, [r11, #-68]	; 0xffffffbc
    1984:	e0823003 	add	r3, r2, r3
    1988:	e5933000 	ldr	r3, [r3]
    198c:	e51b2010 	ldr	r2, [r11, #-16]
    1990:	e1520003 	cmp	r2, r3
    1994:	21a03002 	movcs	r3, r2
    1998:	e50b3010 	str	r3, [r11, #-16]
    pixel_buffer_start = *(pixel_ctrl_ptr + 1); // we draw on the back buffer
    historyIndicator = 1 - historyIndicator;

    // find the largest number and default max is set in ring property
    unsigned maxLoudness = ring.loudnessThreshold;
    for (int i = 0; i < size; i++) {
    199c:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
    19a0:	e2833001 	add	r3, r3, #1
    19a4:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
    19a8:	e51b2014 	ldr	r2, [r11, #-20]	; 0xffffffec
    19ac:	e51b3040 	ldr	r3, [r11, #-64]	; 0xffffffc0
    19b0:	e1520003 	cmp	r2, r3
    19b4:	3affffef 	bcc	1978 <VIS_VGA_UpdateFrame+0x8c>
        maxLoudness = maxLoudness >= spect[i] ? maxLoudness : spect[i];
    }

    // // draw on VGA
    // unsigned startDeg = ring.offsetDeg;
    for (int i = 0; i < size; i++) {
    19b8:	e3a03000 	mov	r3, #0
    19bc:	e50b3018 	str	r3, [r11, #-24]	; 0xffffffe8
    19c0:	ea0000fa 	b	1db0 <VIS_VGA_UpdateFrame+0x4c4>
        unsigned color = color_from_gradient_hsv(ring.colorSeed + i * COLOR_RANGE / size);
    19c4:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    19c8:	e3403000 	movt	r3, #0
    19cc:	e5933000 	ldr	r3, [r3]
    19d0:	e1a04003 	mov	r4, r3
    19d4:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
    19d8:	e1a03002 	mov	r3, r2
    19dc:	e1a03203 	lsl	r3, r3, #4
    19e0:	e0623003 	rsb	r3, r2, r3
    19e4:	e1a03203 	lsl	r3, r3, #4
    19e8:	e1a00003 	mov	r0, r3
    19ec:	e51b1040 	ldr	r1, [r11, #-64]	; 0xffffffc0
    19f0:	eb0012b6 	bl	64d0 <__aeabi_uidiv>
    19f4:	e1a03000 	mov	r3, r0
    19f8:	e0843003 	add	r3, r4, r3
    19fc:	e1a00003 	mov	r0, r3
    1a00:	eb000230 	bl	22c8 <color_from_gradient_hsv>
    1a04:	e1a03000 	mov	r3, r0
    1a08:	e50b301c 	str	r3, [r11, #-28]	; 0xffffffe4
        unsigned degree = i * 360 / size + (ring.offsetDeg >> 4);
    1a0c:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    1a10:	e3a02f5a 	mov	r2, #360	; 0x168
    1a14:	e0030392 	mul	r3, r2, r3
    1a18:	e1a00003 	mov	r0, r3
    1a1c:	e51b1040 	ldr	r1, [r11, #-64]	; 0xffffffc0
    1a20:	eb0012aa 	bl	64d0 <__aeabi_uidiv>
    1a24:	e1a03000 	mov	r3, r0
    1a28:	e1a02003 	mov	r2, r3
    1a2c:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1a30:	e3403000 	movt	r3, #0
    1a34:	e5933004 	ldr	r3, [r3, #4]
    1a38:	e1a03243 	asr	r3, r3, #4
    1a3c:	e0823003 	add	r3, r2, r3
    1a40:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
        int maxLength = (SCREEN_W / 2 - ring.radius);
    1a44:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1a48:	e3403000 	movt	r3, #0
    1a4c:	e5933008 	ldr	r3, [r3, #8]
    1a50:	e26330a0 	rsb	r3, r3, #160	; 0xa0
    1a54:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc

        // // calculate start point
        int innerR = ring.radius - ((ring.inOffset * maxLength * spect[i] / maxLoudness) >> 10);
    1a58:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1a5c:	e3403000 	movt	r3, #0
    1a60:	e5933008 	ldr	r3, [r3, #8]
    1a64:	e1a04003 	mov	r4, r3
    1a68:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1a6c:	e3403000 	movt	r3, #0
    1a70:	e593300c 	ldr	r3, [r3, #12]
    1a74:	e51b2024 	ldr	r2, [r11, #-36]	; 0xffffffdc
    1a78:	e0030392 	mul	r3, r2, r3
    1a7c:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
    1a80:	e1a02102 	lsl	r2, r2, #2
    1a84:	e51b1044 	ldr	r1, [r11, #-68]	; 0xffffffbc
    1a88:	e0812002 	add	r2, r1, r2
    1a8c:	e5922000 	ldr	r2, [r2]
    1a90:	e0030392 	mul	r3, r2, r3
    1a94:	e1a00003 	mov	r0, r3
    1a98:	e51b1010 	ldr	r1, [r11, #-16]
    1a9c:	eb00128b 	bl	64d0 <__aeabi_uidiv>
    1aa0:	e1a03000 	mov	r3, r0
    1aa4:	e1a03523 	lsr	r3, r3, #10
    1aa8:	e0633004 	rsb	r3, r3, r4
    1aac:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
        unsigned iX = ring.cX + ((innerR * VIS_FastSin_d16(degree)) >> 16);
    1ab0:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1ab4:	e3403000 	movt	r3, #0
    1ab8:	e5934010 	ldr	r4, [r3, #16]
    1abc:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
    1ac0:	e1a00003 	mov	r0, r3
    1ac4:	eb000404 	bl	2adc <VIS_FastSin_d16>
    1ac8:	e1a03000 	mov	r3, r0
    1acc:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
    1ad0:	e0030392 	mul	r3, r2, r3
    1ad4:	e1a03843 	asr	r3, r3, #16
    1ad8:	e0843003 	add	r3, r4, r3
    1adc:	e50b302c 	str	r3, [r11, #-44]	; 0xffffffd4
        unsigned iY = ring.cY - ((innerR * VIS_FastCos_d16(degree)) >> 16);
    1ae0:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1ae4:	e3403000 	movt	r3, #0
    1ae8:	e5934014 	ldr	r4, [r3, #20]
    1aec:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
    1af0:	e1a00003 	mov	r0, r3
    1af4:	eb00042b 	bl	2ba8 <VIS_FastCos_d16>
    1af8:	e1a03000 	mov	r3, r0
    1afc:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
    1b00:	e0030392 	mul	r3, r2, r3
    1b04:	e1a03843 	asr	r3, r3, #16
    1b08:	e0633004 	rsb	r3, r3, r4
    1b0c:	e50b3030 	str	r3, [r11, #-48]	; 0xffffffd0

        // // calculate color end point
        int outerR = ring.radius + (((1024 - ring.inOffset) * maxLength * spect[i] / maxLoudness) >> 10); 
    1b10:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1b14:	e3403000 	movt	r3, #0
    1b18:	e5933008 	ldr	r3, [r3, #8]
    1b1c:	e1a04003 	mov	r4, r3
    1b20:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1b24:	e3403000 	movt	r3, #0
    1b28:	e593300c 	ldr	r3, [r3, #12]
    1b2c:	e2633b01 	rsb	r3, r3, #1024	; 0x400
    1b30:	e51b2024 	ldr	r2, [r11, #-36]	; 0xffffffdc
    1b34:	e0030392 	mul	r3, r2, r3
    1b38:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
    1b3c:	e1a02102 	lsl	r2, r2, #2
    1b40:	e51b1044 	ldr	r1, [r11, #-68]	; 0xffffffbc
    1b44:	e0812002 	add	r2, r1, r2
    1b48:	e5922000 	ldr	r2, [r2]
    1b4c:	e0030392 	mul	r3, r2, r3
    1b50:	e1a00003 	mov	r0, r3
    1b54:	e51b1010 	ldr	r1, [r11, #-16]
    1b58:	eb00125c 	bl	64d0 <__aeabi_uidiv>
    1b5c:	e1a03000 	mov	r3, r0
    1b60:	e1a03523 	lsr	r3, r3, #10
    1b64:	e0843003 	add	r3, r4, r3
    1b68:	e50b3034 	str	r3, [r11, #-52]	; 0xffffffcc
        unsigned oX = ring.cX + ((outerR * VIS_FastSin_d16(degree)) >> 16);
    1b6c:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1b70:	e3403000 	movt	r3, #0
    1b74:	e5934010 	ldr	r4, [r3, #16]
    1b78:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
    1b7c:	e1a00003 	mov	r0, r3
    1b80:	eb0003d5 	bl	2adc <VIS_FastSin_d16>
    1b84:	e1a03000 	mov	r3, r0
    1b88:	e51b2034 	ldr	r2, [r11, #-52]	; 0xffffffcc
    1b8c:	e0030392 	mul	r3, r2, r3
    1b90:	e1a03843 	asr	r3, r3, #16
    1b94:	e0843003 	add	r3, r4, r3
    1b98:	e50b3038 	str	r3, [r11, #-56]	; 0xffffffc8
        unsigned oY = ring.cY - ((outerR * VIS_FastCos_d16(degree)) >> 16);
    1b9c:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1ba0:	e3403000 	movt	r3, #0
    1ba4:	e5934014 	ldr	r4, [r3, #20]
    1ba8:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
    1bac:	e1a00003 	mov	r0, r3
    1bb0:	eb0003fc 	bl	2ba8 <VIS_FastCos_d16>
    1bb4:	e1a03000 	mov	r3, r0
    1bb8:	e51b2034 	ldr	r2, [r11, #-52]	; 0xffffffcc
    1bbc:	e0030392 	mul	r3, r2, r3
    1bc0:	e1a03843 	asr	r3, r3, #16
    1bc4:	e0633004 	rsb	r3, r3, r4
    1bc8:	e50b303c 	str	r3, [r11, #-60]	; 0xffffffc4

        // update history
        draw_lineStruct(canvasHistory[historyIndicator][i]);
    1bcc:	e3043804 	movw	r3, #18436	; 0x4804
    1bd0:	e3403001 	movt	r3, #1
    1bd4:	e5930000 	ldr	r0, [r3]
    1bd8:	e30a2bc4 	movw	r2, #43972	; 0xabc4
    1bdc:	e3402000 	movt	r2, #0
    1be0:	e51b1018 	ldr	r1, [r11, #-24]	; 0xffffffe8
    1be4:	e1a03001 	mov	r3, r1
    1be8:	e1a03103 	lsl	r3, r3, #2
    1bec:	e0833001 	add	r3, r3, r1
    1bf0:	e1a03103 	lsl	r3, r3, #2
    1bf4:	e3041e20 	movw	r1, #20000	; 0x4e20
    1bf8:	e0010091 	mul	r1, r1, r0
    1bfc:	e0833001 	add	r3, r3, r1
    1c00:	e0823003 	add	r3, r2, r3
    1c04:	e5932010 	ldr	r2, [r3, #16]
    1c08:	e58d2000 	str	r2, [sp]
    1c0c:	e893000f 	ldm	r3, {r0, r1, r2, r3}
    1c10:	eb00025c 	bl	2588 <draw_lineStruct>
        canvasHistory[historyIndicator][i] = (Line){iX, iY, oX, oY, 0};
    1c14:	e3043804 	movw	r3, #18436	; 0x4804
    1c18:	e3403001 	movt	r3, #1
    1c1c:	e5932000 	ldr	r2, [r3]
    1c20:	e30a1bc4 	movw	r1, #43972	; 0xabc4
    1c24:	e3401000 	movt	r1, #0
    1c28:	e51b0018 	ldr	r0, [r11, #-24]	; 0xffffffe8
    1c2c:	e1a03000 	mov	r3, r0
    1c30:	e1a03103 	lsl	r3, r3, #2
    1c34:	e0833000 	add	r3, r3, r0
    1c38:	e1a03103 	lsl	r3, r3, #2
    1c3c:	e3040e20 	movw	r0, #20000	; 0x4e20
    1c40:	e0000290 	mul	r0, r0, r2
    1c44:	e0833000 	add	r3, r3, r0
    1c48:	e0813003 	add	r3, r1, r3
    1c4c:	e51b102c 	ldr	r1, [r11, #-44]	; 0xffffffd4
    1c50:	e5831000 	str	r1, [r3]
    1c54:	e30a1bc4 	movw	r1, #43972	; 0xabc4
    1c58:	e3401000 	movt	r1, #0
    1c5c:	e51b0018 	ldr	r0, [r11, #-24]	; 0xffffffe8
    1c60:	e3a0c004 	mov	r12, #4
    1c64:	e1a03000 	mov	r3, r0
    1c68:	e1a03103 	lsl	r3, r3, #2
    1c6c:	e0833000 	add	r3, r3, r0
    1c70:	e1a03103 	lsl	r3, r3, #2
    1c74:	e3040e20 	movw	r0, #20000	; 0x4e20
    1c78:	e0000290 	mul	r0, r0, r2
    1c7c:	e0833000 	add	r3, r3, r0
    1c80:	e0813003 	add	r3, r1, r3
    1c84:	e083300c 	add	r3, r3, r12
    1c88:	e51b1030 	ldr	r1, [r11, #-48]	; 0xffffffd0
    1c8c:	e5831000 	str	r1, [r3]
    1c90:	e30a1bc4 	movw	r1, #43972	; 0xabc4
    1c94:	e3401000 	movt	r1, #0
    1c98:	e51b0018 	ldr	r0, [r11, #-24]	; 0xffffffe8
    1c9c:	e3a0c008 	mov	r12, #8
    1ca0:	e1a03000 	mov	r3, r0
    1ca4:	e1a03103 	lsl	r3, r3, #2
    1ca8:	e0833000 	add	r3, r3, r0
    1cac:	e1a03103 	lsl	r3, r3, #2
    1cb0:	e3040e20 	movw	r0, #20000	; 0x4e20
    1cb4:	e0000290 	mul	r0, r0, r2
    1cb8:	e0833000 	add	r3, r3, r0
    1cbc:	e0813003 	add	r3, r1, r3
    1cc0:	e083300c 	add	r3, r3, r12
    1cc4:	e51b1038 	ldr	r1, [r11, #-56]	; 0xffffffc8
    1cc8:	e5831000 	str	r1, [r3]
    1ccc:	e30a1bc4 	movw	r1, #43972	; 0xabc4
    1cd0:	e3401000 	movt	r1, #0
    1cd4:	e51b0018 	ldr	r0, [r11, #-24]	; 0xffffffe8
    1cd8:	e3a0c00c 	mov	r12, #12
    1cdc:	e1a03000 	mov	r3, r0
    1ce0:	e1a03103 	lsl	r3, r3, #2
    1ce4:	e0833000 	add	r3, r3, r0
    1ce8:	e1a03103 	lsl	r3, r3, #2
    1cec:	e3040e20 	movw	r0, #20000	; 0x4e20
    1cf0:	e0000290 	mul	r0, r0, r2
    1cf4:	e0833000 	add	r3, r3, r0
    1cf8:	e0813003 	add	r3, r1, r3
    1cfc:	e083300c 	add	r3, r3, r12
    1d00:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    1d04:	e5831000 	str	r1, [r3]
    1d08:	e30a1bc4 	movw	r1, #43972	; 0xabc4
    1d0c:	e3401000 	movt	r1, #0
    1d10:	e51b0018 	ldr	r0, [r11, #-24]	; 0xffffffe8
    1d14:	e3a0c010 	mov	r12, #16
    1d18:	e1a03000 	mov	r3, r0
    1d1c:	e1a03103 	lsl	r3, r3, #2
    1d20:	e0833000 	add	r3, r3, r0
    1d24:	e1a03103 	lsl	r3, r3, #2
    1d28:	e3040e20 	movw	r0, #20000	; 0x4e20
    1d2c:	e0020290 	mul	r2, r0, r2
    1d30:	e0833002 	add	r3, r3, r2
    1d34:	e0813003 	add	r3, r1, r3
    1d38:	e083300c 	add	r3, r3, r12
    1d3c:	e3a02000 	mov	r2, #0
    1d40:	e5832000 	str	r2, [r3]

        draw_line(iX, iY, oX, oY, color);
    1d44:	e51b002c 	ldr	r0, [r11, #-44]	; 0xffffffd4
    1d48:	e51b1030 	ldr	r1, [r11, #-48]	; 0xffffffd0
    1d4c:	e51b2038 	ldr	r2, [r11, #-56]	; 0xffffffc8
    1d50:	e51b303c 	ldr	r3, [r11, #-60]	; 0xffffffc4
    1d54:	e51bc01c 	ldr	r12, [r11, #-28]	; 0xffffffe4
    1d58:	e58dc000 	str	r12, [sp]
    1d5c:	eb00021d 	bl	25d8 <draw_line>

        // update ring properties
        // ring.colorSeed = (ring.colorSeed + 1) & 1F;
        ring.offsetDeg = (ring.offsetDeg + 1) % (360 << 4);
    1d60:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1d64:	e3403000 	movt	r3, #0
    1d68:	e5933004 	ldr	r3, [r3, #4]
    1d6c:	e2833001 	add	r3, r3, #1
    1d70:	e30620b7 	movw	r2, #24759	; 0x60b7
    1d74:	e34b260b 	movt	r2, #46603	; 0xb60b
    1d78:	e0c21392 	smull	r1, r2, r2, r3
    1d7c:	e0822003 	add	r2, r2, r3
    1d80:	e1a01642 	asr	r1, r2, #12
    1d84:	e1a02fc3 	asr	r2, r3, #31
    1d88:	e0622001 	rsb	r2, r2, r1
    1d8c:	e3a01d5a 	mov	r1, #5760	; 0x1680
    1d90:	e0020291 	mul	r2, r1, r2
    1d94:	e0622003 	rsb	r2, r2, r3
    1d98:	e30a3ba8 	movw	r3, #43944	; 0xaba8
    1d9c:	e3403000 	movt	r3, #0
    1da0:	e5832004 	str	r2, [r3, #4]
        maxLoudness = maxLoudness >= spect[i] ? maxLoudness : spect[i];
    }

    // // draw on VGA
    // unsigned startDeg = ring.offsetDeg;
    for (int i = 0; i < size; i++) {
    1da4:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    1da8:	e2833001 	add	r3, r3, #1
    1dac:	e50b3018 	str	r3, [r11, #-24]	; 0xffffffe8
    1db0:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
    1db4:	e51b3040 	ldr	r3, [r11, #-64]	; 0xffffffc0
    1db8:	e1520003 	cmp	r2, r3
    1dbc:	3affff00 	bcc	19c4 <VIS_VGA_UpdateFrame+0xd8>
        ring.offsetDeg = (ring.offsetDeg + 1) % (360 << 4);
    }


    // swap front and back buffers on VGA vertical sync
    *pixel_ctrl_ptr = 0x1;
    1dc0:	e30a3748 	movw	r3, #42824	; 0xa748
    1dc4:	e3403000 	movt	r3, #0
    1dc8:	e5933000 	ldr	r3, [r3]
    1dcc:	e3a02001 	mov	r2, #1
    1dd0:	e5832000 	str	r2, [r3]
}
    1dd4:	e24bd008 	sub	sp, r11, #8
    1dd8:	e8bd8810 	pop	{r4, r11, pc}

00001ddc <VIS_VGA_ColorTest>:

void VIS_VGA_ColorTest() {
    1ddc:	e92d4800 	push	{r11, lr}
    1de0:	e28db004 	add	r11, sp, #4
    1de4:	e24dd010 	sub	sp, sp, #16
    
    while((*(pixel_ctrl_ptr + 3)) & 0x1); // wait for the previous swap
    1de8:	e1a00000 	nop			; (mov r0, r0)
    1dec:	e30a3748 	movw	r3, #42824	; 0xa748
    1df0:	e3403000 	movt	r3, #0
    1df4:	e5933000 	ldr	r3, [r3]
    1df8:	e283300c 	add	r3, r3, #12
    1dfc:	e5933000 	ldr	r3, [r3]
    1e00:	e2033001 	and	r3, r3, #1
    1e04:	e3530000 	cmp	r3, #0
    1e08:	1afffff7 	bne	1dec <VIS_VGA_ColorTest+0x10>
    pixel_buffer_start = *(pixel_ctrl_ptr + 1); // we draw on the back buffer
    1e0c:	e30a3748 	movw	r3, #42824	; 0xa748
    1e10:	e3403000 	movt	r3, #0
    1e14:	e5933000 	ldr	r3, [r3]
    1e18:	e5932004 	ldr	r2, [r3, #4]
    1e1c:	e30a3ba4 	movw	r3, #43940	; 0xaba4
    1e20:	e3403000 	movt	r3, #0
    1e24:	e5832000 	str	r2, [r3]
    
    clear_screen();
    1e28:	eb000293 	bl	287c <clear_screen>
    for (int i = 0; i < SCREEN_H; i++) {
    1e2c:	e3a03000 	mov	r3, #0
    1e30:	e50b3008 	str	r3, [r11, #-8]
    1e34:	ea000017 	b	1e98 <VIS_VGA_ColorTest+0xbc>
        draw_line(0, i, SCREEN_W - 1, i, color_from_gradient_hsv(i * COLOR_RANGE / SCREEN_H));
    1e38:	e51b2008 	ldr	r2, [r11, #-8]
    1e3c:	e1a03002 	mov	r3, r2
    1e40:	e1a03203 	lsl	r3, r3, #4
    1e44:	e0623003 	rsb	r3, r2, r3
    1e48:	e1a03203 	lsl	r3, r3, #4
    1e4c:	e3082889 	movw	r2, #34953	; 0x8889
    1e50:	e3482888 	movt	r2, #34952	; 0x8888
    1e54:	e0c21392 	smull	r1, r2, r2, r3
    1e58:	e0822003 	add	r2, r2, r3
    1e5c:	e1a023c2 	asr	r2, r2, #7
    1e60:	e1a03fc3 	asr	r3, r3, #31
    1e64:	e0633002 	rsb	r3, r3, r2
    1e68:	e1a00003 	mov	r0, r3
    1e6c:	eb000115 	bl	22c8 <color_from_gradient_hsv>
    1e70:	e1a03000 	mov	r3, r0
    1e74:	e58d3000 	str	r3, [sp]
    1e78:	e3a00000 	mov	r0, #0
    1e7c:	e51b1008 	ldr	r1, [r11, #-8]
    1e80:	e300213f 	movw	r2, #319	; 0x13f
    1e84:	e51b3008 	ldr	r3, [r11, #-8]
    1e88:	eb0001d2 	bl	25d8 <draw_line>
    
    while((*(pixel_ctrl_ptr + 3)) & 0x1); // wait for the previous swap
    pixel_buffer_start = *(pixel_ctrl_ptr + 1); // we draw on the back buffer
    
    clear_screen();
    for (int i = 0; i < SCREEN_H; i++) {
    1e8c:	e51b3008 	ldr	r3, [r11, #-8]
    1e90:	e2833001 	add	r3, r3, #1
    1e94:	e50b3008 	str	r3, [r11, #-8]
    1e98:	e51b3008 	ldr	r3, [r11, #-8]
    1e9c:	e35300ef 	cmp	r3, #239	; 0xef
    1ea0:	daffffe4 	ble	1e38 <VIS_VGA_ColorTest+0x5c>
        draw_line(0, i, SCREEN_W - 1, i, color_from_gradient_hsv(i * COLOR_RANGE / SCREEN_H));
    }

    // swap front and back buffers on VGA vertical sync
    *pixel_ctrl_ptr = 0x1;
    1ea4:	e30a3748 	movw	r3, #42824	; 0xa748
    1ea8:	e3403000 	movt	r3, #0
    1eac:	e5933000 	ldr	r3, [r3]
    1eb0:	e3a02001 	mov	r2, #1
    1eb4:	e5832000 	str	r2, [r3]
}
    1eb8:	e24bd004 	sub	sp, r11, #4
    1ebc:	e8bd8800 	pop	{r11, pc}

00001ec0 <VIS_VGA_SetBuffer>:

void VIS_VGA_SetBuffer(unsigned frontAddress, unsigned backAddress) {
    1ec0:	e92d4800 	push	{r11, lr}
    1ec4:	e28db004 	add	r11, sp, #4
    1ec8:	e24dd008 	sub	sp, sp, #8
    1ecc:	e50b0008 	str	r0, [r11, #-8]
    1ed0:	e50b100c 	str	r1, [r11, #-12]
    *(pixel_ctrl_ptr + 1) = frontAddress;
    1ed4:	e30a3748 	movw	r3, #42824	; 0xa748
    1ed8:	e3403000 	movt	r3, #0
    1edc:	e5933000 	ldr	r3, [r3]
    1ee0:	e2833004 	add	r3, r3, #4
    1ee4:	e51b2008 	ldr	r2, [r11, #-8]
    1ee8:	e5832000 	str	r2, [r3]
    pixel_buffer_start = *(pixel_ctrl_ptr + 1); // we draw on the back buffer
    1eec:	e30a3748 	movw	r3, #42824	; 0xa748
    1ef0:	e3403000 	movt	r3, #0
    1ef4:	e5933000 	ldr	r3, [r3]
    1ef8:	e5932004 	ldr	r2, [r3, #4]
    1efc:	e30a3ba4 	movw	r3, #43940	; 0xaba4
    1f00:	e3403000 	movt	r3, #0
    1f04:	e5832000 	str	r2, [r3]
    clear_screen();
    1f08:	eb00025b 	bl	287c <clear_screen>
    wait_for_vsync();
    1f0c:	eb000178 	bl	24f4 <wait_for_vsync>
    
    /* set front pixel buffer to start of FPGA On-chip memory */
    *(pixel_ctrl_ptr + 1) = backAddress;
    1f10:	e30a3748 	movw	r3, #42824	; 0xa748
    1f14:	e3403000 	movt	r3, #0
    1f18:	e5933000 	ldr	r3, [r3]
    1f1c:	e2833004 	add	r3, r3, #4
    1f20:	e51b200c 	ldr	r2, [r11, #-12]
    1f24:	e5832000 	str	r2, [r3]
    pixel_buffer_start = *(pixel_ctrl_ptr + 1); // we draw on the front buffer
    1f28:	e30a3748 	movw	r3, #42824	; 0xa748
    1f2c:	e3403000 	movt	r3, #0
    1f30:	e5933000 	ldr	r3, [r3]
    1f34:	e5932004 	ldr	r2, [r3, #4]
    1f38:	e30a3ba4 	movw	r3, #43940	; 0xaba4
    1f3c:	e3403000 	movt	r3, #0
    1f40:	e5832000 	str	r2, [r3]
    clear_screen();
    1f44:	eb00024c 	bl	287c <clear_screen>
    wait_for_vsync();
    1f48:	eb000169 	bl	24f4 <wait_for_vsync>

    VIS_VGA_Setup();
    1f4c:	ebfffe39 	bl	1838 <VIS_VGA_Setup>
}
    1f50:	e24bd004 	sub	sp, r11, #4
    1f54:	e8bd8800 	pop	{r11, pc}

00001f58 <color_from_RGB888>:

int color_from_RGB888(int r, int g, int b) {
    1f58:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    1f5c:	e28db000 	add	r11, sp, #0
    1f60:	e24dd014 	sub	sp, sp, #20
    1f64:	e50b0008 	str	r0, [r11, #-8]
    1f68:	e50b100c 	str	r1, [r11, #-12]
    1f6c:	e50b2010 	str	r2, [r11, #-16]
#ifdef DEBUG
    r = r % 256;
    1f70:	e51b2008 	ldr	r2, [r11, #-8]
    1f74:	e1a03fc2 	asr	r3, r2, #31
    1f78:	e1a03c23 	lsr	r3, r3, #24
    1f7c:	e0822003 	add	r2, r2, r3
    1f80:	e6ef2072 	uxtb	r2, r2
    1f84:	e0633002 	rsb	r3, r3, r2
    1f88:	e50b3008 	str	r3, [r11, #-8]
    g = g % 256;
    1f8c:	e51b200c 	ldr	r2, [r11, #-12]
    1f90:	e1a03fc2 	asr	r3, r2, #31
    1f94:	e1a03c23 	lsr	r3, r3, #24
    1f98:	e0822003 	add	r2, r2, r3
    1f9c:	e6ef2072 	uxtb	r2, r2
    1fa0:	e0633002 	rsb	r3, r3, r2
    1fa4:	e50b300c 	str	r3, [r11, #-12]
    b = b % 256;
    1fa8:	e51b2010 	ldr	r2, [r11, #-16]
    1fac:	e1a03fc2 	asr	r3, r2, #31
    1fb0:	e1a03c23 	lsr	r3, r3, #24
    1fb4:	e0822003 	add	r2, r2, r3
    1fb8:	e6ef2072 	uxtb	r2, r2
    1fbc:	e0633002 	rsb	r3, r3, r2
    1fc0:	e50b3010 	str	r3, [r11, #-16]
#endif
    return (r >> 3 << 11 ) | (g >> 2 << 5 ) | (b >> 3 & 0x1F);
    1fc4:	e51b3008 	ldr	r3, [r11, #-8]
    1fc8:	e1a031c3 	asr	r3, r3, #3
    1fcc:	e1a02583 	lsl	r2, r3, #11
    1fd0:	e51b300c 	ldr	r3, [r11, #-12]
    1fd4:	e1a03143 	asr	r3, r3, #2
    1fd8:	e1a03283 	lsl	r3, r3, #5
    1fdc:	e1822003 	orr	r2, r2, r3
    1fe0:	e51b3010 	ldr	r3, [r11, #-16]
    1fe4:	e1a031c3 	asr	r3, r3, #3
    1fe8:	e203301f 	and	r3, r3, #31
    1fec:	e1823003 	orr	r3, r2, r3
}
    1ff0:	e1a00003 	mov	r0, r3
    1ff4:	e28bd000 	add	sp, r11, #0
    1ff8:	e8bd0800 	ldmfd	sp!, {r11}
    1ffc:	e12fff1e 	bx	lr

00002000 <color_from_gradient>:

int color_from_gradient(int seed, int freq) {
    2000:	e92d4800 	push	{r11, lr}
    2004:	e28db004 	add	r11, sp, #4
    2008:	e24dd018 	sub	sp, sp, #24
    200c:	e50b0018 	str	r0, [r11, #-24]	; 0xffffffe8
    2010:	e50b101c 	str	r1, [r11, #-28]	; 0xffffffe4
    int r = ((127 * VIS_FastSin_r16((freq * seed << 16) / 30 + (0 << 16))) >> 16) + 128;
    2014:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
    2018:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
    201c:	e0030392 	mul	r3, r2, r3
    2020:	e1a03803 	lsl	r3, r3, #16
    2024:	e3082889 	movw	r2, #34953	; 0x8889
    2028:	e3482888 	movt	r2, #34952	; 0x8888
    202c:	e0c21392 	smull	r1, r2, r2, r3
    2030:	e0822003 	add	r2, r2, r3
    2034:	e1a02242 	asr	r2, r2, #4
    2038:	e1a03fc3 	asr	r3, r3, #31
    203c:	e0633002 	rsb	r3, r3, r2
    2040:	e1a00003 	mov	r0, r3
    2044:	eb0002bc 	bl	2b3c <VIS_FastSin_r16>
    2048:	e1a02000 	mov	r2, r0
    204c:	e1a03002 	mov	r3, r2
    2050:	e1a03383 	lsl	r3, r3, #7
    2054:	e0623003 	rsb	r3, r2, r3
    2058:	e1a03843 	asr	r3, r3, #16
    205c:	e2833080 	add	r3, r3, #128	; 0x80
    2060:	e50b3008 	str	r3, [r11, #-8]
    int g = ((127 * VIS_FastSin_r16((freq * seed << 16) / 30 + (1 << 16))) >> 16) + 128;
    2064:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
    2068:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
    206c:	e0030392 	mul	r3, r2, r3
    2070:	e1a03803 	lsl	r3, r3, #16
    2074:	e3082889 	movw	r2, #34953	; 0x8889
    2078:	e3482888 	movt	r2, #34952	; 0x8888
    207c:	e0c21392 	smull	r1, r2, r2, r3
    2080:	e0822003 	add	r2, r2, r3
    2084:	e1a02242 	asr	r2, r2, #4
    2088:	e1a03fc3 	asr	r3, r3, #31
    208c:	e0633002 	rsb	r3, r3, r2
    2090:	e2833801 	add	r3, r3, #65536	; 0x10000
    2094:	e1a00003 	mov	r0, r3
    2098:	eb0002a7 	bl	2b3c <VIS_FastSin_r16>
    209c:	e1a02000 	mov	r2, r0
    20a0:	e1a03002 	mov	r3, r2
    20a4:	e1a03383 	lsl	r3, r3, #7
    20a8:	e0623003 	rsb	r3, r2, r3
    20ac:	e1a03843 	asr	r3, r3, #16
    20b0:	e2833080 	add	r3, r3, #128	; 0x80
    20b4:	e50b300c 	str	r3, [r11, #-12]
    int b = ((127 * VIS_FastSin_r16((freq * seed << 16) / 30 + (2 << 16))) >> 16) + 128;
    20b8:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
    20bc:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
    20c0:	e0030392 	mul	r3, r2, r3
    20c4:	e1a03803 	lsl	r3, r3, #16
    20c8:	e3082889 	movw	r2, #34953	; 0x8889
    20cc:	e3482888 	movt	r2, #34952	; 0x8888
    20d0:	e0c21392 	smull	r1, r2, r2, r3
    20d4:	e0822003 	add	r2, r2, r3
    20d8:	e1a02242 	asr	r2, r2, #4
    20dc:	e1a03fc3 	asr	r3, r3, #31
    20e0:	e0633002 	rsb	r3, r3, r2
    20e4:	e2833802 	add	r3, r3, #131072	; 0x20000
    20e8:	e1a00003 	mov	r0, r3
    20ec:	eb000292 	bl	2b3c <VIS_FastSin_r16>
    20f0:	e1a02000 	mov	r2, r0
    20f4:	e1a03002 	mov	r3, r2
    20f8:	e1a03383 	lsl	r3, r3, #7
    20fc:	e0623003 	rsb	r3, r2, r3
    2100:	e1a03843 	asr	r3, r3, #16
    2104:	e2833080 	add	r3, r3, #128	; 0x80
    2108:	e50b3010 	str	r3, [r11, #-16]
    return color_from_RGB888(r, g, b);
    210c:	e51b0008 	ldr	r0, [r11, #-8]
    2110:	e51b100c 	ldr	r1, [r11, #-12]
    2114:	e51b2010 	ldr	r2, [r11, #-16]
    2118:	ebffff8e 	bl	1f58 <color_from_RGB888>
    211c:	e1a03000 	mov	r3, r0
}
    2120:	e1a00003 	mov	r0, r3
    2124:	e24bd004 	sub	sp, r11, #4
    2128:	e8bd8800 	pop	{r11, pc}

0000212c <color_from_gradient_f>:

int color_from_gradient_f(int seed, int freq) {
    212c:	e92d4800 	push	{r11, lr}
    2130:	e28db004 	add	r11, sp, #4
    2134:	e24dd018 	sub	sp, sp, #24
    2138:	e50b0018 	str	r0, [r11, #-24]	; 0xffffffe8
    213c:	e50b101c 	str	r1, [r11, #-28]	; 0xffffffe4
    static const int colorScale = 55, colorOffset = 200;
    int r = VIS_FastSin_r(freq * seed / 10. + 0) * colorScale + colorOffset;
    2140:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
    2144:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
    2148:	e0030392 	mul	r3, r2, r3
    214c:	ee053a90 	vmov	s11, r3
    2150:	eeb86be5 	vcvt.f64.s32	d6, s11
    2154:	ed9f7b53 	vldr	d7, [pc, #332]	; 22a8 <color_from_gradient_f+0x17c>
    2158:	ee867b07 	vdiv.f64	d7, d6, d7
    215c:	ed9f6b53 	vldr	d6, [pc, #332]	; 22b0 <color_from_gradient_f+0x184>
    2160:	ee377b06 	vadd.f64	d7, d7, d6
    2164:	ec510b17 	vmov	r0, r1, d7
    2168:	eb0001fe 	bl	2968 <VIS_FastSin_r>
    216c:	ec410b16 	vmov	d6, r0, r1
    2170:	e3073f20 	movw	r3, #32544	; 0x7f20
    2174:	e3403000 	movt	r3, #0
    2178:	e5933000 	ldr	r3, [r3]
    217c:	ee053a90 	vmov	s11, r3
    2180:	eeb87be5 	vcvt.f64.s32	d7, s11
    2184:	ee266b07 	vmul.f64	d6, d6, d7
    2188:	e3073f24 	movw	r3, #32548	; 0x7f24
    218c:	e3403000 	movt	r3, #0
    2190:	e5933000 	ldr	r3, [r3]
    2194:	ee053a90 	vmov	s11, r3
    2198:	eeb87be5 	vcvt.f64.s32	d7, s11
    219c:	ee367b07 	vadd.f64	d7, d6, d7
    21a0:	eefd6bc7 	vcvt.s32.f64	s13, d7
    21a4:	ee163a90 	vmov	r3, s13
    21a8:	e50b3008 	str	r3, [r11, #-8]
    int g = VIS_FastSin_r(freq * seed / 10. + 1) * colorScale + colorOffset;
    21ac:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
    21b0:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
    21b4:	e0030392 	mul	r3, r2, r3
    21b8:	ee073a90 	vmov	s15, r3
    21bc:	eeb86be7 	vcvt.f64.s32	d6, s15
    21c0:	ed9f7b38 	vldr	d7, [pc, #224]	; 22a8 <color_from_gradient_f+0x17c>
    21c4:	ee867b07 	vdiv.f64	d7, d6, d7
    21c8:	ed9f6b3a 	vldr	d6, [pc, #232]	; 22b8 <color_from_gradient_f+0x18c>
    21cc:	ee377b06 	vadd.f64	d7, d7, d6
    21d0:	ec510b17 	vmov	r0, r1, d7
    21d4:	eb0001e3 	bl	2968 <VIS_FastSin_r>
    21d8:	ec410b16 	vmov	d6, r0, r1
    21dc:	e3073f20 	movw	r3, #32544	; 0x7f20
    21e0:	e3403000 	movt	r3, #0
    21e4:	e5933000 	ldr	r3, [r3]
    21e8:	ee053a90 	vmov	s11, r3
    21ec:	eeb87be5 	vcvt.f64.s32	d7, s11
    21f0:	ee266b07 	vmul.f64	d6, d6, d7
    21f4:	e3073f24 	movw	r3, #32548	; 0x7f24
    21f8:	e3403000 	movt	r3, #0
    21fc:	e5933000 	ldr	r3, [r3]
    2200:	ee053a90 	vmov	s11, r3
    2204:	eeb87be5 	vcvt.f64.s32	d7, s11
    2208:	ee367b07 	vadd.f64	d7, d6, d7
    220c:	eefd6bc7 	vcvt.s32.f64	s13, d7
    2210:	ee163a90 	vmov	r3, s13
    2214:	e50b300c 	str	r3, [r11, #-12]
    int b = VIS_FastSin_r(freq * seed / 10. + 2) * colorScale + colorOffset;
    2218:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
    221c:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
    2220:	e0030392 	mul	r3, r2, r3
    2224:	ee073a90 	vmov	s15, r3
    2228:	eeb86be7 	vcvt.f64.s32	d6, s15
    222c:	ed9f7b1d 	vldr	d7, [pc, #116]	; 22a8 <color_from_gradient_f+0x17c>
    2230:	ee867b07 	vdiv.f64	d7, d6, d7
    2234:	ed9f6b21 	vldr	d6, [pc, #132]	; 22c0 <color_from_gradient_f+0x194>
    2238:	ee377b06 	vadd.f64	d7, d7, d6
    223c:	ec510b17 	vmov	r0, r1, d7
    2240:	eb0001c8 	bl	2968 <VIS_FastSin_r>
    2244:	ec410b16 	vmov	d6, r0, r1
    2248:	e3073f20 	movw	r3, #32544	; 0x7f20
    224c:	e3403000 	movt	r3, #0
    2250:	e5933000 	ldr	r3, [r3]
    2254:	ee053a90 	vmov	s11, r3
    2258:	eeb87be5 	vcvt.f64.s32	d7, s11
    225c:	ee266b07 	vmul.f64	d6, d6, d7
    2260:	e3073f24 	movw	r3, #32548	; 0x7f24
    2264:	e3403000 	movt	r3, #0
    2268:	e5933000 	ldr	r3, [r3]
    226c:	ee053a90 	vmov	s11, r3
    2270:	eeb87be5 	vcvt.f64.s32	d7, s11
    2274:	ee367b07 	vadd.f64	d7, d6, d7
    2278:	eefd6bc7 	vcvt.s32.f64	s13, d7
    227c:	ee163a90 	vmov	r3, s13
    2280:	e50b3010 	str	r3, [r11, #-16]
    return color_from_RGB888(r, g, b);
    2284:	e51b0008 	ldr	r0, [r11, #-8]
    2288:	e51b100c 	ldr	r1, [r11, #-12]
    228c:	e51b2010 	ldr	r2, [r11, #-16]
    2290:	ebffff30 	bl	1f58 <color_from_RGB888>
    2294:	e1a03000 	mov	r3, r0
}
    2298:	e1a00003 	mov	r0, r3
    229c:	e24bd004 	sub	sp, r11, #4
    22a0:	e8bd8800 	pop	{r11, pc}
    22a4:	e320f000 	nop	{0}
    22a8:	00000000 	.word	0x00000000
    22ac:	40240000 	.word	0x40240000
	...
    22bc:	3ff00000 	.word	0x3ff00000
    22c0:	00000000 	.word	0x00000000
    22c4:	40000000 	.word	0x40000000

000022c8 <color_from_gradient_hsv>:

int color_from_gradient_hsv(int cid) {
    22c8:	e92d4800 	push	{r11, lr}
    22cc:	e28db004 	add	r11, sp, #4
    22d0:	e24dd008 	sub	sp, sp, #8
    22d4:	e50b0008 	str	r0, [r11, #-8]
    cid = cid % COLOR_RANGE;
    22d8:	e51b2008 	ldr	r2, [r11, #-8]
    22dc:	e3083889 	movw	r3, #34953	; 0x8889
    22e0:	e3483888 	movt	r3, #34952	; 0x8888
    22e4:	e0c31293 	smull	r1, r3, r3, r2
    22e8:	e0833002 	add	r3, r3, r2
    22ec:	e1a013c3 	asr	r1, r3, #7
    22f0:	e1a03fc2 	asr	r3, r2, #31
    22f4:	e0631001 	rsb	r1, r3, r1
    22f8:	e1a03001 	mov	r3, r1
    22fc:	e1a03203 	lsl	r3, r3, #4
    2300:	e0613003 	rsb	r3, r1, r3
    2304:	e1a03203 	lsl	r3, r3, #4
    2308:	e0633002 	rsb	r3, r3, r2
    230c:	e50b3008 	str	r3, [r11, #-8]
    static int r = 0, g = 0, b = 0;
    if (cid <= COLOR_RANGE * 3 / 10) {
    2310:	e51b3008 	ldr	r3, [r11, #-8]
    2314:	e3530048 	cmp	r3, #72	; 0x48
    2318:	ca000017 	bgt	237c <color_from_gradient_hsv+0xb4>
        r = 0xFF;
    231c:	e3043808 	movw	r3, #18440	; 0x4808
    2320:	e3403001 	movt	r3, #1
    2324:	e3a020ff 	mov	r2, #255	; 0xff
    2328:	e5832000 	str	r2, [r3]
        g = cid * 85 / 24;
    232c:	e51b2008 	ldr	r2, [r11, #-8]
    2330:	e1a03002 	mov	r3, r2
    2334:	e1a03103 	lsl	r3, r3, #2
    2338:	e0833002 	add	r3, r3, r2
    233c:	e1a02203 	lsl	r2, r3, #4
    2340:	e0832002 	add	r2, r3, r2
    2344:	e30a3aab 	movw	r3, #43691	; 0xaaab
    2348:	e3423aaa 	movt	r3, #10922	; 0x2aaa
    234c:	e0c31293 	smull	r1, r3, r3, r2
    2350:	e1a01143 	asr	r1, r3, #2
    2354:	e1a03fc2 	asr	r3, r2, #31
    2358:	e0632001 	rsb	r2, r3, r1
    235c:	e304380c 	movw	r3, #18444	; 0x480c
    2360:	e3403001 	movt	r3, #1
    2364:	e5832000 	str	r2, [r3]
        b = 0x0;
    2368:	e3043810 	movw	r3, #18448	; 0x4810
    236c:	e3403001 	movt	r3, #1
    2370:	e3a02000 	mov	r2, #0
    2374:	e5832000 	str	r2, [r3]
    2378:	ea00004c 	b	24b0 <color_from_gradient_hsv+0x1e8>
    } else if (cid < COLOR_RANGE * 5 / 10) {
    237c:	e51b3008 	ldr	r3, [r11, #-8]
    2380:	e3530077 	cmp	r3, #119	; 0x77
    2384:	ca000016 	bgt	23e4 <color_from_gradient_hsv+0x11c>
        r = (COLOR_RANGE * 3 / 10 - cid) * 85 / 24;
    2388:	e51b3008 	ldr	r3, [r11, #-8]
    238c:	e3e02054 	mvn	r2, #84	; 0x54
    2390:	e0030392 	mul	r3, r2, r3
    2394:	e2833d5f 	add	r3, r3, #6080	; 0x17c0
    2398:	e2833028 	add	r3, r3, #40	; 0x28
    239c:	e30a2aab 	movw	r2, #43691	; 0xaaab
    23a0:	e3422aaa 	movt	r2, #10922	; 0x2aaa
    23a4:	e0c21392 	smull	r1, r2, r2, r3
    23a8:	e1a02142 	asr	r2, r2, #2
    23ac:	e1a03fc3 	asr	r3, r3, #31
    23b0:	e0632002 	rsb	r2, r3, r2
    23b4:	e3043808 	movw	r3, #18440	; 0x4808
    23b8:	e3403001 	movt	r3, #1
    23bc:	e5832000 	str	r2, [r3]
        g = 0xFF;
    23c0:	e304380c 	movw	r3, #18444	; 0x480c
    23c4:	e3403001 	movt	r3, #1
    23c8:	e3a020ff 	mov	r2, #255	; 0xff
    23cc:	e5832000 	str	r2, [r3]
        b = 0x0;
    23d0:	e3043810 	movw	r3, #18448	; 0x4810
    23d4:	e3403001 	movt	r3, #1
    23d8:	e3a02000 	mov	r2, #0
    23dc:	e5832000 	str	r2, [r3]
    23e0:	ea000032 	b	24b0 <color_from_gradient_hsv+0x1e8>
    } else if (cid < COLOR_RANGE * 7 / 10) {
    23e4:	e51b3008 	ldr	r3, [r11, #-8]
    23e8:	e35300a7 	cmp	r3, #167	; 0xa7
    23ec:	ca000019 	bgt	2458 <color_from_gradient_hsv+0x190>
        r = 0x0;
    23f0:	e3043808 	movw	r3, #18440	; 0x4808
    23f4:	e3403001 	movt	r3, #1
    23f8:	e3a02000 	mov	r2, #0
    23fc:	e5832000 	str	r2, [r3]
        g = 0xFF;
    2400:	e304380c 	movw	r3, #18444	; 0x480c
    2404:	e3403001 	movt	r3, #1
    2408:	e3a020ff 	mov	r2, #255	; 0xff
    240c:	e5832000 	str	r2, [r3]
        b = (cid - COLOR_RANGE * 5 / 10) * 85 / 24;;
    2410:	e51b2008 	ldr	r2, [r11, #-8]
    2414:	e1a03002 	mov	r3, r2
    2418:	e1a03103 	lsl	r3, r3, #2
    241c:	e0833002 	add	r3, r3, r2
    2420:	e1a02203 	lsl	r2, r3, #4
    2424:	e0833002 	add	r3, r3, r2
    2428:	e2433d9f 	sub	r3, r3, #10176	; 0x27c0
    242c:	e2433018 	sub	r3, r3, #24
    2430:	e30a2aab 	movw	r2, #43691	; 0xaaab
    2434:	e3422aaa 	movt	r2, #10922	; 0x2aaa
    2438:	e0c21392 	smull	r1, r2, r2, r3
    243c:	e1a02142 	asr	r2, r2, #2
    2440:	e1a03fc3 	asr	r3, r3, #31
    2444:	e0632002 	rsb	r2, r3, r2
    2448:	e3043810 	movw	r3, #18448	; 0x4810
    244c:	e3403001 	movt	r3, #1
    2450:	e5832000 	str	r2, [r3]
    2454:	ea000015 	b	24b0 <color_from_gradient_hsv+0x1e8>
    } else {
        r = 0x0;
    2458:	e3043808 	movw	r3, #18440	; 0x4808
    245c:	e3403001 	movt	r3, #1
    2460:	e3a02000 	mov	r2, #0
    2464:	e5832000 	str	r2, [r3]
        g = (COLOR_RANGE - cid) * 85 / 24;
    2468:	e51b3008 	ldr	r3, [r11, #-8]
    246c:	e3e02054 	mvn	r2, #84	; 0x54
    2470:	e0030392 	mul	r3, r2, r3
    2474:	e2833c4f 	add	r3, r3, #20224	; 0x4f00
    2478:	e28330b0 	add	r3, r3, #176	; 0xb0
    247c:	e30a2aab 	movw	r2, #43691	; 0xaaab
    2480:	e3422aaa 	movt	r2, #10922	; 0x2aaa
    2484:	e0c21392 	smull	r1, r2, r2, r3
    2488:	e1a02142 	asr	r2, r2, #2
    248c:	e1a03fc3 	asr	r3, r3, #31
    2490:	e0632002 	rsb	r2, r3, r2
    2494:	e304380c 	movw	r3, #18444	; 0x480c
    2498:	e3403001 	movt	r3, #1
    249c:	e5832000 	str	r2, [r3]
        b = 0xFF;
    24a0:	e3043810 	movw	r3, #18448	; 0x4810
    24a4:	e3403001 	movt	r3, #1
    24a8:	e3a020ff 	mov	r2, #255	; 0xff
    24ac:	e5832000 	str	r2, [r3]
    }
    return color_from_RGB888(r, g, b);
    24b0:	e3043808 	movw	r3, #18440	; 0x4808
    24b4:	e3403001 	movt	r3, #1
    24b8:	e5931000 	ldr	r1, [r3]
    24bc:	e304380c 	movw	r3, #18444	; 0x480c
    24c0:	e3403001 	movt	r3, #1
    24c4:	e5932000 	ldr	r2, [r3]
    24c8:	e3043810 	movw	r3, #18448	; 0x4810
    24cc:	e3403001 	movt	r3, #1
    24d0:	e5933000 	ldr	r3, [r3]
    24d4:	e1a00001 	mov	r0, r1
    24d8:	e1a01002 	mov	r1, r2
    24dc:	e1a02003 	mov	r2, r3
    24e0:	ebfffe9c 	bl	1f58 <color_from_RGB888>
    24e4:	e1a03000 	mov	r3, r0
}
    24e8:	e1a00003 	mov	r0, r3
    24ec:	e24bd004 	sub	sp, r11, #4
    24f0:	e8bd8800 	pop	{r11, pc}

000024f4 <wait_for_vsync>:

void wait_for_vsync() {
    24f4:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    24f8:	e28db000 	add	r11, sp, #0
    *pixel_ctrl_ptr = 0x1;
    24fc:	e30a3748 	movw	r3, #42824	; 0xa748
    2500:	e3403000 	movt	r3, #0
    2504:	e5933000 	ldr	r3, [r3]
    2508:	e3a02001 	mov	r2, #1
    250c:	e5832000 	str	r2, [r3]
    while((*(pixel_ctrl_ptr + 3)) & 0x1); // wait for the previous swap
    2510:	e1a00000 	nop			; (mov r0, r0)
    2514:	e30a3748 	movw	r3, #42824	; 0xa748
    2518:	e3403000 	movt	r3, #0
    251c:	e5933000 	ldr	r3, [r3]
    2520:	e283300c 	add	r3, r3, #12
    2524:	e5933000 	ldr	r3, [r3]
    2528:	e2033001 	and	r3, r3, #1
    252c:	e3530000 	cmp	r3, #0
    2530:	1afffff7 	bne	2514 <wait_for_vsync+0x20>
}
    2534:	e28bd000 	add	sp, r11, #0
    2538:	e8bd0800 	ldmfd	sp!, {r11}
    253c:	e12fff1e 	bx	lr

00002540 <swap>:

void swap(int *a, int *b)
{
    2540:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    2544:	e28db000 	add	r11, sp, #0
    2548:	e24dd014 	sub	sp, sp, #20
    254c:	e50b0010 	str	r0, [r11, #-16]
    2550:	e50b1014 	str	r1, [r11, #-20]	; 0xffffffec
    int t = *a;
    2554:	e51b3010 	ldr	r3, [r11, #-16]
    2558:	e5933000 	ldr	r3, [r3]
    255c:	e50b3008 	str	r3, [r11, #-8]
    *a = *b;
    2560:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
    2564:	e5932000 	ldr	r2, [r3]
    2568:	e51b3010 	ldr	r3, [r11, #-16]
    256c:	e5832000 	str	r2, [r3]
    *b = t;
    2570:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
    2574:	e51b2008 	ldr	r2, [r11, #-8]
    2578:	e5832000 	str	r2, [r3]
}
    257c:	e28bd000 	add	sp, r11, #0
    2580:	e8bd0800 	ldmfd	sp!, {r11}
    2584:	e12fff1e 	bx	lr

00002588 <draw_lineStruct>:

void draw_lineStruct(Line line) {
    2588:	e24dd010 	sub	sp, sp, #16
    258c:	e92d4800 	push	{r11, lr}
    2590:	e28db004 	add	r11, sp, #4
    2594:	e24dd008 	sub	sp, sp, #8
    2598:	e28bc004 	add	r12, r11, #4
    259c:	e88c000f 	stm	r12, {r0, r1, r2, r3}
    draw_line(line.iX, line.iY, line.oX, line.oY, line.color);
    25a0:	e59b3004 	ldr	r3, [r11, #4]
    25a4:	e1a00003 	mov	r0, r3
    25a8:	e59b3008 	ldr	r3, [r11, #8]
    25ac:	e1a01003 	mov	r1, r3
    25b0:	e59b300c 	ldr	r3, [r11, #12]
    25b4:	e1a02003 	mov	r2, r3
    25b8:	e59b3010 	ldr	r3, [r11, #16]
    25bc:	e59bc014 	ldr	r12, [r11, #20]
    25c0:	e58dc000 	str	r12, [sp]
    25c4:	eb000003 	bl	25d8 <draw_line>
}
    25c8:	e24bd004 	sub	sp, r11, #4
    25cc:	e8bd4800 	pop	{r11, lr}
    25d0:	e28dd010 	add	sp, sp, #16
    25d4:	e12fff1e 	bx	lr

000025d8 <draw_line>:

void draw_line(int p1_x, int p1_y, int p2_x, int p2_y, int color)
{
    25d8:	e92d4800 	push	{r11, lr}
    25dc:	e28db004 	add	r11, sp, #4
    25e0:	e24dd030 	sub	sp, sp, #48	; 0x30
    25e4:	e50b0028 	str	r0, [r11, #-40]	; 0xffffffd8
    25e8:	e50b102c 	str	r1, [r11, #-44]	; 0xffffffd4
    25ec:	e50b2030 	str	r2, [r11, #-48]	; 0xffffffd0
    25f0:	e50b3034 	str	r3, [r11, #-52]	; 0xffffffcc
    // check if it is a point or a line
    if (p2_y == p1_y && p1_x == p1_y) {
    25f4:	e51b2034 	ldr	r2, [r11, #-52]	; 0xffffffcc
    25f8:	e51b302c 	ldr	r3, [r11, #-44]	; 0xffffffd4
    25fc:	e1520003 	cmp	r2, r3
    2600:	1a00000b 	bne	2634 <draw_line+0x5c>
    2604:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
    2608:	e51b302c 	ldr	r3, [r11, #-44]	; 0xffffffd4
    260c:	e1520003 	cmp	r2, r3
    2610:	1a000007 	bne	2634 <draw_line+0x5c>
        plot_pixel(p1_x, p2_y, color);
    2614:	e51b1028 	ldr	r1, [r11, #-40]	; 0xffffffd8
    2618:	e51b2034 	ldr	r2, [r11, #-52]	; 0xffffffcc
    261c:	e59b3004 	ldr	r3, [r11, #4]
    2620:	e6ff3073 	uxth	r3, r3
    2624:	e1a00001 	mov	r0, r1
    2628:	e1a01002 	mov	r1, r2
    262c:	e1a02003 	mov	r2, r3
    2630:	eb0000a7 	bl	28d4 <plot_pixel>
    }

    bool is_steep = abs(p1_y - p2_y) > abs(p1_x - p2_x);
    2634:	e51b202c 	ldr	r2, [r11, #-44]	; 0xffffffd4
    2638:	e51b3034 	ldr	r3, [r11, #-52]	; 0xffffffcc
    263c:	e0633002 	rsb	r3, r3, r2
    2640:	e0232fc3 	eor	r2, r3, r3, asr #31
    2644:	e0422fc3 	sub	r2, r2, r3, asr #31
    2648:	e51b1028 	ldr	r1, [r11, #-40]	; 0xffffffd8
    264c:	e51b3030 	ldr	r3, [r11, #-48]	; 0xffffffd0
    2650:	e0633001 	rsb	r3, r3, r1
    2654:	e3530000 	cmp	r3, #0
    2658:	b2633000 	rsblt	r3, r3, #0
    265c:	e1520003 	cmp	r2, r3
    2660:	d3a03000 	movle	r3, #0
    2664:	c3a03001 	movgt	r3, #1
    2668:	e54b3011 	strb	r3, [r11, #-17]	; 0xffffffef
    if (is_steep)
    266c:	e55b3011 	ldrb	r3, [r11, #-17]	; 0xffffffef
    2670:	e3530000 	cmp	r3, #0
    2674:	0a000009 	beq	26a0 <draw_line+0xc8>
    {
        swap(&p1_x, &p1_y);
    2678:	e24b2028 	sub	r2, r11, #40	; 0x28
    267c:	e24b302c 	sub	r3, r11, #44	; 0x2c
    2680:	e1a00002 	mov	r0, r2
    2684:	e1a01003 	mov	r1, r3
    2688:	ebffffac 	bl	2540 <swap>
        swap(&p2_x, &p2_y);
    268c:	e24b2030 	sub	r2, r11, #48	; 0x30
    2690:	e24b3034 	sub	r3, r11, #52	; 0x34
    2694:	e1a00002 	mov	r0, r2
    2698:	e1a01003 	mov	r1, r3
    269c:	ebffffa7 	bl	2540 <swap>
    }
    if (p1_x > p2_x)
    26a0:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
    26a4:	e51b3030 	ldr	r3, [r11, #-48]	; 0xffffffd0
    26a8:	e1520003 	cmp	r2, r3
    26ac:	da000009 	ble	26d8 <draw_line+0x100>
    {
        swap(&p1_x, &p2_x);
    26b0:	e24b2028 	sub	r2, r11, #40	; 0x28
    26b4:	e24b3030 	sub	r3, r11, #48	; 0x30
    26b8:	e1a00002 	mov	r0, r2
    26bc:	e1a01003 	mov	r1, r3
    26c0:	ebffff9e 	bl	2540 <swap>
        swap(&p1_y, &p2_y);
    26c4:	e24b202c 	sub	r2, r11, #44	; 0x2c
    26c8:	e24b3034 	sub	r3, r11, #52	; 0x34
    26cc:	e1a00002 	mov	r0, r2
    26d0:	e1a01003 	mov	r1, r3
    26d4:	ebffff99 	bl	2540 <swap>
    }

    int deltaX = p2_x - p1_x,
    26d8:	e51b2030 	ldr	r2, [r11, #-48]	; 0xffffffd0
    26dc:	e51b3028 	ldr	r3, [r11, #-40]	; 0xffffffd8
    26e0:	e0633002 	rsb	r3, r3, r2
    26e4:	e50b3018 	str	r3, [r11, #-24]	; 0xffffffe8
        deltaY = abs(p2_y - p1_y),
    26e8:	e51b2034 	ldr	r2, [r11, #-52]	; 0xffffffcc
    26ec:	e51b302c 	ldr	r3, [r11, #-44]	; 0xffffffd4
    26f0:	e0633002 	rsb	r3, r3, r2
    26f4:	e3530000 	cmp	r3, #0
    26f8:	b2633000 	rsblt	r3, r3, #0
    26fc:	e50b301c 	str	r3, [r11, #-28]	; 0xffffffe4
        error = -(deltaX / 2),
    2700:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    2704:	e1a02fa3 	lsr	r2, r3, #31
    2708:	e0823003 	add	r3, r2, r3
    270c:	e1a030c3 	asr	r3, r3, #1
    2710:	e2633000 	rsb	r3, r3, #0
    2714:	e50b3008 	str	r3, [r11, #-8]
        yStep = deltaY ? deltaY / (p2_y - p1_y) : 0;
    2718:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
    271c:	e3530000 	cmp	r3, #0
    2720:	0a000007 	beq	2744 <draw_line+0x16c>
    2724:	e51b2034 	ldr	r2, [r11, #-52]	; 0xffffffcc
    2728:	e51b302c 	ldr	r3, [r11, #-44]	; 0xffffffd4
    272c:	e0633002 	rsb	r3, r3, r2
    2730:	e51b001c 	ldr	r0, [r11, #-28]	; 0xffffffe4
    2734:	e1a01003 	mov	r1, r3
    2738:	eb000fa9 	bl	65e4 <__aeabi_idiv>
    273c:	e1a03000 	mov	r3, r0
    2740:	ea000000 	b	2748 <draw_line+0x170>
    2744:	e3a03000 	mov	r3, #0
    2748:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
    
    for (int x = p1_x, y = p1_y; x <= p2_x; x++) {
    274c:	e51b3028 	ldr	r3, [r11, #-40]	; 0xffffffd8
    2750:	e50b300c 	str	r3, [r11, #-12]
    2754:	e51b302c 	ldr	r3, [r11, #-44]	; 0xffffffd4
    2758:	e50b3010 	str	r3, [r11, #-16]
    275c:	ea000021 	b	27e8 <draw_line+0x210>
        if (is_steep) {
    2760:	e55b3011 	ldrb	r3, [r11, #-17]	; 0xffffffef
    2764:	e3530000 	cmp	r3, #0
    2768:	0a000006 	beq	2788 <draw_line+0x1b0>
            plot_pixel(y, x, color);
    276c:	e59b3004 	ldr	r3, [r11, #4]
    2770:	e6ff3073 	uxth	r3, r3
    2774:	e51b0010 	ldr	r0, [r11, #-16]
    2778:	e51b100c 	ldr	r1, [r11, #-12]
    277c:	e1a02003 	mov	r2, r3
    2780:	eb000053 	bl	28d4 <plot_pixel>
    2784:	ea000005 	b	27a0 <draw_line+0x1c8>
        } else {
            plot_pixel(x, y, color);
    2788:	e59b3004 	ldr	r3, [r11, #4]
    278c:	e6ff3073 	uxth	r3, r3
    2790:	e51b000c 	ldr	r0, [r11, #-12]
    2794:	e51b1010 	ldr	r1, [r11, #-16]
    2798:	e1a02003 	mov	r2, r3
    279c:	eb00004c 	bl	28d4 <plot_pixel>
        }

        error += deltaY;
    27a0:	e51b2008 	ldr	r2, [r11, #-8]
    27a4:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
    27a8:	e0823003 	add	r3, r2, r3
    27ac:	e50b3008 	str	r3, [r11, #-8]
        if (error >= 0) {
    27b0:	e51b3008 	ldr	r3, [r11, #-8]
    27b4:	e3530000 	cmp	r3, #0
    27b8:	ba000007 	blt	27dc <draw_line+0x204>
            y += yStep;
    27bc:	e51b2010 	ldr	r2, [r11, #-16]
    27c0:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
    27c4:	e0823003 	add	r3, r2, r3
    27c8:	e50b3010 	str	r3, [r11, #-16]
            error -= deltaX;
    27cc:	e51b2008 	ldr	r2, [r11, #-8]
    27d0:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    27d4:	e0633002 	rsb	r3, r3, r2
    27d8:	e50b3008 	str	r3, [r11, #-8]
    int deltaX = p2_x - p1_x,
        deltaY = abs(p2_y - p1_y),
        error = -(deltaX / 2),
        yStep = deltaY ? deltaY / (p2_y - p1_y) : 0;
    
    for (int x = p1_x, y = p1_y; x <= p2_x; x++) {
    27dc:	e51b300c 	ldr	r3, [r11, #-12]
    27e0:	e2833001 	add	r3, r3, #1
    27e4:	e50b300c 	str	r3, [r11, #-12]
    27e8:	e51b3030 	ldr	r3, [r11, #-48]	; 0xffffffd0
    27ec:	e51b200c 	ldr	r2, [r11, #-12]
    27f0:	e1520003 	cmp	r2, r3
    27f4:	daffffd9 	ble	2760 <draw_line+0x188>
        if (error >= 0) {
            y += yStep;
            error -= deltaX;
        }
    }
}
    27f8:	e24bd004 	sub	sp, r11, #4
    27fc:	e8bd8800 	pop	{r11, pc}

00002800 <draw_box>:
void draw_box(int px, int py, int w, int h, int color) {
    2800:	e92d4800 	push	{r11, lr}
    2804:	e28db004 	add	r11, sp, #4
    2808:	e24dd020 	sub	sp, sp, #32
    280c:	e50b0010 	str	r0, [r11, #-16]
    2810:	e50b1014 	str	r1, [r11, #-20]	; 0xffffffec
    2814:	e50b2018 	str	r2, [r11, #-24]	; 0xffffffe8
    2818:	e50b301c 	str	r3, [r11, #-28]	; 0xffffffe4
    for (int x = px; x < px + w; x++) {
    281c:	e51b3010 	ldr	r3, [r11, #-16]
    2820:	e50b3008 	str	r3, [r11, #-8]
    2824:	ea00000c 	b	285c <draw_box+0x5c>
        draw_line(x, py, x, py + h - 1, color);
    2828:	e51b2014 	ldr	r2, [r11, #-20]	; 0xffffffec
    282c:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
    2830:	e0823003 	add	r3, r2, r3
    2834:	e2433001 	sub	r3, r3, #1
    2838:	e59b2004 	ldr	r2, [r11, #4]
    283c:	e58d2000 	str	r2, [sp]
    2840:	e51b0008 	ldr	r0, [r11, #-8]
    2844:	e51b1014 	ldr	r1, [r11, #-20]	; 0xffffffec
    2848:	e51b2008 	ldr	r2, [r11, #-8]
    284c:	ebffff61 	bl	25d8 <draw_line>
            error -= deltaX;
        }
    }
}
void draw_box(int px, int py, int w, int h, int color) {
    for (int x = px; x < px + w; x++) {
    2850:	e51b3008 	ldr	r3, [r11, #-8]
    2854:	e2833001 	add	r3, r3, #1
    2858:	e50b3008 	str	r3, [r11, #-8]
    285c:	e51b2010 	ldr	r2, [r11, #-16]
    2860:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    2864:	e0822003 	add	r2, r2, r3
    2868:	e51b3008 	ldr	r3, [r11, #-8]
    286c:	e1520003 	cmp	r2, r3
    2870:	caffffec 	bgt	2828 <draw_box+0x28>
        draw_line(x, py, x, py + h - 1, color);
    }
}
    2874:	e24bd004 	sub	sp, r11, #4
    2878:	e8bd8800 	pop	{r11, pc}

0000287c <clear_screen>:

void clear_screen() {
    287c:	e92d4800 	push	{r11, lr}
    2880:	e28db004 	add	r11, sp, #4
    2884:	e24dd010 	sub	sp, sp, #16
    for (int x = 0; x <= 319; x++) {
    2888:	e3a03000 	mov	r3, #0
    288c:	e50b3008 	str	r3, [r11, #-8]
    2890:	ea000009 	b	28bc <clear_screen+0x40>
        draw_line(x, 0, x, 239, 0);
    2894:	e3a03000 	mov	r3, #0
    2898:	e58d3000 	str	r3, [sp]
    289c:	e51b0008 	ldr	r0, [r11, #-8]
    28a0:	e3a01000 	mov	r1, #0
    28a4:	e51b2008 	ldr	r2, [r11, #-8]
    28a8:	e3a030ef 	mov	r3, #239	; 0xef
    28ac:	ebffff49 	bl	25d8 <draw_line>
        draw_line(x, py, x, py + h - 1, color);
    }
}

void clear_screen() {
    for (int x = 0; x <= 319; x++) {
    28b0:	e51b3008 	ldr	r3, [r11, #-8]
    28b4:	e2833001 	add	r3, r3, #1
    28b8:	e50b3008 	str	r3, [r11, #-8]
    28bc:	e51b2008 	ldr	r2, [r11, #-8]
    28c0:	e300313f 	movw	r3, #319	; 0x13f
    28c4:	e1520003 	cmp	r2, r3
    28c8:	dafffff1 	ble	2894 <clear_screen+0x18>
        draw_line(x, 0, x, 239, 0);
    }
}
    28cc:	e24bd004 	sub	sp, r11, #4
    28d0:	e8bd8800 	pop	{r11, pc}

000028d4 <plot_pixel>:

void plot_pixel(int x, int y, unsigned short int line_color)
{
    28d4:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    28d8:	e28db000 	add	r11, sp, #0
    28dc:	e24dd014 	sub	sp, sp, #20
    28e0:	e50b0008 	str	r0, [r11, #-8]
    28e4:	e50b100c 	str	r1, [r11, #-12]
    28e8:	e1a03002 	mov	r3, r2
    28ec:	e14b30be 	strh	r3, [r11, #-14]
    if (x < 0 || x >= SCREEN_W || y < 0 || y >= SCREEN_H) return; 
    28f0:	e51b3008 	ldr	r3, [r11, #-8]
    28f4:	e3530000 	cmp	r3, #0
    28f8:	ba000016 	blt	2958 <plot_pixel+0x84>
    28fc:	e51b2008 	ldr	r2, [r11, #-8]
    2900:	e300313f 	movw	r3, #319	; 0x13f
    2904:	e1520003 	cmp	r2, r3
    2908:	ca000012 	bgt	2958 <plot_pixel+0x84>
    290c:	e51b300c 	ldr	r3, [r11, #-12]
    2910:	e3530000 	cmp	r3, #0
    2914:	ba00000f 	blt	2958 <plot_pixel+0x84>
    2918:	e51b300c 	ldr	r3, [r11, #-12]
    291c:	e35300ef 	cmp	r3, #239	; 0xef
    2920:	ca00000c 	bgt	2958 <plot_pixel+0x84>
    if (line_color > 0xFFFF) line_color = 0xFFFF;
    *(unsigned short int *)(pixel_buffer_start + (y << 10) + (x << 1)) = line_color;
    2924:	e51b300c 	ldr	r3, [r11, #-12]
    2928:	e1a03503 	lsl	r3, r3, #10
    292c:	e1a02003 	mov	r2, r3
    2930:	e30a3ba4 	movw	r3, #43940	; 0xaba4
    2934:	e3403000 	movt	r3, #0
    2938:	e5933000 	ldr	r3, [r3]
    293c:	e0822003 	add	r2, r2, r3
    2940:	e51b3008 	ldr	r3, [r11, #-8]
    2944:	e1a03083 	lsl	r3, r3, #1
    2948:	e0823003 	add	r3, r2, r3
    294c:	e15b20be 	ldrh	r2, [r11, #-14]
    2950:	e1c320b0 	strh	r2, [r3]
    2954:	ea000000 	b	295c <plot_pixel+0x88>
    }
}

void plot_pixel(int x, int y, unsigned short int line_color)
{
    if (x < 0 || x >= SCREEN_W || y < 0 || y >= SCREEN_H) return; 
    2958:	e1a00000 	nop			; (mov r0, r0)
    if (line_color > 0xFFFF) line_color = 0xFFFF;
    *(unsigned short int *)(pixel_buffer_start + (y << 10) + (x << 1)) = line_color;
}
    295c:	e28bd000 	add	sp, r11, #0
    2960:	e8bd0800 	ldmfd	sp!, {r11}
    2964:	e12fff1e 	bx	lr

00002968 <VIS_FastSin_r>:
	[330] = 56755, 57319, 57864, 58393, 58903, 59395, 59870, 60326, 60763, 61183, 
	[340] = 61583, 61965, 62328, 62672, 62997, 63302, 63589, 63856, 64103, 64331, 
	[350] = 64540, 64729, 64898, 65047, 65176, 65286, 65376, 65446, 65496, 65526
};

double VIS_FastSin_r(double rad) {
    2968:	e92d4800 	push	{r11, lr}
    296c:	e28db004 	add	r11, sp, #4
    2970:	e24dd008 	sub	sp, sp, #8
    2974:	e14b00fc 	strd	r0, [r11, #-12]
    return VIS_FastSin_d(rad * VIS_R2D);
    2978:	ed1b6b03 	vldr	d6, [r11, #-12]
    297c:	ed9f7b09 	vldr	d7, [pc, #36]	; 29a8 <VIS_FastSin_r+0x40>
    2980:	ee267b07 	vmul.f64	d7, d6, d7
    2984:	ec510b17 	vmov	r0, r1, d7
    2988:	eb000008 	bl	29b0 <VIS_FastSin_d>
    298c:	e1a02000 	mov	r2, r0
    2990:	e1a03001 	mov	r3, r1
}
    2994:	e1a00002 	mov	r0, r2
    2998:	e1a01003 	mov	r1, r3
    299c:	e24bd004 	sub	sp, r11, #4
    29a0:	e8bd8800 	pop	{r11, pc}
    29a4:	e320f000 	nop	{0}
    29a8:	1a63c1f8 	.word	0x1a63c1f8
    29ac:	404ca5dc 	.word	0x404ca5dc

000029b0 <VIS_FastSin_d>:

double VIS_FastSin_d(double deg) {
    29b0:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    29b4:	e28db000 	add	r11, sp, #0
    29b8:	e24dd014 	sub	sp, sp, #20
    29bc:	e14b01f4 	strd	r0, [r11, #-20]	; 0xffffffec
    int degree = ((int) deg) % 360;
    29c0:	ed1b7b05 	vldr	d7, [r11, #-20]	; 0xffffffec
    29c4:	eefd6bc7 	vcvt.s32.f64	s13, d7
    29c8:	ee162a90 	vmov	r2, s13
    29cc:	e30630b7 	movw	r3, #24759	; 0x60b7
    29d0:	e34b360b 	movt	r3, #46603	; 0xb60b
    29d4:	e0c31293 	smull	r1, r3, r3, r2
    29d8:	e0833002 	add	r3, r3, r2
    29dc:	e1a01443 	asr	r1, r3, #8
    29e0:	e1a03fc2 	asr	r3, r2, #31
    29e4:	e0633001 	rsb	r3, r3, r1
    29e8:	e3a01f5a 	mov	r1, #360	; 0x168
    29ec:	e0030391 	mul	r3, r1, r3
    29f0:	e0633002 	rsb	r3, r3, r2
    29f4:	e50b3008 	str	r3, [r11, #-8]
    return SINs[degree];
    29f8:	e3083a68 	movw	r3, #35432	; 0x8a68
    29fc:	e3403000 	movt	r3, #0
    2a00:	e51b2008 	ldr	r2, [r11, #-8]
    2a04:	e1a02182 	lsl	r2, r2, #3
    2a08:	e0833002 	add	r3, r3, r2
    2a0c:	e1c320d0 	ldrd	r2, [r3]
    // return sin(deg * VIS_D2R);
}
    2a10:	e1a00002 	mov	r0, r2
    2a14:	e1a01003 	mov	r1, r3
    2a18:	e28bd000 	add	sp, r11, #0
    2a1c:	e8bd0800 	ldmfd	sp!, {r11}
    2a20:	e12fff1e 	bx	lr

00002a24 <VIS_FastCos_r>:

double VIS_FastCos_r(double rad) {
    2a24:	e92d4800 	push	{r11, lr}
    2a28:	e28db004 	add	r11, sp, #4
    2a2c:	e24dd008 	sub	sp, sp, #8
    2a30:	e14b00fc 	strd	r0, [r11, #-12]
    return VIS_FastCos_d(rad * VIS_R2D);
    2a34:	ed1b6b03 	vldr	d6, [r11, #-12]
    2a38:	ed9f7b08 	vldr	d7, [pc, #32]	; 2a60 <VIS_FastCos_r+0x3c>
    2a3c:	ee267b07 	vmul.f64	d7, d6, d7
    2a40:	ec510b17 	vmov	r0, r1, d7
    2a44:	eb000007 	bl	2a68 <VIS_FastCos_d>
    2a48:	e1a02000 	mov	r2, r0
    2a4c:	e1a03001 	mov	r3, r1
}
    2a50:	e1a00002 	mov	r0, r2
    2a54:	e1a01003 	mov	r1, r3
    2a58:	e24bd004 	sub	sp, r11, #4
    2a5c:	e8bd8800 	pop	{r11, pc}
    2a60:	1a63c1f8 	.word	0x1a63c1f8
    2a64:	404ca5dc 	.word	0x404ca5dc

00002a68 <VIS_FastCos_d>:

double VIS_FastCos_d(double deg) {
    2a68:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    2a6c:	e28db000 	add	r11, sp, #0
    2a70:	e24dd014 	sub	sp, sp, #20
    2a74:	e14b01f4 	strd	r0, [r11, #-20]	; 0xffffffec
    int degree = ((int) deg) % 360;
    2a78:	ed1b7b05 	vldr	d7, [r11, #-20]	; 0xffffffec
    2a7c:	eefd6bc7 	vcvt.s32.f64	s13, d7
    2a80:	ee162a90 	vmov	r2, s13
    2a84:	e30630b7 	movw	r3, #24759	; 0x60b7
    2a88:	e34b360b 	movt	r3, #46603	; 0xb60b
    2a8c:	e0c31293 	smull	r1, r3, r3, r2
    2a90:	e0833002 	add	r3, r3, r2
    2a94:	e1a01443 	asr	r1, r3, #8
    2a98:	e1a03fc2 	asr	r3, r2, #31
    2a9c:	e0633001 	rsb	r3, r3, r1
    2aa0:	e3a01f5a 	mov	r1, #360	; 0x168
    2aa4:	e0030391 	mul	r3, r1, r3
    2aa8:	e0633002 	rsb	r3, r3, r2
    2aac:	e50b3008 	str	r3, [r11, #-8]
    return COSs[degree];
    2ab0:	e3073f28 	movw	r3, #32552	; 0x7f28
    2ab4:	e3403000 	movt	r3, #0
    2ab8:	e51b2008 	ldr	r2, [r11, #-8]
    2abc:	e1a02182 	lsl	r2, r2, #3
    2ac0:	e0833002 	add	r3, r3, r2
    2ac4:	e1c320d0 	ldrd	r2, [r3]
    // return cos(deg * VIS_D2R);
}
    2ac8:	e1a00002 	mov	r0, r2
    2acc:	e1a01003 	mov	r1, r3
    2ad0:	e28bd000 	add	sp, r11, #0
    2ad4:	e8bd0800 	ldmfd	sp!, {r11}
    2ad8:	e12fff1e 	bx	lr

00002adc <VIS_FastSin_d16>:

int VIS_FastSin_d16(int deg) {
    2adc:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    2ae0:	e28db000 	add	r11, sp, #0
    2ae4:	e24dd014 	sub	sp, sp, #20
    2ae8:	e50b0010 	str	r0, [r11, #-16]
    int degree = deg % 360;
    2aec:	e51b3010 	ldr	r3, [r11, #-16]
    2af0:	e30620b7 	movw	r2, #24759	; 0x60b7
    2af4:	e34b260b 	movt	r2, #46603	; 0xb60b
    2af8:	e0c21392 	smull	r1, r2, r2, r3
    2afc:	e0822003 	add	r2, r2, r3
    2b00:	e1a01442 	asr	r1, r2, #8
    2b04:	e1a02fc3 	asr	r2, r3, #31
    2b08:	e0622001 	rsb	r2, r2, r1
    2b0c:	e3a01f5a 	mov	r1, #360	; 0x168
    2b10:	e0020291 	mul	r2, r1, r2
    2b14:	e0623003 	rsb	r3, r2, r3
    2b18:	e50b3008 	str	r3, [r11, #-8]
    return SIN_large[degree];
    2b1c:	e30935a8 	movw	r3, #38312	; 0x95a8
    2b20:	e3403000 	movt	r3, #0
    2b24:	e51b2008 	ldr	r2, [r11, #-8]
    2b28:	e7933102 	ldr	r3, [r3, r2, lsl #2]
}
    2b2c:	e1a00003 	mov	r0, r3
    2b30:	e28bd000 	add	sp, r11, #0
    2b34:	e8bd0800 	ldmfd	sp!, {r11}
    2b38:	e12fff1e 	bx	lr

00002b3c <VIS_FastSin_r16>:

int VIS_FastSin_r16(int rad) {
    2b3c:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    2b40:	e28db000 	add	r11, sp, #0
    2b44:	e24dd014 	sub	sp, sp, #20
    2b48:	e50b0010 	str	r0, [r11, #-16]
	int degree = ((rad * VIS_R2D_16) >> 24) % 360;
    2b4c:	e51b3010 	ldr	r3, [r11, #-16]
    2b50:	e303294c 	movw	r2, #14668	; 0x394c
    2b54:	e0030392 	mul	r3, r2, r3
    2b58:	e1a03c43 	asr	r3, r3, #24
    2b5c:	e30620b7 	movw	r2, #24759	; 0x60b7
    2b60:	e34b260b 	movt	r2, #46603	; 0xb60b
    2b64:	e0c21392 	smull	r1, r2, r2, r3
    2b68:	e0822003 	add	r2, r2, r3
    2b6c:	e1a01442 	asr	r1, r2, #8
    2b70:	e1a02fc3 	asr	r2, r3, #31
    2b74:	e0622001 	rsb	r2, r2, r1
    2b78:	e3a01f5a 	mov	r1, #360	; 0x168
    2b7c:	e0020291 	mul	r2, r1, r2
    2b80:	e0623003 	rsb	r3, r2, r3
    2b84:	e50b3008 	str	r3, [r11, #-8]
	return SIN_large[degree];
    2b88:	e30935a8 	movw	r3, #38312	; 0x95a8
    2b8c:	e3403000 	movt	r3, #0
    2b90:	e51b2008 	ldr	r2, [r11, #-8]
    2b94:	e7933102 	ldr	r3, [r3, r2, lsl #2]
}
    2b98:	e1a00003 	mov	r0, r3
    2b9c:	e28bd000 	add	sp, r11, #0
    2ba0:	e8bd0800 	ldmfd	sp!, {r11}
    2ba4:	e12fff1e 	bx	lr

00002ba8 <VIS_FastCos_d16>:

int VIS_FastCos_d16(int deg) {
    2ba8:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    2bac:	e28db000 	add	r11, sp, #0
    2bb0:	e24dd014 	sub	sp, sp, #20
    2bb4:	e50b0010 	str	r0, [r11, #-16]
    int degree = deg % 360;
    2bb8:	e51b3010 	ldr	r3, [r11, #-16]
    2bbc:	e30620b7 	movw	r2, #24759	; 0x60b7
    2bc0:	e34b260b 	movt	r2, #46603	; 0xb60b
    2bc4:	e0c21392 	smull	r1, r2, r2, r3
    2bc8:	e0822003 	add	r2, r2, r3
    2bcc:	e1a01442 	asr	r1, r2, #8
    2bd0:	e1a02fc3 	asr	r2, r3, #31
    2bd4:	e0622001 	rsb	r2, r2, r1
    2bd8:	e3a01f5a 	mov	r1, #360	; 0x168
    2bdc:	e0020291 	mul	r2, r1, r2
    2be0:	e0623003 	rsb	r3, r2, r3
    2be4:	e50b3008 	str	r3, [r11, #-8]
    return COS_large[degree];
    2be8:	e3093b48 	movw	r3, #39752	; 0x9b48
    2bec:	e3403000 	movt	r3, #0
    2bf0:	e51b2008 	ldr	r2, [r11, #-8]
    2bf4:	e7933102 	ldr	r3, [r3, r2, lsl #2]
}
    2bf8:	e1a00003 	mov	r0, r3
    2bfc:	e28bd000 	add	sp, r11, #0
    2c00:	e8bd0800 	ldmfd	sp!, {r11}
    2c04:	e12fff1e 	bx	lr

00002c08 <VIS_FastCos_r16>:

int VIS_FastCos_r16(int rad) {
    2c08:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    2c0c:	e28db000 	add	r11, sp, #0
    2c10:	e24dd014 	sub	sp, sp, #20
    2c14:	e50b0010 	str	r0, [r11, #-16]
	int degree = ((rad * VIS_R2D_16) >> 16) % 360;
    2c18:	e51b3010 	ldr	r3, [r11, #-16]
    2c1c:	e303294c 	movw	r2, #14668	; 0x394c
    2c20:	e0030392 	mul	r3, r2, r3
    2c24:	e1a03843 	asr	r3, r3, #16
    2c28:	e30620b7 	movw	r2, #24759	; 0x60b7
    2c2c:	e34b260b 	movt	r2, #46603	; 0xb60b
    2c30:	e0c21392 	smull	r1, r2, r2, r3
    2c34:	e0822003 	add	r2, r2, r3
    2c38:	e1a01442 	asr	r1, r2, #8
    2c3c:	e1a02fc3 	asr	r2, r3, #31
    2c40:	e0622001 	rsb	r2, r2, r1
    2c44:	e3a01f5a 	mov	r1, #360	; 0x168
    2c48:	e0020291 	mul	r2, r1, r2
    2c4c:	e0623003 	rsb	r3, r2, r3
    2c50:	e50b3008 	str	r3, [r11, #-8]
	return COS_large[degree];
    2c54:	e3093b48 	movw	r3, #39752	; 0x9b48
    2c58:	e3403000 	movt	r3, #0
    2c5c:	e51b2008 	ldr	r2, [r11, #-8]
    2c60:	e7933102 	ldr	r3, [r3, r2, lsl #2]
    2c64:	e1a00003 	mov	r0, r3
    2c68:	e28bd000 	add	sp, r11, #0
    2c6c:	e8bd0800 	ldmfd	sp!, {r11}
    2c70:	e12fff1e 	bx	lr
    2c74:	e320f000 	nop	{0}

00002c78 <add>:

//note: in this file, all the double value are shifted to the left by 16 bits
 
 float PI = 3.1415926535897932384626;

 Complex add (Complex c,  Complex rhs )   {
    2c78:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    2c7c:	e28db000 	add	r11, sp, #0
    2c80:	e24dd024 	sub	sp, sp, #36	; 0x24
    2c84:	e50b0018 	str	r0, [r11, #-24]	; 0xffffffe8
    2c88:	e24b0024 	sub	r0, r11, #36	; 0x24
    2c8c:	e880000e 	stm	r0, {r1, r2, r3}
	 Complex newC = { 0,0,0 };
    2c90:	e3a03000 	mov	r3, #0
    2c94:	e50b3010 	str	r3, [r11, #-16]
    2c98:	e3a03000 	mov	r3, #0
    2c9c:	e50b300c 	str	r3, [r11, #-12]
    2ca0:	e3a03000 	mov	r3, #0
    2ca4:	e50b3008 	str	r3, [r11, #-8]
    newC.i = c.i + rhs.i;
    2ca8:	ed1b7a08 	vldr	s14, [r11, #-32]	; 0xffffffe0
    2cac:	eddb7a02 	vldr	s15, [r11, #8]
    2cb0:	ee777a27 	vadd.f32	s15, s14, s15
    2cb4:	ed4b7a03 	vstr	s15, [r11, #-12]
    newC.r = c.r + rhs.r;
    2cb8:	ed1b7a09 	vldr	s14, [r11, #-36]	; 0xffffffdc
    2cbc:	eddb7a01 	vldr	s15, [r11, #4]
    2cc0:	ee777a27 	vadd.f32	s15, s14, s15
    2cc4:	ed4b7a04 	vstr	s15, [r11, #-16]
    return newC ;
    2cc8:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    2ccc:	e24b2010 	sub	r2, r11, #16
    2cd0:	e8920007 	ldm	r2, {r0, r1, r2}
    2cd4:	e8830007 	stm	r3, {r0, r1, r2}
}
    2cd8:	e51b0018 	ldr	r0, [r11, #-24]	; 0xffffffe8
    2cdc:	e28bd000 	add	sp, r11, #0
    2ce0:	e8bd0800 	ldmfd	sp!, {r11}
    2ce4:	e12fff1e 	bx	lr

00002ce8 <sub>:
  Complex sub (Complex c,  Complex rhs )   {
    2ce8:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    2cec:	e28db000 	add	r11, sp, #0
    2cf0:	e24dd024 	sub	sp, sp, #36	; 0x24
    2cf4:	e50b0018 	str	r0, [r11, #-24]	; 0xffffffe8
    2cf8:	e24b0024 	sub	r0, r11, #36	; 0x24
    2cfc:	e880000e 	stm	r0, {r1, r2, r3}
	  Complex newC = {0,0,0};
    2d00:	e3a03000 	mov	r3, #0
    2d04:	e50b3010 	str	r3, [r11, #-16]
    2d08:	e3a03000 	mov	r3, #0
    2d0c:	e50b300c 	str	r3, [r11, #-12]
    2d10:	e3a03000 	mov	r3, #0
    2d14:	e50b3008 	str	r3, [r11, #-8]
	  newC.i = c.i - rhs.i;
    2d18:	ed1b7a08 	vldr	s14, [r11, #-32]	; 0xffffffe0
    2d1c:	eddb7a02 	vldr	s15, [r11, #8]
    2d20:	ee777a67 	vsub.f32	s15, s14, s15
    2d24:	ed4b7a03 	vstr	s15, [r11, #-12]
	  newC.r = c.r - rhs.r;
    2d28:	ed1b7a09 	vldr	s14, [r11, #-36]	; 0xffffffdc
    2d2c:	eddb7a01 	vldr	s15, [r11, #4]
    2d30:	ee777a67 	vsub.f32	s15, s14, s15
    2d34:	ed4b7a04 	vstr	s15, [r11, #-16]
    return newC ;
    2d38:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    2d3c:	e24b2010 	sub	r2, r11, #16
    2d40:	e8920007 	ldm	r2, {r0, r1, r2}
    2d44:	e8830007 	stm	r3, {r0, r1, r2}
}
    2d48:	e51b0018 	ldr	r0, [r11, #-24]	; 0xffffffe8
    2d4c:	e28bd000 	add	sp, r11, #0
    2d50:	e8bd0800 	ldmfd	sp!, {r11}
    2d54:	e12fff1e 	bx	lr

00002d58 <multiply>:
 Complex multiply (Complex c,  Complex rhs )   {
    2d58:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    2d5c:	e28db000 	add	r11, sp, #0
    2d60:	e24dd024 	sub	sp, sp, #36	; 0x24
    2d64:	e50b0018 	str	r0, [r11, #-24]	; 0xffffffe8
    2d68:	e24b0024 	sub	r0, r11, #36	; 0x24
    2d6c:	e880000e 	stm	r0, {r1, r2, r3}
    Complex newC;
    newC.i = (c.r) * (rhs.i) + (c.i) * (rhs.r);
    2d70:	ed1b7a09 	vldr	s14, [r11, #-36]	; 0xffffffdc
    2d74:	eddb7a02 	vldr	s15, [r11, #8]
    2d78:	ee277a27 	vmul.f32	s14, s14, s15
    2d7c:	ed5b6a08 	vldr	s13, [r11, #-32]	; 0xffffffe0
    2d80:	eddb7a01 	vldr	s15, [r11, #4]
    2d84:	ee667aa7 	vmul.f32	s15, s13, s15
    2d88:	ee777a27 	vadd.f32	s15, s14, s15
    2d8c:	ed4b7a03 	vstr	s15, [r11, #-12]
    newC.r = (c.r) * (rhs.r) - (c.i) * (rhs.i);
    2d90:	ed1b7a09 	vldr	s14, [r11, #-36]	; 0xffffffdc
    2d94:	eddb7a01 	vldr	s15, [r11, #4]
    2d98:	ee277a27 	vmul.f32	s14, s14, s15
    2d9c:	ed5b6a08 	vldr	s13, [r11, #-32]	; 0xffffffe0
    2da0:	eddb7a02 	vldr	s15, [r11, #8]
    2da4:	ee667aa7 	vmul.f32	s15, s13, s15
    2da8:	ee777a67 	vsub.f32	s15, s14, s15
    2dac:	ed4b7a04 	vstr	s15, [r11, #-16]
    return newC ;
    2db0:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    2db4:	e24b2010 	sub	r2, r11, #16
    2db8:	e8920007 	ldm	r2, {r0, r1, r2}
    2dbc:	e8830007 	stm	r3, {r0, r1, r2}
    //return Complex ( r * rhs.r - i * rhs.i, r * rhs.i + i * rhs.r )
}
    2dc0:	e51b0018 	ldr	r0, [r11, #-24]	; 0xffffffe8
    2dc4:	e28bd000 	add	sp, r11, #0
    2dc8:	e8bd0800 	ldmfd	sp!, {r11}
    2dcc:	e12fff1e 	bx	lr

00002dd0 <divideByInt>:

 Complex divideByInt (Complex c,  float x )   {
    2dd0:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    2dd4:	e28db000 	add	r11, sp, #0
    2dd8:	e24dd024 	sub	sp, sp, #36	; 0x24
    2ddc:	e50b0018 	str	r0, [r11, #-24]	; 0xffffffe8
    2de0:	e24b0024 	sub	r0, r11, #36	; 0x24
    2de4:	e880000e 	stm	r0, {r1, r2, r3}
    Complex newC;
    newC.i /= x;
    2de8:	ed1b7a03 	vldr	s14, [r11, #-12]
    2dec:	eddb7a01 	vldr	s15, [r11, #4]
    2df0:	eec77a27 	vdiv.f32	s15, s14, s15
    2df4:	ed4b7a03 	vstr	s15, [r11, #-12]
    newC.r /= x;
    2df8:	ed1b7a04 	vldr	s14, [r11, #-16]
    2dfc:	eddb7a01 	vldr	s15, [r11, #4]
    2e00:	eec77a27 	vdiv.f32	s15, s14, s15
    2e04:	ed4b7a04 	vstr	s15, [r11, #-16]
    return newC ;
    2e08:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    2e0c:	e24b2010 	sub	r2, r11, #16
    2e10:	e8920007 	ldm	r2, {r0, r1, r2}
    2e14:	e8830007 	stm	r3, {r0, r1, r2}
}
    2e18:	e51b0018 	ldr	r0, [r11, #-24]	; 0xffffffe8
    2e1c:	e28bd000 	add	sp, r11, #0
    2e20:	e8bd0800 	ldmfd	sp!, {r11}
    2e24:	e12fff1e 	bx	lr

00002e28 <conjg>:

 Complex conjg (Complex c)  {
    2e28:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    2e2c:	e28db000 	add	r11, sp, #0
    2e30:	e24dd024 	sub	sp, sp, #36	; 0x24
    2e34:	e50b0018 	str	r0, [r11, #-24]	; 0xffffffe8
    2e38:	e24b0024 	sub	r0, r11, #36	; 0x24
    2e3c:	e880000e 	stm	r0, {r1, r2, r3}
    Complex newC;
    newC.i = -c.i;
    2e40:	ed5b7a08 	vldr	s15, [r11, #-32]	; 0xffffffe0
    2e44:	eef17a67 	vneg.f32	s15, s15
    2e48:	ed4b7a03 	vstr	s15, [r11, #-12]
    newC.r = c.r;
    2e4c:	e51b3024 	ldr	r3, [r11, #-36]	; 0xffffffdc
    2e50:	e50b3010 	str	r3, [r11, #-16]
    return newC ;
    2e54:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    2e58:	e24b2010 	sub	r2, r11, #16
    2e5c:	e8920007 	ldm	r2, {r0, r1, r2}
    2e60:	e8830007 	stm	r3, {r0, r1, r2}
}
    2e64:	e51b0018 	ldr	r0, [r11, #-24]	; 0xffffffe8
    2e68:	e28bd000 	add	sp, r11, #0
    2e6c:	e8bd0800 	ldmfd	sp!, {r11}
    2e70:	e12fff1e 	bx	lr

00002e74 <magnitude>:
 
  int magnitude (Complex c)  {
    2e74:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
    2e78:	e28db000 	add	r11, sp, #0
    2e7c:	e24dd014 	sub	sp, sp, #20
    2e80:	e24b3010 	sub	r3, r11, #16
    2e84:	e8830007 	stm	r3, {r0, r1, r2}
    return ((int) c.r)*((int) c.r)+((int) c.i)*((int) c.i) ;
    2e88:	ed5b7a04 	vldr	s15, [r11, #-16]
    2e8c:	eefd7ae7 	vcvt.s32.f32	s15, s15
    2e90:	ee173a90 	vmov	r3, s15
    2e94:	ed5b7a04 	vldr	s15, [r11, #-16]
    2e98:	eefd7ae7 	vcvt.s32.f32	s15, s15
    2e9c:	ee172a90 	vmov	r2, s15
    2ea0:	e0020392 	mul	r2, r2, r3
    2ea4:	ed5b7a03 	vldr	s15, [r11, #-12]
    2ea8:	eefd7ae7 	vcvt.s32.f32	s15, s15
    2eac:	ee173a90 	vmov	r3, s15
    2eb0:	ed5b7a03 	vldr	s15, [r11, #-12]
    2eb4:	eefd7ae7 	vcvt.s32.f32	s15, s15
    2eb8:	ee171a90 	vmov	r1, s15
    2ebc:	e0030391 	mul	r3, r1, r3
    2ec0:	e0823003 	add	r3, r2, r3
}
    2ec4:	e1a00003 	mov	r0, r3
    2ec8:	e28bd000 	add	sp, r11, #0
    2ecc:	e8bd0800 	ldmfd	sp!, {r11}
    2ed0:	e12fff1e 	bx	lr

00002ed4 <init>:

void init(int index, int size, Complex *omegaInverse) {
    2ed4:	e92d4800 	push	{r11, lr}
    2ed8:	e28db004 	add	r11, sp, #4
    2edc:	e24dd030 	sub	sp, sp, #48	; 0x30
    2ee0:	e50b0028 	str	r0, [r11, #-40]	; 0xffffffd8
    2ee4:	e50b102c 	str	r1, [r11, #-44]	; 0xffffffd4
    2ee8:	e50b2030 	str	r2, [r11, #-48]	; 0xffffffd0
    if(index == 0){
    2eec:	e51b3028 	ldr	r3, [r11, #-40]	; 0xffffffd8
    2ef0:	e3530000 	cmp	r3, #0
    2ef4:	1a00001a 	bne	2f64 <init+0x90>
        for (int i = 0; i < size; ++i) {
    2ef8:	e3a03000 	mov	r3, #0
    2efc:	e50b3008 	str	r3, [r11, #-8]
    2f00:	ea000012 	b	2f50 <init+0x7c>
            Complex c ={1,0,0};
    2f04:	e3a035fe 	mov	r3, #1065353216	; 0x3f800000
    2f08:	e50b3018 	str	r3, [r11, #-24]	; 0xffffffe8
    2f0c:	e3a03000 	mov	r3, #0
    2f10:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
    2f14:	e3a03000 	mov	r3, #0
    2f18:	e50b3010 	str	r3, [r11, #-16]
            omegaInverse[i] = c;
    2f1c:	e51b2008 	ldr	r2, [r11, #-8]
    2f20:	e1a03002 	mov	r3, r2
    2f24:	e1a03083 	lsl	r3, r3, #1
    2f28:	e0833002 	add	r3, r3, r2
    2f2c:	e1a03103 	lsl	r3, r3, #2
    2f30:	e51b2030 	ldr	r2, [r11, #-48]	; 0xffffffd0
    2f34:	e0823003 	add	r3, r2, r3
    2f38:	e24b2018 	sub	r2, r11, #24
    2f3c:	e8920007 	ldm	r2, {r0, r1, r2}
    2f40:	e8830007 	stm	r3, {r0, r1, r2}
    return ((int) c.r)*((int) c.r)+((int) c.i)*((int) c.i) ;
}

void init(int index, int size, Complex *omegaInverse) {
    if(index == 0){
        for (int i = 0; i < size; ++i) {
    2f44:	e51b3008 	ldr	r3, [r11, #-8]
    2f48:	e2833001 	add	r3, r3, #1
    2f4c:	e50b3008 	str	r3, [r11, #-8]
    2f50:	e51b2008 	ldr	r2, [r11, #-8]
    2f54:	e51b302c 	ldr	r3, [r11, #-44]	; 0xffffffd4
    2f58:	e1520003 	cmp	r2, r3
    2f5c:	baffffe8 	blt	2f04 <init+0x30>
    2f60:	ea000037 	b	3044 <init+0x170>
            Complex c ={1,0,0};
            omegaInverse[i] = c;
        }
    }
    else{
        for (int i = 0; i < size; ++i) {
    2f64:	e3a03000 	mov	r3, #0
    2f68:	e50b300c 	str	r3, [r11, #-12]
    2f6c:	ea000030 	b	3034 <init+0x160>
            Complex c ={cosf(2 * PI / index * i), -sinf(2 * PI / index * i),0};
    2f70:	e30a374c 	movw	r3, #42828	; 0xa74c
    2f74:	e3403000 	movt	r3, #0
    2f78:	edd37a00 	vldr	s15, [r3]
    2f7c:	ee377aa7 	vadd.f32	s14, s15, s15
    2f80:	e51b3028 	ldr	r3, [r11, #-40]	; 0xffffffd8
    2f84:	ee063a90 	vmov	s13, r3
    2f88:	eef87ae6 	vcvt.f32.s32	s15, s13
    2f8c:	eec77a27 	vdiv.f32	s15, s14, s15
    2f90:	e51b300c 	ldr	r3, [r11, #-12]
    2f94:	ee063a90 	vmov	s13, r3
    2f98:	eeb87ae6 	vcvt.f32.s32	s14, s13
    2f9c:	ee677a87 	vmul.f32	s15, s15, s14
    2fa0:	ee170a90 	vmov	r0, s15
    2fa4:	eb00017b 	bl	3598 <cosf>
    2fa8:	e1a03000 	mov	r3, r0
    2fac:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc
    2fb0:	e30a374c 	movw	r3, #42828	; 0xa74c
    2fb4:	e3403000 	movt	r3, #0
    2fb8:	edd37a00 	vldr	s15, [r3]
    2fbc:	ee377aa7 	vadd.f32	s14, s15, s15
    2fc0:	e51b3028 	ldr	r3, [r11, #-40]	; 0xffffffd8
    2fc4:	ee063a90 	vmov	s13, r3
    2fc8:	eef87ae6 	vcvt.f32.s32	s15, s13
    2fcc:	eec77a27 	vdiv.f32	s15, s14, s15
    2fd0:	e51b300c 	ldr	r3, [r11, #-12]
    2fd4:	ee063a90 	vmov	s13, r3
    2fd8:	eeb87ae6 	vcvt.f32.s32	s14, s13
    2fdc:	ee677a87 	vmul.f32	s15, s15, s14
    2fe0:	ee170a90 	vmov	r0, s15
    2fe4:	eb000194 	bl	363c <sinf>
    2fe8:	e1a03000 	mov	r3, r0
    2fec:	ee073a10 	vmov	s14, r3
    2ff0:	eef17a47 	vneg.f32	s15, s14
    2ff4:	ed4b7a08 	vstr	s15, [r11, #-32]	; 0xffffffe0
    2ff8:	e3a03000 	mov	r3, #0
    2ffc:	e50b301c 	str	r3, [r11, #-28]	; 0xffffffe4
            omegaInverse[i] = c;
    3000:	e51b200c 	ldr	r2, [r11, #-12]
    3004:	e1a03002 	mov	r3, r2
    3008:	e1a03083 	lsl	r3, r3, #1
    300c:	e0833002 	add	r3, r3, r2
    3010:	e1a03103 	lsl	r3, r3, #2
    3014:	e51b2030 	ldr	r2, [r11, #-48]	; 0xffffffd0
    3018:	e0823003 	add	r3, r2, r3
    301c:	e24b2024 	sub	r2, r11, #36	; 0x24
    3020:	e8920007 	ldm	r2, {r0, r1, r2}
    3024:	e8830007 	stm	r3, {r0, r1, r2}
            Complex c ={1,0,0};
            omegaInverse[i] = c;
        }
    }
    else{
        for (int i = 0; i < size; ++i) {
    3028:	e51b300c 	ldr	r3, [r11, #-12]
    302c:	e2833001 	add	r3, r3, #1
    3030:	e50b300c 	str	r3, [r11, #-12]
    3034:	e51b200c 	ldr	r2, [r11, #-12]
    3038:	e51b302c 	ldr	r3, [r11, #-44]	; 0xffffffd4
    303c:	e1520003 	cmp	r2, r3
    3040:	baffffca 	blt	2f70 <init+0x9c>
            Complex c ={cosf(2 * PI / index * i), -sinf(2 * PI / index * i),0};
            omegaInverse[i] = c;
        }
    }
}
    3044:	e24bd004 	sub	sp, r11, #4
    3048:	e8bd8800 	pop	{r11, pc}

0000304c <sdft>:
//         result[om] = c;
//     }
// }


void sdft(Complex *x, int n, Complex * omegaInverse, Complex *result) {
    304c:	e92d4800 	push	{r11, lr}
    3050:	e28db004 	add	r11, sp, #4
    3054:	e24dd040 	sub	sp, sp, #64	; 0x40
    3058:	e50b0028 	str	r0, [r11, #-40]	; 0xffffffd8
    305c:	e50b102c 	str	r1, [r11, #-44]	; 0xffffffd4
    3060:	e50b2030 	str	r2, [r11, #-48]	; 0xffffffd0
    3064:	e50b3034 	str	r3, [r11, #-52]	; 0xffffffcc
		for (int om = 0; om < n; om++) {
    3068:	e3a03000 	mov	r3, #0
    306c:	e50b3008 	str	r3, [r11, #-8]
    3070:	ea000043 	b	3184 <sdft+0x138>
			Complex c = {0,0,0};
    3074:	e3a03000 	mov	r3, #0
    3078:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc
    307c:	e3a03000 	mov	r3, #0
    3080:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
    3084:	e3a03000 	mov	r3, #0
    3088:	e50b301c 	str	r3, [r11, #-28]	; 0xffffffe4
			init(om,n,omegaInverse);
    308c:	e51b0008 	ldr	r0, [r11, #-8]
    3090:	e51b102c 	ldr	r1, [r11, #-44]	; 0xffffffd4
    3094:	e51b2030 	ldr	r2, [r11, #-48]	; 0xffffffd0
    3098:	ebffff8d 	bl	2ed4 <init>
			for (int k = 0; k < n; k++) {
    309c:	e3a03000 	mov	r3, #0
    30a0:	e50b300c 	str	r3, [r11, #-12]
    30a4:	ea000020 	b	312c <sdft+0xe0>
				c = add(c, multiply(x[k],omegaInverse[k]));
    30a8:	e51b200c 	ldr	r2, [r11, #-12]
    30ac:	e1a03002 	mov	r3, r2
    30b0:	e1a03083 	lsl	r3, r3, #1
    30b4:	e0833002 	add	r3, r3, r2
    30b8:	e1a03103 	lsl	r3, r3, #2
    30bc:	e51b2028 	ldr	r2, [r11, #-40]	; 0xffffffd8
    30c0:	e082c003 	add	r12, r2, r3
    30c4:	e51b200c 	ldr	r2, [r11, #-12]
    30c8:	e1a03002 	mov	r3, r2
    30cc:	e1a03083 	lsl	r3, r3, #1
    30d0:	e0833002 	add	r3, r3, r2
    30d4:	e1a03103 	lsl	r3, r3, #2
    30d8:	e51b2030 	ldr	r2, [r11, #-48]	; 0xffffffd0
    30dc:	e0822003 	add	r2, r2, r3
    30e0:	e24be018 	sub	lr, r11, #24
    30e4:	e1a0300d 	mov	r3, sp
    30e8:	e8920007 	ldm	r2, {r0, r1, r2}
    30ec:	e8830007 	stm	r3, {r0, r1, r2}
    30f0:	e1a0000e 	mov	r0, lr
    30f4:	e89c000e 	ldm	r12, {r1, r2, r3}
    30f8:	ebffff16 	bl	2d58 <multiply>
    30fc:	e24bc024 	sub	r12, r11, #36	; 0x24
    3100:	e1a0300d 	mov	r3, sp
    3104:	e24b2018 	sub	r2, r11, #24
    3108:	e8920007 	ldm	r2, {r0, r1, r2}
    310c:	e8830007 	stm	r3, {r0, r1, r2}
    3110:	e1a0000c 	mov	r0, r12
    3114:	e24b3024 	sub	r3, r11, #36	; 0x24
    3118:	e893000e 	ldm	r3, {r1, r2, r3}
    311c:	ebfffed5 	bl	2c78 <add>

void sdft(Complex *x, int n, Complex * omegaInverse, Complex *result) {
		for (int om = 0; om < n; om++) {
			Complex c = {0,0,0};
			init(om,n,omegaInverse);
			for (int k = 0; k < n; k++) {
    3120:	e51b300c 	ldr	r3, [r11, #-12]
    3124:	e2833001 	add	r3, r3, #1
    3128:	e50b300c 	str	r3, [r11, #-12]
    312c:	e51b200c 	ldr	r2, [r11, #-12]
    3130:	e51b302c 	ldr	r3, [r11, #-44]	; 0xffffffd4
    3134:	e1520003 	cmp	r2, r3
    3138:	baffffda 	blt	30a8 <sdft+0x5c>
				c = add(c, multiply(x[k],omegaInverse[k]));
			}
			result[om] = c;
    313c:	e51b2008 	ldr	r2, [r11, #-8]
    3140:	e1a03002 	mov	r3, r2
    3144:	e1a03083 	lsl	r3, r3, #1
    3148:	e0833002 	add	r3, r3, r2
    314c:	e1a03103 	lsl	r3, r3, #2
    3150:	e51b2034 	ldr	r2, [r11, #-52]	; 0xffffffcc
    3154:	e0823003 	add	r3, r2, r3
    3158:	e24b2024 	sub	r2, r11, #36	; 0x24
    315c:	e8920007 	ldm	r2, {r0, r1, r2}
    3160:	e8830007 	stm	r3, {r0, r1, r2}
            c.mag = magnitude(c);
    3164:	e24b3024 	sub	r3, r11, #36	; 0x24
    3168:	e8930007 	ldm	r3, {r0, r1, r2}
    316c:	ebffff40 	bl	2e74 <magnitude>
    3170:	e1a03000 	mov	r3, r0
    3174:	e50b301c 	str	r3, [r11, #-28]	; 0xffffffe4
//     }
// }


void sdft(Complex *x, int n, Complex * omegaInverse, Complex *result) {
		for (int om = 0; om < n; om++) {
    3178:	e51b3008 	ldr	r3, [r11, #-8]
    317c:	e2833001 	add	r3, r3, #1
    3180:	e50b3008 	str	r3, [r11, #-8]
    3184:	e51b2008 	ldr	r2, [r11, #-8]
    3188:	e51b302c 	ldr	r3, [r11, #-44]	; 0xffffffd4
    318c:	e1520003 	cmp	r2, r3
    3190:	baffffb7 	blt	3074 <sdft+0x28>
				c = add(c, multiply(x[k],omegaInverse[k]));
			}
			result[om] = c;
            c.mag = magnitude(c);
		}
	}
    3194:	e24bd004 	sub	sp, r11, #4
    3198:	e8bd8800 	pop	{r11, pc}

0000319c <initExps>:

void initExps(int size, Complex omegaInverse[][size]) {
    319c:	e92d4810 	push	{r4, r11, lr}
    31a0:	e28db008 	add	r11, sp, #8
    31a4:	e24dd034 	sub	sp, sp, #52	; 0x34
    31a8:	e50b0038 	str	r0, [r11, #-56]	; 0xffffffc8
    31ac:	e50b103c 	str	r1, [r11, #-60]	; 0xffffffc4
    31b0:	e51b4038 	ldr	r4, [r11, #-56]	; 0xffffffc8
    31b4:	e2443001 	sub	r3, r4, #1
    31b8:	e50b301c 	str	r3, [r11, #-28]	; 0xffffffe4
    31bc:	e1a01004 	mov	r1, r4
    31c0:	e1a02001 	mov	r2, r1
    31c4:	e3a03000 	mov	r3, #0
    31c8:	e3a01060 	mov	r1, #96	; 0x60
    31cc:	e0000391 	mul	r0, r1, r3
    31d0:	e3a01000 	mov	r1, #0
    31d4:	e0010291 	mul	r1, r1, r2
    31d8:	e0801001 	add	r1, r0, r1
    31dc:	e3a00060 	mov	r0, #96	; 0x60
    31e0:	e0832092 	umull	r2, r3, r2, r0
    31e4:	e0811003 	add	r1, r1, r3
    31e8:	e1a03001 	mov	r3, r1
    31ec:	e1a02004 	mov	r2, r4
    31f0:	e1a03002 	mov	r3, r2
    31f4:	e1a03083 	lsl	r3, r3, #1
    31f8:	e0833002 	add	r3, r3, r2
    31fc:	e1a03103 	lsl	r3, r3, #2
    //initialize first line
    for(int k =0; k < size; k++){
    3200:	e3a03000 	mov	r3, #0
    3204:	e50b3010 	str	r3, [r11, #-16]
    3208:	ea000012 	b	3258 <initExps+0xbc>
            Complex c ={1,0,0};
    320c:	e3a035fe 	mov	r3, #1065353216	; 0x3f800000
    3210:	e50b3028 	str	r3, [r11, #-40]	; 0xffffffd8
    3214:	e3a03000 	mov	r3, #0
    3218:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc
    321c:	e3a03000 	mov	r3, #0
    3220:	e50b3020 	str	r3, [r11, #-32]	; 0xffffffe0
            omegaInverse[0][k] = c;
    3224:	e51b103c 	ldr	r1, [r11, #-60]	; 0xffffffc4
    3228:	e51b2010 	ldr	r2, [r11, #-16]
    322c:	e1a03002 	mov	r3, r2
    3230:	e1a03083 	lsl	r3, r3, #1
    3234:	e0833002 	add	r3, r3, r2
    3238:	e1a03103 	lsl	r3, r3, #2
    323c:	e0813003 	add	r3, r1, r3
    3240:	e24b2028 	sub	r2, r11, #40	; 0x28
    3244:	e8920007 	ldm	r2, {r0, r1, r2}
    3248:	e8830007 	stm	r3, {r0, r1, r2}
		}
	}

void initExps(int size, Complex omegaInverse[][size]) {
    //initialize first line
    for(int k =0; k < size; k++){
    324c:	e51b3010 	ldr	r3, [r11, #-16]
    3250:	e2833001 	add	r3, r3, #1
    3254:	e50b3010 	str	r3, [r11, #-16]
    3258:	e51b2010 	ldr	r2, [r11, #-16]
    325c:	e51b3038 	ldr	r3, [r11, #-56]	; 0xffffffc8
    3260:	e1520003 	cmp	r2, r3
    3264:	baffffe8 	blt	320c <initExps+0x70>
            Complex c ={1,0,0};
            omegaInverse[0][k] = c;
    }
    for (int index = 1; index < size; ++index) {
    3268:	e3a03001 	mov	r3, #1
    326c:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
    3270:	ea000045 	b	338c <initExps+0x1f0>
        for(int k =0; k < size; k++){
    3274:	e3a03000 	mov	r3, #0
    3278:	e50b3018 	str	r3, [r11, #-24]	; 0xffffffe8
    327c:	ea00003b 	b	3370 <initExps+0x1d4>
            Complex c ={cos(2 * PI / index * k), -sin(2 * PI / index * k),0};
    3280:	e30a374c 	movw	r3, #42828	; 0xa74c
    3284:	e3403000 	movt	r3, #0
    3288:	edd37a00 	vldr	s15, [r3]
    328c:	ee377aa7 	vadd.f32	s14, s15, s15
    3290:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
    3294:	ee063a90 	vmov	s13, r3
    3298:	eef87ae6 	vcvt.f32.s32	s15, s13
    329c:	eec77a27 	vdiv.f32	s15, s14, s15
    32a0:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    32a4:	ee063a90 	vmov	s13, r3
    32a8:	eeb87ae6 	vcvt.f32.s32	s14, s13
    32ac:	ee677a87 	vmul.f32	s15, s15, s14
    32b0:	eeb77ae7 	vcvt.f64.f32	d7, s15
    32b4:	ec510b17 	vmov	r0, r1, d7
    32b8:	eb000039 	bl	33a4 <cos>
    32bc:	ec410b17 	vmov	d7, r0, r1
    32c0:	eef77bc7 	vcvt.f32.f64	s15, d7
    32c4:	ed4b7a0d 	vstr	s15, [r11, #-52]	; 0xffffffcc
    32c8:	e30a374c 	movw	r3, #42828	; 0xa74c
    32cc:	e3403000 	movt	r3, #0
    32d0:	edd37a00 	vldr	s15, [r3]
    32d4:	ee377aa7 	vadd.f32	s14, s15, s15
    32d8:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
    32dc:	ee063a90 	vmov	s13, r3
    32e0:	eef87ae6 	vcvt.f32.s32	s15, s13
    32e4:	eec77a27 	vdiv.f32	s15, s14, s15
    32e8:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    32ec:	ee063a90 	vmov	s13, r3
    32f0:	eeb87ae6 	vcvt.f32.s32	s14, s13
    32f4:	ee677a87 	vmul.f32	s15, s15, s14
    32f8:	eeb77ae7 	vcvt.f64.f32	d7, s15
    32fc:	ec510b17 	vmov	r0, r1, d7
    3300:	eb000064 	bl	3498 <sin>
    3304:	ec410b17 	vmov	d7, r0, r1
    3308:	eef77bc7 	vcvt.f32.f64	s15, d7
    330c:	eef17a67 	vneg.f32	s15, s15
    3310:	ed4b7a0c 	vstr	s15, [r11, #-48]	; 0xffffffd0
    3314:	e3a03000 	mov	r3, #0
    3318:	e50b302c 	str	r3, [r11, #-44]	; 0xffffffd4
            omegaInverse[index][k] = c;
    331c:	e1a03004 	mov	r3, r4
    3320:	e51b2014 	ldr	r2, [r11, #-20]	; 0xffffffec
    3324:	e0020392 	mul	r2, r2, r3
    3328:	e1a03002 	mov	r3, r2
    332c:	e1a03083 	lsl	r3, r3, #1
    3330:	e0833002 	add	r3, r3, r2
    3334:	e1a03103 	lsl	r3, r3, #2
    3338:	e51b203c 	ldr	r2, [r11, #-60]	; 0xffffffc4
    333c:	e0821003 	add	r1, r2, r3
    3340:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
    3344:	e1a03002 	mov	r3, r2
    3348:	e1a03083 	lsl	r3, r3, #1
    334c:	e0833002 	add	r3, r3, r2
    3350:	e1a03103 	lsl	r3, r3, #2
    3354:	e0813003 	add	r3, r1, r3
    3358:	e24b2034 	sub	r2, r11, #52	; 0x34
    335c:	e8920007 	ldm	r2, {r0, r1, r2}
    3360:	e8830007 	stm	r3, {r0, r1, r2}
    for(int k =0; k < size; k++){
            Complex c ={1,0,0};
            omegaInverse[0][k] = c;
    }
    for (int index = 1; index < size; ++index) {
        for(int k =0; k < size; k++){
    3364:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
    3368:	e2833001 	add	r3, r3, #1
    336c:	e50b3018 	str	r3, [r11, #-24]	; 0xffffffe8
    3370:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
    3374:	e51b3038 	ldr	r3, [r11, #-56]	; 0xffffffc8
    3378:	e1520003 	cmp	r2, r3
    337c:	baffffbf 	blt	3280 <initExps+0xe4>
    //initialize first line
    for(int k =0; k < size; k++){
            Complex c ={1,0,0};
            omegaInverse[0][k] = c;
    }
    for (int index = 1; index < size; ++index) {
    3380:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
    3384:	e2833001 	add	r3, r3, #1
    3388:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
    338c:	e51b2014 	ldr	r2, [r11, #-20]	; 0xffffffec
    3390:	e51b3038 	ldr	r3, [r11, #-56]	; 0xffffffc8
    3394:	e1520003 	cmp	r2, r3
    3398:	baffffb5 	blt	3274 <initExps+0xd8>
        for(int k =0; k < size; k++){
            Complex c ={cos(2 * PI / index * k), -sin(2 * PI / index * k),0};
            omegaInverse[index][k] = c;
        }
    }
    339c:	e24bd008 	sub	sp, r11, #8
    33a0:	e8bd8810 	pop	{r4, r11, pc}

000033a4 <cos>:
    33a4:	e92d4030 	push	{r4, r5, lr}
    33a8:	e59fe0e0 	ldr	lr, [pc, #224]	; 3490 <cos+0xec>
    33ac:	e3c1c102 	bic	r12, r1, #-2147483648	; 0x80000000
    33b0:	e15c000e 	cmp	r12, lr
    33b4:	e24dd01c 	sub	sp, sp, #28
    33b8:	e1a02000 	mov	r2, r0
    33bc:	e1a03001 	mov	r3, r1
    33c0:	e1a04000 	mov	r4, r0
    33c4:	e1a05001 	mov	r5, r1
    33c8:	da000015 	ble	3424 <cos+0x80>
    33cc:	e59fe0c0 	ldr	lr, [pc, #192]	; 3494 <cos+0xf0>
    33d0:	e15c000e 	cmp	r12, lr
    33d4:	da000003 	ble	33e8 <cos+0x44>
    33d8:	eb000cd6 	bl	6738 <__aeabi_dsub>
    33dc:	e28dd01c 	add	sp, sp, #28
    33e0:	e8bd4030 	pop	{r4, r5, lr}
    33e4:	e12fff1e 	bx	lr
    33e8:	e28d2008 	add	r2, sp, #8
    33ec:	eb0000c1 	bl	36f8 <__ieee754_rem_pio2>
    33f0:	e2000003 	and	r0, r0, #3
    33f4:	e3500001 	cmp	r0, #1
    33f8:	0a000014 	beq	3450 <cos+0xac>
    33fc:	e3500002 	cmp	r0, #2
    3400:	0a00000b 	beq	3434 <cos+0x90>
    3404:	e3500000 	cmp	r0, #0
    3408:	1a000018 	bne	3470 <cos+0xcc>
    340c:	e28d1008 	add	r1, sp, #8
    3410:	e8910003 	ldm	r1, {r0, r1}
    3414:	e28d3010 	add	r3, sp, #16
    3418:	e893000c 	ldm	r3, {r2, r3}
    341c:	eb000363 	bl	41b0 <__kernel_cos>
    3420:	eaffffed 	b	33dc <cos+0x38>
    3424:	e3a02000 	mov	r2, #0
    3428:	e3a03000 	mov	r3, #0
    342c:	eb00035f 	bl	41b0 <__kernel_cos>
    3430:	eaffffe9 	b	33dc <cos+0x38>
    3434:	e28d1008 	add	r1, sp, #8
    3438:	e8910003 	ldm	r1, {r0, r1}
    343c:	e28d3010 	add	r3, sp, #16
    3440:	e893000c 	ldm	r3, {r2, r3}
    3444:	eb000359 	bl	41b0 <__kernel_cos>
    3448:	e2811102 	add	r1, r1, #-2147483648	; 0x80000000
    344c:	eaffffe2 	b	33dc <cos+0x38>
    3450:	e58d0000 	str	r0, [sp]
    3454:	e28d3010 	add	r3, sp, #16
    3458:	e893000c 	ldm	r3, {r2, r3}
    345c:	e28d1008 	add	r1, sp, #8
    3460:	e8910003 	ldm	r1, {r0, r1}
    3464:	eb000709 	bl	5090 <__kernel_sin>
    3468:	e2811102 	add	r1, r1, #-2147483648	; 0x80000000
    346c:	eaffffda 	b	33dc <cos+0x38>
    3470:	e3a03001 	mov	r3, #1
    3474:	e58d3000 	str	r3, [sp]
    3478:	e28d1008 	add	r1, sp, #8
    347c:	e8910003 	ldm	r1, {r0, r1}
    3480:	e28d3010 	add	r3, sp, #16
    3484:	e893000c 	ldm	r3, {r2, r3}
    3488:	eb000700 	bl	5090 <__kernel_sin>
    348c:	eaffffd2 	b	33dc <cos+0x38>
    3490:	3fe921fb 	.word	0x3fe921fb
    3494:	7fefffff 	.word	0x7fefffff

00003498 <sin>:
    3498:	e92d4030 	push	{r4, r5, lr}
    349c:	e59fe0ec 	ldr	lr, [pc, #236]	; 3590 <sin+0xf8>
    34a0:	e3c1c102 	bic	r12, r1, #-2147483648	; 0x80000000
    34a4:	e15c000e 	cmp	r12, lr
    34a8:	e24dd01c 	sub	sp, sp, #28
    34ac:	e1a02000 	mov	r2, r0
    34b0:	e1a03001 	mov	r3, r1
    34b4:	e1a04000 	mov	r4, r0
    34b8:	e1a05001 	mov	r5, r1
    34bc:	da000017 	ble	3520 <sin+0x88>
    34c0:	e59fe0cc 	ldr	lr, [pc, #204]	; 3594 <sin+0xfc>
    34c4:	e15c000e 	cmp	r12, lr
    34c8:	da000003 	ble	34dc <sin+0x44>
    34cc:	eb000c99 	bl	6738 <__aeabi_dsub>
    34d0:	e28dd01c 	add	sp, sp, #28
    34d4:	e8bd4030 	pop	{r4, r5, lr}
    34d8:	e12fff1e 	bx	lr
    34dc:	e28d2008 	add	r2, sp, #8
    34e0:	eb000084 	bl	36f8 <__ieee754_rem_pio2>
    34e4:	e2000003 	and	r0, r0, #3
    34e8:	e3500001 	cmp	r0, #1
    34ec:	0a00001a 	beq	355c <sin+0xc4>
    34f0:	e3500002 	cmp	r0, #2
    34f4:	0a00000f 	beq	3538 <sin+0xa0>
    34f8:	e3500000 	cmp	r0, #0
    34fc:	1a00001c 	bne	3574 <sin+0xdc>
    3500:	e3a03001 	mov	r3, #1
    3504:	e58d3000 	str	r3, [sp]
    3508:	e28d1008 	add	r1, sp, #8
    350c:	e8910003 	ldm	r1, {r0, r1}
    3510:	e28d3010 	add	r3, sp, #16
    3514:	e893000c 	ldm	r3, {r2, r3}
    3518:	eb0006dc 	bl	5090 <__kernel_sin>
    351c:	eaffffeb 	b	34d0 <sin+0x38>
    3520:	e3a03000 	mov	r3, #0
    3524:	e58d3000 	str	r3, [sp]
    3528:	e3a02000 	mov	r2, #0
    352c:	e3a03000 	mov	r3, #0
    3530:	eb0006d6 	bl	5090 <__kernel_sin>
    3534:	eaffffe5 	b	34d0 <sin+0x38>
    3538:	e3a03001 	mov	r3, #1
    353c:	e58d3000 	str	r3, [sp]
    3540:	e28d1008 	add	r1, sp, #8
    3544:	e8910003 	ldm	r1, {r0, r1}
    3548:	e28d3010 	add	r3, sp, #16
    354c:	e893000c 	ldm	r3, {r2, r3}
    3550:	eb0006ce 	bl	5090 <__kernel_sin>
    3554:	e2811102 	add	r1, r1, #-2147483648	; 0x80000000
    3558:	eaffffdc 	b	34d0 <sin+0x38>
    355c:	e28d1008 	add	r1, sp, #8
    3560:	e8910003 	ldm	r1, {r0, r1}
    3564:	e28d3010 	add	r3, sp, #16
    3568:	e893000c 	ldm	r3, {r2, r3}
    356c:	eb00030f 	bl	41b0 <__kernel_cos>
    3570:	eaffffd6 	b	34d0 <sin+0x38>
    3574:	e28d1008 	add	r1, sp, #8
    3578:	e8910003 	ldm	r1, {r0, r1}
    357c:	e28d3010 	add	r3, sp, #16
    3580:	e893000c 	ldm	r3, {r2, r3}
    3584:	eb000309 	bl	41b0 <__kernel_cos>
    3588:	e2811102 	add	r1, r1, #-2147483648	; 0x80000000
    358c:	eaffffcf 	b	34d0 <sin+0x38>
    3590:	3fe921fb 	.word	0x3fe921fb
    3594:	7fefffff 	.word	0x7fefffff

00003598 <cosf>:
    3598:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    359c:	e59f2090 	ldr	r2, [pc, #144]	; 3634 <cosf+0x9c>
    35a0:	e3c03102 	bic	r3, r0, #-2147483648	; 0x80000000
    35a4:	e1530002 	cmp	r3, r2
    35a8:	e24dd00c 	sub	sp, sp, #12
    35ac:	e1a01000 	mov	r1, r0
    35b0:	da000013 	ble	3604 <cosf+0x6c>
    35b4:	e59f207c 	ldr	r2, [pc, #124]	; 3638 <cosf+0xa0>
    35b8:	e1530002 	cmp	r3, r2
    35bc:	da000003 	ble	35d0 <cosf+0x38>
    35c0:	eb000ef2 	bl	7190 <__aeabi_fsub>
    35c4:	e28dd00c 	add	sp, sp, #12
    35c8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    35cc:	e12fff1e 	bx	lr
    35d0:	e1a0100d 	mov	r1, sp
    35d4:	eb0001dd 	bl	3d50 <__ieee754_rem_pio2f>
    35d8:	e2002003 	and	r2, r0, #3
    35dc:	e3520001 	cmp	r2, #1
    35e0:	e59d0000 	ldr	r0, [sp]
    35e4:	e59d1004 	ldr	r1, [sp, #4]
    35e8:	0a00000b 	beq	361c <cosf+0x84>
    35ec:	e3520002 	cmp	r2, #2
    35f0:	0a000006 	beq	3610 <cosf+0x78>
    35f4:	e3520000 	cmp	r2, #0
    35f8:	1a00000a 	bne	3628 <cosf+0x90>
    35fc:	eb00072b 	bl	52b0 <__kernel_cosf>
    3600:	eaffffef 	b	35c4 <cosf+0x2c>
    3604:	e3a01000 	mov	r1, #0
    3608:	eb000728 	bl	52b0 <__kernel_cosf>
    360c:	eaffffec 	b	35c4 <cosf+0x2c>
    3610:	eb000726 	bl	52b0 <__kernel_cosf>
    3614:	e2800102 	add	r0, r0, #-2147483648	; 0x80000000
    3618:	eaffffe9 	b	35c4 <cosf+0x2c>
    361c:	eb000a00 	bl	5e24 <__kernel_sinf>
    3620:	e2800102 	add	r0, r0, #-2147483648	; 0x80000000
    3624:	eaffffe6 	b	35c4 <cosf+0x2c>
    3628:	e3a02001 	mov	r2, #1
    362c:	eb0009fc 	bl	5e24 <__kernel_sinf>
    3630:	eaffffe3 	b	35c4 <cosf+0x2c>
    3634:	3f490fd8 	.word	0x3f490fd8
    3638:	7f7fffff 	.word	0x7f7fffff

0000363c <sinf>:
    363c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    3640:	e59f20a8 	ldr	r2, [pc, #168]	; 36f0 <sinf+0xb4>
    3644:	e3c03102 	bic	r3, r0, #-2147483648	; 0x80000000
    3648:	e1530002 	cmp	r3, r2
    364c:	e24dd00c 	sub	sp, sp, #12
    3650:	e1a01000 	mov	r1, r0
    3654:	da000014 	ble	36ac <sinf+0x70>
    3658:	e59f2094 	ldr	r2, [pc, #148]	; 36f4 <sinf+0xb8>
    365c:	e1530002 	cmp	r3, r2
    3660:	da000003 	ble	3674 <sinf+0x38>
    3664:	eb000ec9 	bl	7190 <__aeabi_fsub>
    3668:	e28dd00c 	add	sp, sp, #12
    366c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
    3670:	e12fff1e 	bx	lr
    3674:	e1a0100d 	mov	r1, sp
    3678:	eb0001b4 	bl	3d50 <__ieee754_rem_pio2f>
    367c:	e2000003 	and	r0, r0, #3
    3680:	e3500001 	cmp	r0, #1
    3684:	0a000012 	beq	36d4 <sinf+0x98>
    3688:	e3500002 	cmp	r0, #2
    368c:	0a00000a 	beq	36bc <sinf+0x80>
    3690:	e3500000 	cmp	r0, #0
    3694:	e59d1004 	ldr	r1, [sp, #4]
    3698:	e59d0000 	ldr	r0, [sp]
    369c:	1a000010 	bne	36e4 <sinf+0xa8>
    36a0:	e3a02001 	mov	r2, #1
    36a4:	eb0009de 	bl	5e24 <__kernel_sinf>
    36a8:	eaffffee 	b	3668 <sinf+0x2c>
    36ac:	e3a01000 	mov	r1, #0
    36b0:	e3a02000 	mov	r2, #0
    36b4:	eb0009da 	bl	5e24 <__kernel_sinf>
    36b8:	eaffffea 	b	3668 <sinf+0x2c>
    36bc:	e59d0000 	ldr	r0, [sp]
    36c0:	e59d1004 	ldr	r1, [sp, #4]
    36c4:	e3a02001 	mov	r2, #1
    36c8:	eb0009d5 	bl	5e24 <__kernel_sinf>
    36cc:	e2800102 	add	r0, r0, #-2147483648	; 0x80000000
    36d0:	eaffffe4 	b	3668 <sinf+0x2c>
    36d4:	e59d0000 	ldr	r0, [sp]
    36d8:	e59d1004 	ldr	r1, [sp, #4]
    36dc:	eb0006f3 	bl	52b0 <__kernel_cosf>
    36e0:	eaffffe0 	b	3668 <sinf+0x2c>
    36e4:	eb0006f1 	bl	52b0 <__kernel_cosf>
    36e8:	e2800102 	add	r0, r0, #-2147483648	; 0x80000000
    36ec:	eaffffdd 	b	3668 <sinf+0x2c>
    36f0:	3f490fd8 	.word	0x3f490fd8
    36f4:	7f7fffff 	.word	0x7f7fffff

000036f8 <__ieee754_rem_pio2>:
    36f8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    36fc:	e59fc3bc 	ldr	r12, [pc, #956]	; 3ac0 <__ieee754_rem_pio2+0x3c8>
    3700:	e3c17102 	bic	r7, r1, #-2147483648	; 0x80000000
    3704:	e157000c 	cmp	r7, r12
    3708:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    370c:	e1a04000 	mov	r4, r0
    3710:	e1a05001 	mov	r5, r1
    3714:	e1a0a000 	mov	r10, r0
    3718:	e1a0b001 	mov	r11, r1
    371c:	e1a08002 	mov	r8, r2
    3720:	da00005b 	ble	3894 <__ieee754_rem_pio2+0x19c>
    3724:	e59f2398 	ldr	r2, [pc, #920]	; 3ac4 <__ieee754_rem_pio2+0x3cc>
    3728:	e1570002 	cmp	r7, r2
    372c:	e1a09001 	mov	r9, r1
    3730:	ca000019 	bgt	379c <__ieee754_rem_pio2+0xa4>
    3734:	e3510000 	cmp	r1, #0
    3738:	e28f3fd6 	add	r3, pc, #856	; 0x358
    373c:	e893000c 	ldm	r3, {r2, r3}
    3740:	da000149 	ble	3c6c <__ieee754_rem_pio2+0x574>
    3744:	eb000bfb 	bl	6738 <__aeabi_dsub>
    3748:	e59f3378 	ldr	r3, [pc, #888]	; 3ac8 <__ieee754_rem_pio2+0x3d0>
    374c:	e1570003 	cmp	r7, r3
    3750:	e1a0a000 	mov	r10, r0
    3754:	e1a0b001 	mov	r11, r1
    3758:	0a00005f 	beq	38dc <__ieee754_rem_pio2+0x1e4>
    375c:	e28f3fcf 	add	r3, pc, #828	; 0x33c
    3760:	e893000c 	ldm	r3, {r2, r3}
    3764:	eb000bf3 	bl	6738 <__aeabi_dsub>
    3768:	e1a02000 	mov	r2, r0
    376c:	e1a03001 	mov	r3, r1
    3770:	e8880003 	stm	r8, {r0, r1}
    3774:	e1a0000a 	mov	r0, r10
    3778:	e1a0100b 	mov	r1, r11
    377c:	eb000bed 	bl	6738 <__aeabi_dsub>
    3780:	e28f3fc6 	add	r3, pc, #792	; 0x318
    3784:	e893000c 	ldm	r3, {r2, r3}
    3788:	eb000bea 	bl	6738 <__aeabi_dsub>
    378c:	e3a06001 	mov	r6, #1
    3790:	e5880008 	str	r0, [r8, #8]
    3794:	e588100c 	str	r1, [r8, #12]
    3798:	ea000043 	b	38ac <__ieee754_rem_pio2+0x1b4>
    379c:	e59f3328 	ldr	r3, [pc, #808]	; 3acc <__ieee754_rem_pio2+0x3d4>
    37a0:	e1570003 	cmp	r7, r3
    37a4:	da000075 	ble	3980 <__ieee754_rem_pio2+0x288>
    37a8:	e59f3320 	ldr	r3, [pc, #800]	; 3ad0 <__ieee754_rem_pio2+0x3d8>
    37ac:	e1570003 	cmp	r7, r3
    37b0:	ca000041 	bgt	38bc <__ieee754_rem_pio2+0x1c4>
    37b4:	e1a0aa47 	asr	r10, r7, #20
    37b8:	e24aae41 	sub	r10, r10, #1040	; 0x410
    37bc:	e24aa006 	sub	r10, r10, #6
    37c0:	e0475a0a 	sub	r5, r7, r10, lsl #20
    37c4:	e1a01005 	mov	r1, r5
    37c8:	e1a04000 	mov	r4, r0
    37cc:	eb000e56 	bl	712c <__aeabi_d2iz>
    37d0:	eb000ca6 	bl	6a70 <__aeabi_i2d>
    37d4:	e1a06000 	mov	r6, r0
    37d8:	e1a07001 	mov	r7, r1
    37dc:	e1a02000 	mov	r2, r0
    37e0:	e1a03001 	mov	r3, r1
    37e4:	e1a00004 	mov	r0, r4
    37e8:	e1a01005 	mov	r1, r5
    37ec:	e58d6020 	str	r6, [sp, #32]
    37f0:	e58d7024 	str	r7, [sp, #36]	; 0x24
    37f4:	eb000bcf 	bl	6738 <__aeabi_dsub>
    37f8:	e3a02000 	mov	r2, #0
    37fc:	e59f32d0 	ldr	r3, [pc, #720]	; 3ad4 <__ieee754_rem_pio2+0x3dc>
    3800:	eb000cd1 	bl	6b4c <__aeabi_dmul>
    3804:	e1a06000 	mov	r6, r0
    3808:	e1a07001 	mov	r7, r1
    380c:	eb000e46 	bl	712c <__aeabi_d2iz>
    3810:	eb000c96 	bl	6a70 <__aeabi_i2d>
    3814:	e1a02000 	mov	r2, r0
    3818:	e1a03001 	mov	r3, r1
    381c:	e1a04000 	mov	r4, r0
    3820:	e1a05001 	mov	r5, r1
    3824:	e1a00006 	mov	r0, r6
    3828:	e1a01007 	mov	r1, r7
    382c:	e58d4028 	str	r4, [sp, #40]	; 0x28
    3830:	e58d502c 	str	r5, [sp, #44]	; 0x2c
    3834:	eb000bbf 	bl	6738 <__aeabi_dsub>
    3838:	e3a02000 	mov	r2, #0
    383c:	e59f3290 	ldr	r3, [pc, #656]	; 3ad4 <__ieee754_rem_pio2+0x3dc>
    3840:	eb000cc1 	bl	6b4c <__aeabi_dmul>
    3844:	e3a02000 	mov	r2, #0
    3848:	e3a03000 	mov	r3, #0
    384c:	e58d0030 	str	r0, [sp, #48]	; 0x30
    3850:	e58d1034 	str	r1, [sp, #52]	; 0x34
    3854:	eb000e16 	bl	70b4 <__aeabi_dcmpeq>
    3858:	e3500000 	cmp	r0, #0
    385c:	03a06003 	moveq	r6, #3
    3860:	0a000032 	beq	3930 <__ieee754_rem_pio2+0x238>
    3864:	e28d7028 	add	r7, sp, #40	; 0x28
    3868:	e3a06003 	mov	r6, #3
    386c:	e1a00004 	mov	r0, r4
    3870:	e1a01005 	mov	r1, r5
    3874:	e3a02000 	mov	r2, #0
    3878:	e3a03000 	mov	r3, #0
    387c:	eb000e0c 	bl	70b4 <__aeabi_dcmpeq>
    3880:	e3500000 	cmp	r0, #0
    3884:	e2466001 	sub	r6, r6, #1
    3888:	0a000028 	beq	3930 <__ieee754_rem_pio2+0x238>
    388c:	e9370003 	ldmdb	r7!, {r0, r1}
    3890:	eafffff7 	b	3874 <__ieee754_rem_pio2+0x17c>
    3894:	e8820030 	stm	r2, {r4, r5}
    3898:	e3a03000 	mov	r3, #0
    389c:	e3a02000 	mov	r2, #0
    38a0:	e5882008 	str	r2, [r8, #8]
    38a4:	e588300c 	str	r3, [r8, #12]
    38a8:	e3a06000 	mov	r6, #0
    38ac:	e1a00006 	mov	r0, r6
    38b0:	e28dd03c 	add	sp, sp, #60	; 0x3c
    38b4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    38b8:	e12fff1e 	bx	lr
    38bc:	e1a02000 	mov	r2, r0
    38c0:	e1a03001 	mov	r3, r1
    38c4:	eb000b9b 	bl	6738 <__aeabi_dsub>
    38c8:	e3a06000 	mov	r6, #0
    38cc:	e5880008 	str	r0, [r8, #8]
    38d0:	e588100c 	str	r1, [r8, #12]
    38d4:	e8880003 	stm	r8, {r0, r1}
    38d8:	eafffff3 	b	38ac <__ieee754_rem_pio2+0x1b4>
    38dc:	e28f3f71 	add	r3, pc, #452	; 0x1c4
    38e0:	e893000c 	ldm	r3, {r2, r3}
    38e4:	eb000b93 	bl	6738 <__aeabi_dsub>
    38e8:	e28f3d07 	add	r3, pc, #448	; 0x1c0
    38ec:	e893000c 	ldm	r3, {r2, r3}
    38f0:	e1a06000 	mov	r6, r0
    38f4:	e1a07001 	mov	r7, r1
    38f8:	eb000b8e 	bl	6738 <__aeabi_dsub>
    38fc:	e1a02000 	mov	r2, r0
    3900:	e1a03001 	mov	r3, r1
    3904:	e8880003 	stm	r8, {r0, r1}
    3908:	e1a00006 	mov	r0, r6
    390c:	e1a01007 	mov	r1, r7
    3910:	eb000b88 	bl	6738 <__aeabi_dsub>
    3914:	e28f3f65 	add	r3, pc, #404	; 0x194
    3918:	e893000c 	ldm	r3, {r2, r3}
    391c:	eb000b85 	bl	6738 <__aeabi_dsub>
    3920:	e3a06001 	mov	r6, #1
    3924:	e5880008 	str	r0, [r8, #8]
    3928:	e588100c 	str	r1, [r8, #12]
    392c:	eaffffde 	b	38ac <__ieee754_rem_pio2+0x1b4>
    3930:	e3a03002 	mov	r3, #2
    3934:	e58d3000 	str	r3, [sp]
    3938:	e59f3198 	ldr	r3, [pc, #408]	; 3ad8 <__ieee754_rem_pio2+0x3e0>
    393c:	e28d0020 	add	r0, sp, #32
    3940:	e58d3004 	str	r3, [sp, #4]
    3944:	e1a01008 	mov	r1, r8
    3948:	e1a03006 	mov	r3, r6
    394c:	e1a0200a 	mov	r2, r10
    3950:	eb0002e8 	bl	44f8 <__kernel_rem_pio2>
    3954:	e3590000 	cmp	r9, #0
    3958:	e1a06000 	mov	r6, r0
    395c:	aaffffd2 	bge	38ac <__ieee754_rem_pio2+0x1b4>
    3960:	e5982004 	ldr	r2, [r8, #4]
    3964:	e598300c 	ldr	r3, [r8, #12]
    3968:	e2822102 	add	r2, r2, #-2147483648	; 0x80000000
    396c:	e2833102 	add	r3, r3, #-2147483648	; 0x80000000
    3970:	e5882004 	str	r2, [r8, #4]
    3974:	e588300c 	str	r3, [r8, #12]
    3978:	e2606000 	rsb	r6, r0, #0
    397c:	eaffffca 	b	38ac <__ieee754_rem_pio2+0x1b4>
    3980:	eb00097a 	bl	5f70 <fabs>
    3984:	e28f3f4b 	add	r3, pc, #300	; 0x12c
    3988:	e893000c 	ldm	r3, {r2, r3}
    398c:	e1a04000 	mov	r4, r0
    3990:	e1a05001 	mov	r5, r1
    3994:	eb000c6c 	bl	6b4c <__aeabi_dmul>
    3998:	e3a02000 	mov	r2, #0
    399c:	e59f3138 	ldr	r3, [pc, #312]	; 3adc <__ieee754_rem_pio2+0x3e4>
    39a0:	eb000b65 	bl	673c <__adddf3>
    39a4:	eb000de0 	bl	712c <__aeabi_d2iz>
    39a8:	e1a06000 	mov	r6, r0
    39ac:	eb000c2f 	bl	6a70 <__aeabi_i2d>
    39b0:	e28f30e0 	add	r3, pc, #224	; 0xe0
    39b4:	e893000c 	ldm	r3, {r2, r3}
    39b8:	e58d0010 	str	r0, [sp, #16]
    39bc:	e58d1014 	str	r1, [sp, #20]
    39c0:	eb000c61 	bl	6b4c <__aeabi_dmul>
    39c4:	e1a02000 	mov	r2, r0
    39c8:	e1a03001 	mov	r3, r1
    39cc:	e1a00004 	mov	r0, r4
    39d0:	e1a01005 	mov	r1, r5
    39d4:	eb000b57 	bl	6738 <__aeabi_dsub>
    39d8:	e28f30c0 	add	r3, pc, #192	; 0xc0
    39dc:	e893000c 	ldm	r3, {r2, r3}
    39e0:	e1a0a000 	mov	r10, r0
    39e4:	e1a0b001 	mov	r11, r1
    39e8:	e28d1010 	add	r1, sp, #16
    39ec:	e8910003 	ldm	r1, {r0, r1}
    39f0:	eb000c55 	bl	6b4c <__aeabi_dmul>
    39f4:	e356001f 	cmp	r6, #31
    39f8:	e58d0008 	str	r0, [sp, #8]
    39fc:	e58d100c 	str	r1, [sp, #12]
    3a00:	e1a0000a 	mov	r0, r10
    3a04:	e1a0100b 	mov	r1, r11
    3a08:	ca000035 	bgt	3ae4 <__ieee754_rem_pio2+0x3ec>
    3a0c:	e59f30cc 	ldr	r3, [pc, #204]	; 3ae0 <__ieee754_rem_pio2+0x3e8>
    3a10:	e2462001 	sub	r2, r6, #1
    3a14:	e7933102 	ldr	r3, [r3, r2, lsl #2]
    3a18:	e1530007 	cmp	r3, r7
    3a1c:	0a000030 	beq	3ae4 <__ieee754_rem_pio2+0x3ec>
    3a20:	e28d3008 	add	r3, sp, #8
    3a24:	e893000c 	ldm	r3, {r2, r3}
    3a28:	eb000b42 	bl	6738 <__aeabi_dsub>
    3a2c:	e1a02000 	mov	r2, r0
    3a30:	e1a03001 	mov	r3, r1
    3a34:	e888000c 	stm	r8, {r2, r3}
    3a38:	e1a05000 	mov	r5, r0
    3a3c:	e1a04001 	mov	r4, r1
    3a40:	e1a02005 	mov	r2, r5
    3a44:	e1a03004 	mov	r3, r4
    3a48:	e1a0000a 	mov	r0, r10
    3a4c:	e1a0100b 	mov	r1, r11
    3a50:	eb000b38 	bl	6738 <__aeabi_dsub>
    3a54:	e28d3008 	add	r3, sp, #8
    3a58:	e893000c 	ldm	r3, {r2, r3}
    3a5c:	eb000b35 	bl	6738 <__aeabi_dsub>
    3a60:	e3590000 	cmp	r9, #0
    3a64:	e1a02000 	mov	r2, r0
    3a68:	e1a03001 	mov	r3, r1
    3a6c:	e5882008 	str	r2, [r8, #8]
    3a70:	e588300c 	str	r3, [r8, #12]
    3a74:	aaffff8c 	bge	38ac <__ieee754_rem_pio2+0x1b4>
    3a78:	e2844102 	add	r4, r4, #-2147483648	; 0x80000000
    3a7c:	e2811102 	add	r1, r1, #-2147483648	; 0x80000000
    3a80:	e5885000 	str	r5, [r8]
    3a84:	e5884004 	str	r4, [r8, #4]
    3a88:	e5880008 	str	r0, [r8, #8]
    3a8c:	e588100c 	str	r1, [r8, #12]
    3a90:	e2666000 	rsb	r6, r6, #0
    3a94:	eaffff84 	b	38ac <__ieee754_rem_pio2+0x1b4>
    3a98:	54400000 	.word	0x54400000
    3a9c:	3ff921fb 	.word	0x3ff921fb
    3aa0:	1a626331 	.word	0x1a626331
    3aa4:	3dd0b461 	.word	0x3dd0b461
    3aa8:	1a600000 	.word	0x1a600000
    3aac:	3dd0b461 	.word	0x3dd0b461
    3ab0:	2e037073 	.word	0x2e037073
    3ab4:	3ba3198a 	.word	0x3ba3198a
    3ab8:	6dc9c883 	.word	0x6dc9c883
    3abc:	3fe45f30 	.word	0x3fe45f30
    3ac0:	3fe921fb 	.word	0x3fe921fb
    3ac4:	4002d97b 	.word	0x4002d97b
    3ac8:	3ff921fb 	.word	0x3ff921fb
    3acc:	413921fb 	.word	0x413921fb
    3ad0:	7fefffff 	.word	0x7fefffff
    3ad4:	41700000 	.word	0x41700000
    3ad8:	0000a168 	.word	0x0000a168
    3adc:	3fe00000 	.word	0x3fe00000
    3ae0:	0000a0e8 	.word	0x0000a0e8
    3ae4:	e28d3008 	add	r3, sp, #8
    3ae8:	e893000c 	ldm	r3, {r2, r3}
    3aec:	eb000b11 	bl	6738 <__aeabi_dsub>
    3af0:	e1a07a47 	asr	r7, r7, #20
    3af4:	e1a04001 	mov	r4, r1
    3af8:	e1a01081 	lsl	r1, r1, #1
    3afc:	e1a05000 	mov	r5, r0
    3b00:	e0471aa1 	sub	r1, r7, r1, lsr #21
    3b04:	e1a02005 	mov	r2, r5
    3b08:	e1a03004 	mov	r3, r4
    3b0c:	e3510010 	cmp	r1, #16
    3b10:	e888000c 	stm	r8, {r2, r3}
    3b14:	daffffc9 	ble	3a40 <__ieee754_rem_pio2+0x348>
    3b18:	e28f3f82 	add	r3, pc, #520	; 0x208
    3b1c:	e893000c 	ldm	r3, {r2, r3}
    3b20:	e28d1010 	add	r1, sp, #16
    3b24:	e8910003 	ldm	r1, {r0, r1}
    3b28:	eb000c07 	bl	6b4c <__aeabi_dmul>
    3b2c:	e1a04000 	mov	r4, r0
    3b30:	e1a05001 	mov	r5, r1
    3b34:	e1a02004 	mov	r2, r4
    3b38:	e1a03005 	mov	r3, r5
    3b3c:	e1a0000a 	mov	r0, r10
    3b40:	e1a0100b 	mov	r1, r11
    3b44:	eb000afb 	bl	6738 <__aeabi_dsub>
    3b48:	e58d0018 	str	r0, [sp, #24]
    3b4c:	e58d101c 	str	r1, [sp, #28]
    3b50:	e28d3018 	add	r3, sp, #24
    3b54:	e893000c 	ldm	r3, {r2, r3}
    3b58:	e1a0000a 	mov	r0, r10
    3b5c:	e1a0100b 	mov	r1, r11
    3b60:	eb000af4 	bl	6738 <__aeabi_dsub>
    3b64:	e1a02004 	mov	r2, r4
    3b68:	e1a03005 	mov	r3, r5
    3b6c:	eb000af1 	bl	6738 <__aeabi_dsub>
    3b70:	e28f3f6e 	add	r3, pc, #440	; 0x1b8
    3b74:	e893000c 	ldm	r3, {r2, r3}
    3b78:	e1a04000 	mov	r4, r0
    3b7c:	e1a05001 	mov	r5, r1
    3b80:	e28d1010 	add	r1, sp, #16
    3b84:	e8910003 	ldm	r1, {r0, r1}
    3b88:	eb000bef 	bl	6b4c <__aeabi_dmul>
    3b8c:	e1a02004 	mov	r2, r4
    3b90:	e1a03005 	mov	r3, r5
    3b94:	eb000ae7 	bl	6738 <__aeabi_dsub>
    3b98:	e58d0008 	str	r0, [sp, #8]
    3b9c:	e58d100c 	str	r1, [sp, #12]
    3ba0:	e28d3008 	add	r3, sp, #8
    3ba4:	e893000c 	ldm	r3, {r2, r3}
    3ba8:	e28d1018 	add	r1, sp, #24
    3bac:	e8910003 	ldm	r1, {r0, r1}
    3bb0:	eb000ae0 	bl	6738 <__aeabi_dsub>
    3bb4:	e1a04001 	mov	r4, r1
    3bb8:	e1a01081 	lsl	r1, r1, #1
    3bbc:	e1a05000 	mov	r5, r0
    3bc0:	e0477aa1 	sub	r7, r7, r1, lsr #21
    3bc4:	e1a02005 	mov	r2, r5
    3bc8:	e1a03004 	mov	r3, r4
    3bcc:	e3570031 	cmp	r7, #49	; 0x31
    3bd0:	e888000c 	stm	r8, {r2, r3}
    3bd4:	da00004f 	ble	3d18 <__ieee754_rem_pio2+0x620>
    3bd8:	e3a0242e 	mov	r2, #771751936	; 0x2e000000
    3bdc:	e59f3164 	ldr	r3, [pc, #356]	; 3d48 <__ieee754_rem_pio2+0x650>
    3be0:	e28d1010 	add	r1, sp, #16
    3be4:	e8910003 	ldm	r1, {r0, r1}
    3be8:	eb000bd7 	bl	6b4c <__aeabi_dmul>
    3bec:	e1a04000 	mov	r4, r0
    3bf0:	e1a05001 	mov	r5, r1
    3bf4:	e1a02004 	mov	r2, r4
    3bf8:	e1a03005 	mov	r3, r5
    3bfc:	e28d1018 	add	r1, sp, #24
    3c00:	e8910003 	ldm	r1, {r0, r1}
    3c04:	eb000acb 	bl	6738 <__aeabi_dsub>
    3c08:	e1a0a000 	mov	r10, r0
    3c0c:	e1a0b001 	mov	r11, r1
    3c10:	e1a0200a 	mov	r2, r10
    3c14:	e1a0300b 	mov	r3, r11
    3c18:	e28d1018 	add	r1, sp, #24
    3c1c:	e8910003 	ldm	r1, {r0, r1}
    3c20:	eb000ac4 	bl	6738 <__aeabi_dsub>
    3c24:	e1a02004 	mov	r2, r4
    3c28:	e1a03005 	mov	r3, r5
    3c2c:	eb000ac1 	bl	6738 <__aeabi_dsub>
    3c30:	e28f3c01 	add	r3, pc, #256	; 0x100
    3c34:	e893000c 	ldm	r3, {r2, r3}
    3c38:	e1a04000 	mov	r4, r0
    3c3c:	e1a05001 	mov	r5, r1
    3c40:	e28d1010 	add	r1, sp, #16
    3c44:	e8910003 	ldm	r1, {r0, r1}
    3c48:	eb000bbf 	bl	6b4c <__aeabi_dmul>
    3c4c:	e1a02004 	mov	r2, r4
    3c50:	e1a03005 	mov	r3, r5
    3c54:	eb000ab7 	bl	6738 <__aeabi_dsub>
    3c58:	e58d0008 	str	r0, [sp, #8]
    3c5c:	e58d100c 	str	r1, [sp, #12]
    3c60:	e1a0000a 	mov	r0, r10
    3c64:	e1a0100b 	mov	r1, r11
    3c68:	eaffff6c 	b	3a20 <__ieee754_rem_pio2+0x328>
    3c6c:	eb000ab2 	bl	673c <__adddf3>
    3c70:	e59f30d4 	ldr	r3, [pc, #212]	; 3d4c <__ieee754_rem_pio2+0x654>
    3c74:	e1570003 	cmp	r7, r3
    3c78:	e1a0a000 	mov	r10, r0
    3c7c:	e1a0b001 	mov	r11, r1
    3c80:	0a00000f 	beq	3cc4 <__ieee754_rem_pio2+0x5cc>
    3c84:	e28f30b4 	add	r3, pc, #180	; 0xb4
    3c88:	e893000c 	ldm	r3, {r2, r3}
    3c8c:	eb000aaa 	bl	673c <__adddf3>
    3c90:	e1a02000 	mov	r2, r0
    3c94:	e1a03001 	mov	r3, r1
    3c98:	e8880003 	stm	r8, {r0, r1}
    3c9c:	e1a0000a 	mov	r0, r10
    3ca0:	e1a0100b 	mov	r1, r11
    3ca4:	eb000aa3 	bl	6738 <__aeabi_dsub>
    3ca8:	e28f3090 	add	r3, pc, #144	; 0x90
    3cac:	e893000c 	ldm	r3, {r2, r3}
    3cb0:	eb000aa1 	bl	673c <__adddf3>
    3cb4:	e3e06000 	mvn	r6, #0
    3cb8:	e5880008 	str	r0, [r8, #8]
    3cbc:	e588100c 	str	r1, [r8, #12]
    3cc0:	eafffef9 	b	38ac <__ieee754_rem_pio2+0x1b4>
    3cc4:	e28f305c 	add	r3, pc, #92	; 0x5c
    3cc8:	e893000c 	ldm	r3, {r2, r3}
    3ccc:	eb000a9a 	bl	673c <__adddf3>
    3cd0:	e28f3058 	add	r3, pc, #88	; 0x58
    3cd4:	e893000c 	ldm	r3, {r2, r3}
    3cd8:	e1a06000 	mov	r6, r0
    3cdc:	e1a07001 	mov	r7, r1
    3ce0:	eb000a95 	bl	673c <__adddf3>
    3ce4:	e1a02000 	mov	r2, r0
    3ce8:	e1a03001 	mov	r3, r1
    3cec:	e8880003 	stm	r8, {r0, r1}
    3cf0:	e1a00006 	mov	r0, r6
    3cf4:	e1a01007 	mov	r1, r7
    3cf8:	eb000a8e 	bl	6738 <__aeabi_dsub>
    3cfc:	e28f302c 	add	r3, pc, #44	; 0x2c
    3d00:	e893000c 	ldm	r3, {r2, r3}
    3d04:	eb000a8c 	bl	673c <__adddf3>
    3d08:	e3e06000 	mvn	r6, #0
    3d0c:	e5880008 	str	r0, [r8, #8]
    3d10:	e588100c 	str	r1, [r8, #12]
    3d14:	eafffee4 	b	38ac <__ieee754_rem_pio2+0x1b4>
    3d18:	e28db018 	add	r11, sp, #24
    3d1c:	e89b0c00 	ldm	r11, {r10, r11}
    3d20:	eaffff46 	b	3a40 <__ieee754_rem_pio2+0x348>
    3d24:	e1a00000 	nop			; (mov r0, r0)
    3d28:	1a600000 	.word	0x1a600000
    3d2c:	3dd0b461 	.word	0x3dd0b461
    3d30:	2e037073 	.word	0x2e037073
    3d34:	3ba3198a 	.word	0x3ba3198a
    3d38:	252049c1 	.word	0x252049c1
    3d3c:	397b839a 	.word	0x397b839a
    3d40:	1a626331 	.word	0x1a626331
    3d44:	3dd0b461 	.word	0x3dd0b461
    3d48:	3ba3198a 	.word	0x3ba3198a
    3d4c:	3ff921fb 	.word	0x3ff921fb

00003d50 <__ieee754_rem_pio2f>:
    3d50:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    3d54:	e59f2418 	ldr	r2, [pc, #1048]	; 4174 <__ieee754_rem_pio2f+0x424>
    3d58:	e3c04102 	bic	r4, r0, #-2147483648	; 0x80000000
    3d5c:	e1540002 	cmp	r4, r2
    3d60:	e24dd024 	sub	sp, sp, #36	; 0x24
    3d64:	e1a06000 	mov	r6, r0
    3d68:	e1a05001 	mov	r5, r1
    3d6c:	da000043 	ble	3e80 <__ieee754_rem_pio2f+0x130>
    3d70:	e59f2400 	ldr	r2, [pc, #1024]	; 4178 <__ieee754_rem_pio2f+0x428>
    3d74:	e1540002 	cmp	r4, r2
    3d78:	ca000013 	bgt	3dcc <__ieee754_rem_pio2f+0x7c>
    3d7c:	e3500000 	cmp	r0, #0
    3d80:	e59f13f4 	ldr	r1, [pc, #1012]	; 417c <__ieee754_rem_pio2f+0x42c>
    3d84:	da0000db 	ble	40f8 <__ieee754_rem_pio2f+0x3a8>
    3d88:	eb000d00 	bl	7190 <__aeabi_fsub>
    3d8c:	e59f33ec 	ldr	r3, [pc, #1004]	; 4180 <__ieee754_rem_pio2f+0x430>
    3d90:	e3c6613e 	bic	r6, r6, #-2147483633	; 0x8000000f
    3d94:	e1560003 	cmp	r6, r3
    3d98:	e1a04000 	mov	r4, r0
    3d9c:	0a000045 	beq	3eb8 <__ieee754_rem_pio2f+0x168>
    3da0:	e59f13dc 	ldr	r1, [pc, #988]	; 4184 <__ieee754_rem_pio2f+0x434>
    3da4:	eb000cf9 	bl	7190 <__aeabi_fsub>
    3da8:	e1a01000 	mov	r1, r0
    3dac:	e5850000 	str	r0, [r5]
    3db0:	e1a00004 	mov	r0, r4
    3db4:	eb000cf5 	bl	7190 <__aeabi_fsub>
    3db8:	e59f13c4 	ldr	r1, [pc, #964]	; 4184 <__ieee754_rem_pio2f+0x434>
    3dbc:	eb000cf3 	bl	7190 <__aeabi_fsub>
    3dc0:	e3a07001 	mov	r7, #1
    3dc4:	e5850004 	str	r0, [r5, #4]
    3dc8:	ea000030 	b	3e90 <__ieee754_rem_pio2f+0x140>
    3dcc:	e59f23b4 	ldr	r2, [pc, #948]	; 4188 <__ieee754_rem_pio2f+0x438>
    3dd0:	e1540002 	cmp	r4, r2
    3dd4:	da000058 	ble	3f3c <__ieee754_rem_pio2f+0x1ec>
    3dd8:	e59f23ac 	ldr	r2, [pc, #940]	; 418c <__ieee754_rem_pio2f+0x43c>
    3ddc:	e1540002 	cmp	r4, r2
    3de0:	ca00002e 	bgt	3ea0 <__ieee754_rem_pio2f+0x150>
    3de4:	e1a0abc4 	asr	r10, r4, #23
    3de8:	e24aa086 	sub	r10, r10, #134	; 0x86
    3dec:	e0444b8a 	sub	r4, r4, r10, lsl #23
    3df0:	e1a00004 	mov	r0, r4
    3df4:	eb000e91 	bl	7840 <__aeabi_f2iz>
    3df8:	eb000d56 	bl	7358 <__aeabi_i2f>
    3dfc:	e1a03000 	mov	r3, r0
    3e00:	e1a01000 	mov	r1, r0
    3e04:	e1a00004 	mov	r0, r4
    3e08:	e58d3014 	str	r3, [sp, #20]
    3e0c:	eb000cdf 	bl	7190 <__aeabi_fsub>
    3e10:	e59f1378 	ldr	r1, [pc, #888]	; 4190 <__ieee754_rem_pio2f+0x440>
    3e14:	eb000d86 	bl	7434 <__aeabi_fmul>
    3e18:	e1a07000 	mov	r7, r0
    3e1c:	eb000e87 	bl	7840 <__aeabi_f2iz>
    3e20:	eb000d4c 	bl	7358 <__aeabi_i2f>
    3e24:	e1a01000 	mov	r1, r0
    3e28:	e1a04000 	mov	r4, r0
    3e2c:	e1a00007 	mov	r0, r7
    3e30:	e58d4018 	str	r4, [sp, #24]
    3e34:	eb000cd5 	bl	7190 <__aeabi_fsub>
    3e38:	e59f1350 	ldr	r1, [pc, #848]	; 4190 <__ieee754_rem_pio2f+0x440>
    3e3c:	eb000d7c 	bl	7434 <__aeabi_fmul>
    3e40:	e3a01000 	mov	r1, #0
    3e44:	e58d001c 	str	r0, [sp, #28]
    3e48:	eb000e5e 	bl	77c8 <__aeabi_fcmpeq>
    3e4c:	e3500000 	cmp	r0, #0
    3e50:	03a07003 	moveq	r7, #3
    3e54:	0a000025 	beq	3ef0 <__ieee754_rem_pio2f+0x1a0>
    3e58:	e28d8018 	add	r8, sp, #24
    3e5c:	e3a07003 	mov	r7, #3
    3e60:	e1a00004 	mov	r0, r4
    3e64:	e3a01000 	mov	r1, #0
    3e68:	eb000e56 	bl	77c8 <__aeabi_fcmpeq>
    3e6c:	e3500000 	cmp	r0, #0
    3e70:	e2477001 	sub	r7, r7, #1
    3e74:	0a00001d 	beq	3ef0 <__ieee754_rem_pio2f+0x1a0>
    3e78:	e5384004 	ldr	r4, [r8, #-4]!
    3e7c:	eafffff7 	b	3e60 <__ieee754_rem_pio2f+0x110>
    3e80:	e3a03000 	mov	r3, #0
    3e84:	e5850000 	str	r0, [r5]
    3e88:	e5813004 	str	r3, [r1, #4]
    3e8c:	e3a07000 	mov	r7, #0
    3e90:	e1a00007 	mov	r0, r7
    3e94:	e28dd024 	add	sp, sp, #36	; 0x24
    3e98:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    3e9c:	e12fff1e 	bx	lr
    3ea0:	e1a01000 	mov	r1, r0
    3ea4:	eb000cb9 	bl	7190 <__aeabi_fsub>
    3ea8:	e3a07000 	mov	r7, #0
    3eac:	e5850004 	str	r0, [r5, #4]
    3eb0:	e5850000 	str	r0, [r5]
    3eb4:	eafffff5 	b	3e90 <__ieee754_rem_pio2f+0x140>
    3eb8:	e59f12d4 	ldr	r1, [pc, #724]	; 4194 <__ieee754_rem_pio2f+0x444>
    3ebc:	eb000cb3 	bl	7190 <__aeabi_fsub>
    3ec0:	e59f12d0 	ldr	r1, [pc, #720]	; 4198 <__ieee754_rem_pio2f+0x448>
    3ec4:	e1a04000 	mov	r4, r0
    3ec8:	eb000cb0 	bl	7190 <__aeabi_fsub>
    3ecc:	e1a01000 	mov	r1, r0
    3ed0:	e5850000 	str	r0, [r5]
    3ed4:	e1a00004 	mov	r0, r4
    3ed8:	eb000cac 	bl	7190 <__aeabi_fsub>
    3edc:	e59f12b4 	ldr	r1, [pc, #692]	; 4198 <__ieee754_rem_pio2f+0x448>
    3ee0:	eb000caa 	bl	7190 <__aeabi_fsub>
    3ee4:	e3a07001 	mov	r7, #1
    3ee8:	e5850004 	str	r0, [r5, #4]
    3eec:	eaffffe7 	b	3e90 <__ieee754_rem_pio2f+0x140>
    3ef0:	e3a03002 	mov	r3, #2
    3ef4:	e58d3000 	str	r3, [sp]
    3ef8:	e59f329c 	ldr	r3, [pc, #668]	; 419c <__ieee754_rem_pio2f+0x44c>
    3efc:	e28d0014 	add	r0, sp, #20
    3f00:	e58d3004 	str	r3, [sp, #4]
    3f04:	e1a01005 	mov	r1, r5
    3f08:	e1a03007 	mov	r3, r7
    3f0c:	e1a0200a 	mov	r2, r10
    3f10:	eb00056b 	bl	54c4 <__kernel_rem_pio2f>
    3f14:	e3560000 	cmp	r6, #0
    3f18:	e1a07000 	mov	r7, r0
    3f1c:	aaffffdb 	bge	3e90 <__ieee754_rem_pio2f+0x140>
    3f20:	e895000c 	ldm	r5, {r2, r3}
    3f24:	e2822102 	add	r2, r2, #-2147483648	; 0x80000000
    3f28:	e2833102 	add	r3, r3, #-2147483648	; 0x80000000
    3f2c:	e5852000 	str	r2, [r5]
    3f30:	e5853004 	str	r3, [r5, #4]
    3f34:	e2607000 	rsb	r7, r0, #0
    3f38:	eaffffd4 	b	3e90 <__ieee754_rem_pio2f+0x140>
    3f3c:	eb0008d9 	bl	62a8 <fabsf>
    3f40:	e59f1258 	ldr	r1, [pc, #600]	; 41a0 <__ieee754_rem_pio2f+0x450>
    3f44:	e1a08000 	mov	r8, r0
    3f48:	eb000d39 	bl	7434 <__aeabi_fmul>
    3f4c:	e3a0143f 	mov	r1, #1056964608	; 0x3f000000
    3f50:	eb000c8f 	bl	7194 <__addsf3>
    3f54:	eb000e39 	bl	7840 <__aeabi_f2iz>
    3f58:	e1a07000 	mov	r7, r0
    3f5c:	eb000cfd 	bl	7358 <__aeabi_i2f>
    3f60:	e59f1214 	ldr	r1, [pc, #532]	; 417c <__ieee754_rem_pio2f+0x42c>
    3f64:	e1a0b000 	mov	r11, r0
    3f68:	eb000d31 	bl	7434 <__aeabi_fmul>
    3f6c:	e1a01000 	mov	r1, r0
    3f70:	e1a00008 	mov	r0, r8
    3f74:	eb000c85 	bl	7190 <__aeabi_fsub>
    3f78:	e59f1204 	ldr	r1, [pc, #516]	; 4184 <__ieee754_rem_pio2f+0x434>
    3f7c:	e1a0a000 	mov	r10, r0
    3f80:	e1a0000b 	mov	r0, r11
    3f84:	eb000d2a 	bl	7434 <__aeabi_fmul>
    3f88:	e357001f 	cmp	r7, #31
    3f8c:	e1a09000 	mov	r9, r0
    3f90:	e1a01009 	mov	r1, r9
    3f94:	e1a0000a 	mov	r0, r10
    3f98:	ca000016 	bgt	3ff8 <__ieee754_rem_pio2f+0x2a8>
    3f9c:	e59f3200 	ldr	r3, [pc, #512]	; 41a4 <__ieee754_rem_pio2f+0x454>
    3fa0:	e2472001 	sub	r2, r7, #1
    3fa4:	e7933102 	ldr	r3, [r3, r2, lsl #2]
    3fa8:	e3c420ff 	bic	r2, r4, #255	; 0xff
    3fac:	e1520003 	cmp	r2, r3
    3fb0:	0a000010 	beq	3ff8 <__ieee754_rem_pio2f+0x2a8>
    3fb4:	eb000c75 	bl	7190 <__aeabi_fsub>
    3fb8:	e1a08000 	mov	r8, r0
    3fbc:	e5858000 	str	r8, [r5]
    3fc0:	e1a01008 	mov	r1, r8
    3fc4:	e1a0000a 	mov	r0, r10
    3fc8:	eb000c70 	bl	7190 <__aeabi_fsub>
    3fcc:	e1a01009 	mov	r1, r9
    3fd0:	eb000c6e 	bl	7190 <__aeabi_fsub>
    3fd4:	e3560000 	cmp	r6, #0
    3fd8:	e5850004 	str	r0, [r5, #4]
    3fdc:	aaffffab 	bge	3e90 <__ieee754_rem_pio2f+0x140>
    3fe0:	e2888102 	add	r8, r8, #-2147483648	; 0x80000000
    3fe4:	e2800102 	add	r0, r0, #-2147483648	; 0x80000000
    3fe8:	e5858000 	str	r8, [r5]
    3fec:	e5850004 	str	r0, [r5, #4]
    3ff0:	e2677000 	rsb	r7, r7, #0
    3ff4:	eaffffa5 	b	3e90 <__ieee754_rem_pio2f+0x140>
    3ff8:	eb000c64 	bl	7190 <__aeabi_fsub>
    3ffc:	e1a02ba0 	lsr	r2, r0, #23
    4000:	e1a03bc4 	asr	r3, r4, #23
    4004:	e20220ff 	and	r2, r2, #255	; 0xff
    4008:	e0622003 	rsb	r2, r2, r3
    400c:	e3520008 	cmp	r2, #8
    4010:	e1a08000 	mov	r8, r0
    4014:	daffffe8 	ble	3fbc <__ieee754_rem_pio2f+0x26c>
    4018:	e59f1174 	ldr	r1, [pc, #372]	; 4194 <__ieee754_rem_pio2f+0x444>
    401c:	e1a0000b 	mov	r0, r11
    4020:	e58d300c 	str	r3, [sp, #12]
    4024:	eb000d02 	bl	7434 <__aeabi_fmul>
    4028:	e1a08000 	mov	r8, r0
    402c:	e1a01008 	mov	r1, r8
    4030:	e1a0000a 	mov	r0, r10
    4034:	eb000c55 	bl	7190 <__aeabi_fsub>
    4038:	e1a04000 	mov	r4, r0
    403c:	e1a01004 	mov	r1, r4
    4040:	e1a0000a 	mov	r0, r10
    4044:	eb000c51 	bl	7190 <__aeabi_fsub>
    4048:	e1a01008 	mov	r1, r8
    404c:	eb000c4f 	bl	7190 <__aeabi_fsub>
    4050:	e59f1140 	ldr	r1, [pc, #320]	; 4198 <__ieee754_rem_pio2f+0x448>
    4054:	e1a08000 	mov	r8, r0
    4058:	e1a0000b 	mov	r0, r11
    405c:	eb000cf4 	bl	7434 <__aeabi_fmul>
    4060:	e1a01008 	mov	r1, r8
    4064:	eb000c49 	bl	7190 <__aeabi_fsub>
    4068:	e1a09000 	mov	r9, r0
    406c:	e1a01009 	mov	r1, r9
    4070:	e1a00004 	mov	r0, r4
    4074:	eb000c45 	bl	7190 <__aeabi_fsub>
    4078:	e59d300c 	ldr	r3, [sp, #12]
    407c:	e1a02ba0 	lsr	r2, r0, #23
    4080:	e20220ff 	and	r2, r2, #255	; 0xff
    4084:	e0623003 	rsb	r3, r2, r3
    4088:	e3530019 	cmp	r3, #25
    408c:	e1a08000 	mov	r8, r0
    4090:	d5850000 	strle	r0, [r5]
    4094:	d1a0a004 	movle	r10, r4
    4098:	daffffc8 	ble	3fc0 <__ieee754_rem_pio2f+0x270>
    409c:	e59f1104 	ldr	r1, [pc, #260]	; 41a8 <__ieee754_rem_pio2f+0x458>
    40a0:	e1a0000b 	mov	r0, r11
    40a4:	eb000ce2 	bl	7434 <__aeabi_fmul>
    40a8:	e1a08000 	mov	r8, r0
    40ac:	e1a01008 	mov	r1, r8
    40b0:	e1a00004 	mov	r0, r4
    40b4:	eb000c35 	bl	7190 <__aeabi_fsub>
    40b8:	e1a0a000 	mov	r10, r0
    40bc:	e1a0100a 	mov	r1, r10
    40c0:	e1a00004 	mov	r0, r4
    40c4:	eb000c31 	bl	7190 <__aeabi_fsub>
    40c8:	e1a01008 	mov	r1, r8
    40cc:	eb000c2f 	bl	7190 <__aeabi_fsub>
    40d0:	e59f10d4 	ldr	r1, [pc, #212]	; 41ac <__ieee754_rem_pio2f+0x45c>
    40d4:	e1a04000 	mov	r4, r0
    40d8:	e1a0000b 	mov	r0, r11
    40dc:	eb000cd4 	bl	7434 <__aeabi_fmul>
    40e0:	e1a01004 	mov	r1, r4
    40e4:	eb000c29 	bl	7190 <__aeabi_fsub>
    40e8:	e1a09000 	mov	r9, r0
    40ec:	e1a01009 	mov	r1, r9
    40f0:	e1a0000a 	mov	r0, r10
    40f4:	eaffffae 	b	3fb4 <__ieee754_rem_pio2f+0x264>
    40f8:	eb000c25 	bl	7194 <__addsf3>
    40fc:	e59f307c 	ldr	r3, [pc, #124]	; 4180 <__ieee754_rem_pio2f+0x430>
    4100:	e3c6613e 	bic	r6, r6, #-2147483633	; 0x8000000f
    4104:	e1560003 	cmp	r6, r3
    4108:	e1a04000 	mov	r4, r0
    410c:	0a00000a 	beq	413c <__ieee754_rem_pio2f+0x3ec>
    4110:	e59f106c 	ldr	r1, [pc, #108]	; 4184 <__ieee754_rem_pio2f+0x434>
    4114:	eb000c1e 	bl	7194 <__addsf3>
    4118:	e1a01000 	mov	r1, r0
    411c:	e5850000 	str	r0, [r5]
    4120:	e1a00004 	mov	r0, r4
    4124:	eb000c19 	bl	7190 <__aeabi_fsub>
    4128:	e59f1054 	ldr	r1, [pc, #84]	; 4184 <__ieee754_rem_pio2f+0x434>
    412c:	eb000c18 	bl	7194 <__addsf3>
    4130:	e3e07000 	mvn	r7, #0
    4134:	e5850004 	str	r0, [r5, #4]
    4138:	eaffff54 	b	3e90 <__ieee754_rem_pio2f+0x140>
    413c:	e59f1050 	ldr	r1, [pc, #80]	; 4194 <__ieee754_rem_pio2f+0x444>
    4140:	eb000c13 	bl	7194 <__addsf3>
    4144:	e59f104c 	ldr	r1, [pc, #76]	; 4198 <__ieee754_rem_pio2f+0x448>
    4148:	e1a04000 	mov	r4, r0
    414c:	eb000c10 	bl	7194 <__addsf3>
    4150:	e1a01000 	mov	r1, r0
    4154:	e5850000 	str	r0, [r5]
    4158:	e1a00004 	mov	r0, r4
    415c:	eb000c0b 	bl	7190 <__aeabi_fsub>
    4160:	e59f1030 	ldr	r1, [pc, #48]	; 4198 <__ieee754_rem_pio2f+0x448>
    4164:	eb000c0a 	bl	7194 <__addsf3>
    4168:	e3e07000 	mvn	r7, #0
    416c:	e5850004 	str	r0, [r5, #4]
    4170:	eaffff46 	b	3e90 <__ieee754_rem_pio2f+0x140>
    4174:	3f490fd8 	.word	0x3f490fd8
    4178:	4016cbe3 	.word	0x4016cbe3
    417c:	3fc90f80 	.word	0x3fc90f80
    4180:	3fc90fd0 	.word	0x3fc90fd0
    4184:	37354443 	.word	0x37354443
    4188:	43490f80 	.word	0x43490f80
    418c:	7f7fffff 	.word	0x7f7fffff
    4190:	43800000 	.word	0x43800000
    4194:	37354400 	.word	0x37354400
    4198:	2e85a308 	.word	0x2e85a308
    419c:	0000a2f0 	.word	0x0000a2f0
    41a0:	3f22f984 	.word	0x3f22f984
    41a4:	0000a270 	.word	0x0000a270
    41a8:	2e85a300 	.word	0x2e85a300
    41ac:	248d3132 	.word	0x248d3132

000041b0 <__kernel_cos>:
    41b0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    41b4:	e3c19102 	bic	r9, r1, #-2147483648	; 0x80000000
    41b8:	e35905f9 	cmp	r9, #1044381696	; 0x3e400000
    41bc:	e24dd014 	sub	sp, sp, #20
    41c0:	e1a06000 	mov	r6, r0
    41c4:	e1a07001 	mov	r7, r1
    41c8:	e1a04000 	mov	r4, r0
    41cc:	e1a05001 	mov	r5, r1
    41d0:	e1a0a002 	mov	r10, r2
    41d4:	e1a0b003 	mov	r11, r3
    41d8:	aa00004d 	bge	4314 <__kernel_cos+0x164>
    41dc:	eb000bd2 	bl	712c <__aeabi_d2iz>
    41e0:	e3500000 	cmp	r0, #0
    41e4:	0a0000ae 	beq	44a4 <__kernel_cos+0x2f4>
    41e8:	e1a02006 	mov	r2, r6
    41ec:	e1a03007 	mov	r3, r7
    41f0:	e1a00006 	mov	r0, r6
    41f4:	e1a01007 	mov	r1, r7
    41f8:	eb000a53 	bl	6b4c <__aeabi_dmul>
    41fc:	e28f3fab 	add	r3, pc, #684	; 0x2ac
    4200:	e893000c 	ldm	r3, {r2, r3}
    4204:	e1a04000 	mov	r4, r0
    4208:	e1a05001 	mov	r5, r1
    420c:	eb000a4e 	bl	6b4c <__aeabi_dmul>
    4210:	e28f3e2a 	add	r3, pc, #672	; 0x2a0
    4214:	e893000c 	ldm	r3, {r2, r3}
    4218:	eb000947 	bl	673c <__adddf3>
    421c:	e1a02004 	mov	r2, r4
    4220:	e1a03005 	mov	r3, r5
    4224:	eb000a48 	bl	6b4c <__aeabi_dmul>
    4228:	e28f3e29 	add	r3, pc, #656	; 0x290
    422c:	e893000c 	ldm	r3, {r2, r3}
    4230:	eb000940 	bl	6738 <__aeabi_dsub>
    4234:	e1a02004 	mov	r2, r4
    4238:	e1a03005 	mov	r3, r5
    423c:	eb000a42 	bl	6b4c <__aeabi_dmul>
    4240:	e28f3d0a 	add	r3, pc, #640	; 0x280
    4244:	e893000c 	ldm	r3, {r2, r3}
    4248:	eb00093b 	bl	673c <__adddf3>
    424c:	e1a02004 	mov	r2, r4
    4250:	e1a03005 	mov	r3, r5
    4254:	eb000a3c 	bl	6b4c <__aeabi_dmul>
    4258:	e28f3e27 	add	r3, pc, #624	; 0x270
    425c:	e893000c 	ldm	r3, {r2, r3}
    4260:	eb000934 	bl	6738 <__aeabi_dsub>
    4264:	e1a02004 	mov	r2, r4
    4268:	e1a03005 	mov	r3, r5
    426c:	eb000a36 	bl	6b4c <__aeabi_dmul>
    4270:	e28f3e26 	add	r3, pc, #608	; 0x260
    4274:	e893000c 	ldm	r3, {r2, r3}
    4278:	eb00092f 	bl	673c <__adddf3>
    427c:	e1a02004 	mov	r2, r4
    4280:	e1a03005 	mov	r3, r5
    4284:	eb000a30 	bl	6b4c <__aeabi_dmul>
    4288:	e88d0003 	stm	sp, {r0, r1}
    428c:	e1a00004 	mov	r0, r4
    4290:	e1a01005 	mov	r1, r5
    4294:	e3a02000 	mov	r2, #0
    4298:	e59f3240 	ldr	r3, [pc, #576]	; 44e0 <__kernel_cos+0x330>
    429c:	eb000a2a 	bl	6b4c <__aeabi_dmul>
    42a0:	e89d000c 	ldm	sp, {r2, r3}
    42a4:	e1a08000 	mov	r8, r0
    42a8:	e1a09001 	mov	r9, r1
    42ac:	e1a00004 	mov	r0, r4
    42b0:	e1a01005 	mov	r1, r5
    42b4:	eb000a24 	bl	6b4c <__aeabi_dmul>
    42b8:	e1a0200a 	mov	r2, r10
    42bc:	e1a04000 	mov	r4, r0
    42c0:	e1a05001 	mov	r5, r1
    42c4:	e1a0300b 	mov	r3, r11
    42c8:	e1a00006 	mov	r0, r6
    42cc:	e1a01007 	mov	r1, r7
    42d0:	eb000a1d 	bl	6b4c <__aeabi_dmul>
    42d4:	e1a02000 	mov	r2, r0
    42d8:	e1a03001 	mov	r3, r1
    42dc:	e1a00004 	mov	r0, r4
    42e0:	e1a01005 	mov	r1, r5
    42e4:	eb000913 	bl	6738 <__aeabi_dsub>
    42e8:	e1a02000 	mov	r2, r0
    42ec:	e1a03001 	mov	r3, r1
    42f0:	e1a00008 	mov	r0, r8
    42f4:	e1a01009 	mov	r1, r9
    42f8:	eb00090e 	bl	6738 <__aeabi_dsub>
    42fc:	e1a02000 	mov	r2, r0
    4300:	e1a03001 	mov	r3, r1
    4304:	e3a00000 	mov	r0, #0
    4308:	e59f11d4 	ldr	r1, [pc, #468]	; 44e4 <__kernel_cos+0x334>
    430c:	eb000909 	bl	6738 <__aeabi_dsub>
    4310:	ea00005a 	b	4480 <__kernel_cos+0x2d0>
    4314:	e1a02000 	mov	r2, r0
    4318:	e1a03001 	mov	r3, r1
    431c:	eb000a0a 	bl	6b4c <__aeabi_dmul>
    4320:	e28f3f62 	add	r3, pc, #392	; 0x188
    4324:	e893000c 	ldm	r3, {r2, r3}
    4328:	e1a04000 	mov	r4, r0
    432c:	e1a05001 	mov	r5, r1
    4330:	eb000a05 	bl	6b4c <__aeabi_dmul>
    4334:	e28f3f5f 	add	r3, pc, #380	; 0x17c
    4338:	e893000c 	ldm	r3, {r2, r3}
    433c:	eb0008fe 	bl	673c <__adddf3>
    4340:	e1a02004 	mov	r2, r4
    4344:	e1a03005 	mov	r3, r5
    4348:	eb0009ff 	bl	6b4c <__aeabi_dmul>
    434c:	e28f3f5b 	add	r3, pc, #364	; 0x16c
    4350:	e893000c 	ldm	r3, {r2, r3}
    4354:	eb0008f7 	bl	6738 <__aeabi_dsub>
    4358:	e1a02004 	mov	r2, r4
    435c:	e1a03005 	mov	r3, r5
    4360:	eb0009f9 	bl	6b4c <__aeabi_dmul>
    4364:	e28f3f57 	add	r3, pc, #348	; 0x15c
    4368:	e893000c 	ldm	r3, {r2, r3}
    436c:	eb0008f2 	bl	673c <__adddf3>
    4370:	e1a02004 	mov	r2, r4
    4374:	e1a03005 	mov	r3, r5
    4378:	eb0009f3 	bl	6b4c <__aeabi_dmul>
    437c:	e28f3f53 	add	r3, pc, #332	; 0x14c
    4380:	e893000c 	ldm	r3, {r2, r3}
    4384:	eb0008eb 	bl	6738 <__aeabi_dsub>
    4388:	e1a02004 	mov	r2, r4
    438c:	e1a03005 	mov	r3, r5
    4390:	eb0009ed 	bl	6b4c <__aeabi_dmul>
    4394:	e28f3f4f 	add	r3, pc, #316	; 0x13c
    4398:	e893000c 	ldm	r3, {r2, r3}
    439c:	eb0008e6 	bl	673c <__adddf3>
    43a0:	e1a03005 	mov	r3, r5
    43a4:	e1a02004 	mov	r2, r4
    43a8:	eb0009e7 	bl	6b4c <__aeabi_dmul>
    43ac:	e59f3134 	ldr	r3, [pc, #308]	; 44e8 <__kernel_cos+0x338>
    43b0:	e1590003 	cmp	r9, r3
    43b4:	e88d0003 	stm	sp, {r0, r1}
    43b8:	daffffb3 	ble	428c <__kernel_cos+0xdc>
    43bc:	e59f3128 	ldr	r3, [pc, #296]	; 44ec <__kernel_cos+0x33c>
    43c0:	e1590003 	cmp	r9, r3
    43c4:	e3a02000 	mov	r2, #0
    43c8:	ca00002f 	bgt	448c <__kernel_cos+0x2dc>
    43cc:	e2493602 	sub	r3, r9, #2097152	; 0x200000
    43d0:	e3a02000 	mov	r2, #0
    43d4:	e3a00000 	mov	r0, #0
    43d8:	e59f1104 	ldr	r1, [pc, #260]	; 44e4 <__kernel_cos+0x334>
    43dc:	e1a08002 	mov	r8, r2
    43e0:	e1a09003 	mov	r9, r3
    43e4:	eb0008d3 	bl	6738 <__aeabi_dsub>
    43e8:	e58d0008 	str	r0, [sp, #8]
    43ec:	e58d100c 	str	r1, [sp, #12]
    43f0:	e1a00004 	mov	r0, r4
    43f4:	e1a01005 	mov	r1, r5
    43f8:	e3a02000 	mov	r2, #0
    43fc:	e59f30dc 	ldr	r3, [pc, #220]	; 44e0 <__kernel_cos+0x330>
    4400:	eb0009d1 	bl	6b4c <__aeabi_dmul>
    4404:	e1a02008 	mov	r2, r8
    4408:	e1a03009 	mov	r3, r9
    440c:	eb0008c9 	bl	6738 <__aeabi_dsub>
    4410:	e89d000c 	ldm	sp, {r2, r3}
    4414:	e1a08000 	mov	r8, r0
    4418:	e1a09001 	mov	r9, r1
    441c:	e1a00004 	mov	r0, r4
    4420:	e1a01005 	mov	r1, r5
    4424:	eb0009c8 	bl	6b4c <__aeabi_dmul>
    4428:	e1a0200a 	mov	r2, r10
    442c:	e1a04000 	mov	r4, r0
    4430:	e1a05001 	mov	r5, r1
    4434:	e1a0300b 	mov	r3, r11
    4438:	e1a00006 	mov	r0, r6
    443c:	e1a01007 	mov	r1, r7
    4440:	eb0009c1 	bl	6b4c <__aeabi_dmul>
    4444:	e1a02000 	mov	r2, r0
    4448:	e1a03001 	mov	r3, r1
    444c:	e1a00004 	mov	r0, r4
    4450:	e1a01005 	mov	r1, r5
    4454:	eb0008b7 	bl	6738 <__aeabi_dsub>
    4458:	e1a02000 	mov	r2, r0
    445c:	e1a03001 	mov	r3, r1
    4460:	e1a00008 	mov	r0, r8
    4464:	e1a01009 	mov	r1, r9
    4468:	eb0008b2 	bl	6738 <__aeabi_dsub>
    446c:	e1a02000 	mov	r2, r0
    4470:	e1a03001 	mov	r3, r1
    4474:	e28d1008 	add	r1, sp, #8
    4478:	e8910003 	ldm	r1, {r0, r1}
    447c:	eb0008ad 	bl	6738 <__aeabi_dsub>
    4480:	e28dd014 	add	sp, sp, #20
    4484:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    4488:	e12fff1e 	bx	lr
    448c:	e59f305c 	ldr	r3, [pc, #92]	; 44f0 <__kernel_cos+0x340>
    4490:	e3a08000 	mov	r8, #0
    4494:	e58d2008 	str	r2, [sp, #8]
    4498:	e58d300c 	str	r3, [sp, #12]
    449c:	e59f9050 	ldr	r9, [pc, #80]	; 44f4 <__kernel_cos+0x344>
    44a0:	eaffffd2 	b	43f0 <__kernel_cos+0x240>
    44a4:	e3a00000 	mov	r0, #0
    44a8:	e59f1034 	ldr	r1, [pc, #52]	; 44e4 <__kernel_cos+0x334>
    44ac:	eafffff3 	b	4480 <__kernel_cos+0x2d0>
    44b0:	be8838d4 	.word	0xbe8838d4
    44b4:	bda8fae9 	.word	0xbda8fae9
    44b8:	bdb4b1c4 	.word	0xbdb4b1c4
    44bc:	3e21ee9e 	.word	0x3e21ee9e
    44c0:	809c52ad 	.word	0x809c52ad
    44c4:	3e927e4f 	.word	0x3e927e4f
    44c8:	19cb1590 	.word	0x19cb1590
    44cc:	3efa01a0 	.word	0x3efa01a0
    44d0:	16c15177 	.word	0x16c15177
    44d4:	3f56c16c 	.word	0x3f56c16c
    44d8:	5555554c 	.word	0x5555554c
    44dc:	3fa55555 	.word	0x3fa55555
    44e0:	3fe00000 	.word	0x3fe00000
    44e4:	3ff00000 	.word	0x3ff00000
    44e8:	3fd33332 	.word	0x3fd33332
    44ec:	3fe90000 	.word	0x3fe90000
    44f0:	3fe70000 	.word	0x3fe70000
    44f4:	3fd20000 	.word	0x3fd20000

000044f8 <__kernel_rem_pio2>:
    44f8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    44fc:	e59feb6c 	ldr	lr, [pc, #2924]	; 5070 <__kernel_rem_pio2+0xb78>
    4500:	e242c003 	sub	r12, r2, #3
    4504:	e0ce4e9c 	smull	r4, lr, r12, lr
    4508:	e1a0cfcc 	asr	r12, r12, #31
    450c:	e06cc14e 	rsb	r12, r12, lr, asr #2
    4510:	e24ddf99 	sub	sp, sp, #612	; 0x264
    4514:	e1cccfcc 	bic	r12, r12, r12, asr #31
    4518:	e58dc028 	str	r12, [sp, #40]	; 0x28
    451c:	e1a0b003 	mov	r11, r3
    4520:	e59dc288 	ldr	r12, [sp, #648]	; 0x288
    4524:	e59f3b48 	ldr	r3, [pc, #2888]	; 5074 <__kernel_rem_pio2+0xb7c>
    4528:	e793310c 	ldr	r3, [r3, r12, lsl #2]
    452c:	e59dc028 	ldr	r12, [sp, #40]	; 0x28
    4530:	e58d3020 	str	r3, [sp, #32]
    4534:	e59de020 	ldr	lr, [sp, #32]
    4538:	e1e0300c 	mvn	r3, r12
    453c:	e24b4001 	sub	r4, r11, #1
    4540:	e0833083 	add	r3, r3, r3, lsl #1
    4544:	e58d0010 	str	r0, [sp, #16]
    4548:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
    454c:	e0823183 	add	r3, r2, r3, lsl #3
    4550:	e094c00e 	adds	r12, r4, lr
    4554:	e58d400c 	str	r4, [sp, #12]
    4558:	e58d101c 	str	r1, [sp, #28]
    455c:	e58d3018 	str	r3, [sp, #24]
    4560:	e0646000 	rsb	r6, r4, r0
    4564:	4a000012 	bmi	45b4 <__kernel_rem_pio2+0xbc>
    4568:	e086c00c 	add	r12, r6, r12
    456c:	e28c4001 	add	r4, r12, #1
    4570:	e59dc28c 	ldr	r12, [sp, #652]	; 0x28c
    4574:	e28d8080 	add	r8, sp, #128	; 0x80
    4578:	e08c5106 	add	r5, r12, r6, lsl #2
    457c:	e3a07000 	mov	r7, #0
    4580:	ea000006 	b	45a0 <__kernel_rem_pio2+0xa8>
    4584:	e7950007 	ldr	r0, [r5, r7]
    4588:	eb000938 	bl	6a70 <__aeabi_i2d>
    458c:	e2866001 	add	r6, r6, #1
    4590:	e1560004 	cmp	r6, r4
    4594:	e8a80003 	stmia	r8!, {r0, r1}
    4598:	e2877004 	add	r7, r7, #4
    459c:	0a000004 	beq	45b4 <__kernel_rem_pio2+0xbc>
    45a0:	e3560000 	cmp	r6, #0
    45a4:	aafffff6 	bge	4584 <__kernel_rem_pio2+0x8c>
    45a8:	e3a00000 	mov	r0, #0
    45ac:	e3a01000 	mov	r1, #0
    45b0:	eafffff5 	b	458c <__kernel_rem_pio2+0x94>
    45b4:	e59d4020 	ldr	r4, [sp, #32]
    45b8:	e3540000 	cmp	r4, #0
    45bc:	ba000020 	blt	4644 <__kernel_rem_pio2+0x14c>
    45c0:	e59d4020 	ldr	r4, [sp, #32]
    45c4:	e28dcf72 	add	r12, sp, #456	; 0x1c8
    45c8:	e08cc184 	add	r12, r12, r4, lsl #3
    45cc:	e58dc004 	str	r12, [sp, #4]
    45d0:	e28dad07 	add	r10, sp, #448	; 0x1c0
    45d4:	e1a0800b 	mov	r8, r11
    45d8:	e59dc00c 	ldr	r12, [sp, #12]
    45dc:	e35c0000 	cmp	r12, #0
    45e0:	ba000130 	blt	4aa8 <__kernel_rem_pio2+0x5b0>
    45e4:	e28de080 	add	lr, sp, #128	; 0x80
    45e8:	e59d9010 	ldr	r9, [sp, #16]
    45ec:	e08e7188 	add	r7, lr, r8, lsl #3
    45f0:	e3a04000 	mov	r4, #0
    45f4:	e3a05000 	mov	r5, #0
    45f8:	e3a06000 	mov	r6, #0
    45fc:	e937000c 	ldmdb	r7!, {r2, r3}
    4600:	e8b90003 	ldm	r9!, {r0, r1}
    4604:	eb000950 	bl	6b4c <__aeabi_dmul>
    4608:	e1a02000 	mov	r2, r0
    460c:	e1a03001 	mov	r3, r1
    4610:	e1a00004 	mov	r0, r4
    4614:	e1a01005 	mov	r1, r5
    4618:	eb000847 	bl	673c <__adddf3>
    461c:	e2866001 	add	r6, r6, #1
    4620:	e156000b 	cmp	r6, r11
    4624:	e1a04000 	mov	r4, r0
    4628:	e1a05001 	mov	r5, r1
    462c:	1afffff2 	bne	45fc <__kernel_rem_pio2+0x104>
    4630:	e8aa0030 	stmia	r10!, {r4, r5}
    4634:	e59d4004 	ldr	r4, [sp, #4]
    4638:	e15a0004 	cmp	r10, r4
    463c:	e2888001 	add	r8, r8, #1
    4640:	1affffe4 	bne	45d8 <__kernel_rem_pio2+0xe0>
    4644:	e59dc020 	ldr	r12, [sp, #32]
    4648:	e28d4030 	add	r4, sp, #48	; 0x30
    464c:	e084410c 	add	r4, r4, r12, lsl #2
    4650:	e58d402c 	str	r4, [sp, #44]	; 0x2c
    4654:	e58dc004 	str	r12, [sp, #4]
    4658:	e59d4004 	ldr	r4, [sp, #4]
    465c:	e28dce26 	add	r12, sp, #608	; 0x260
    4660:	e1a0a184 	lsl	r10, r4, #3
    4664:	e08c300a 	add	r3, r12, r10
    4668:	e3540000 	cmp	r4, #0
    466c:	e24350a0 	sub	r5, r3, #160	; 0xa0
    4670:	e8950030 	ldm	r5, {r4, r5}
    4674:	da00001f 	ble	46f8 <__kernel_rem_pio2+0x200>
    4678:	e59dc004 	ldr	r12, [sp, #4]
    467c:	e28d802c 	add	r8, sp, #44	; 0x2c
    4680:	e28ded07 	add	lr, sp, #448	; 0x1c0
    4684:	e08ea00a 	add	r10, lr, r10
    4688:	e088910c 	add	r9, r8, r12, lsl #2
    468c:	e3a02000 	mov	r2, #0
    4690:	e59f39e0 	ldr	r3, [pc, #2528]	; 5078 <__kernel_rem_pio2+0xb80>
    4694:	e1a00004 	mov	r0, r4
    4698:	e1a01005 	mov	r1, r5
    469c:	eb00092a 	bl	6b4c <__aeabi_dmul>
    46a0:	eb000aa1 	bl	712c <__aeabi_d2iz>
    46a4:	eb0008f1 	bl	6a70 <__aeabi_i2d>
    46a8:	e3a02000 	mov	r2, #0
    46ac:	e59f39c8 	ldr	r3, [pc, #2504]	; 507c <__kernel_rem_pio2+0xb84>
    46b0:	e1a06000 	mov	r6, r0
    46b4:	e1a07001 	mov	r7, r1
    46b8:	eb000923 	bl	6b4c <__aeabi_dmul>
    46bc:	e1a02000 	mov	r2, r0
    46c0:	e1a03001 	mov	r3, r1
    46c4:	e1a00004 	mov	r0, r4
    46c8:	e1a01005 	mov	r1, r5
    46cc:	eb000819 	bl	6738 <__aeabi_dsub>
    46d0:	eb000a95 	bl	712c <__aeabi_d2iz>
    46d4:	e1a02006 	mov	r2, r6
    46d8:	e5a80004 	str	r0, [r8, #4]!
    46dc:	e1a03007 	mov	r3, r7
    46e0:	e93a0003 	ldmdb	r10!, {r0, r1}
    46e4:	eb000814 	bl	673c <__adddf3>
    46e8:	e1580009 	cmp	r8, r9
    46ec:	e1a04000 	mov	r4, r0
    46f0:	e1a05001 	mov	r5, r1
    46f4:	1affffe4 	bne	468c <__kernel_rem_pio2+0x194>
    46f8:	e59d2018 	ldr	r2, [sp, #24]
    46fc:	e1a00004 	mov	r0, r4
    4700:	e1a01005 	mov	r1, r5
    4704:	eb000681 	bl	6110 <scalbn>
    4708:	e3a02000 	mov	r2, #0
    470c:	e3a035ff 	mov	r3, #1069547520	; 0x3fc00000
    4710:	e1a04000 	mov	r4, r0
    4714:	e1a05001 	mov	r5, r1
    4718:	eb00090b 	bl	6b4c <__aeabi_dmul>
    471c:	eb000615 	bl	5f78 <floor>
    4720:	e3a02000 	mov	r2, #0
    4724:	e59f3954 	ldr	r3, [pc, #2388]	; 5080 <__kernel_rem_pio2+0xb88>
    4728:	eb000907 	bl	6b4c <__aeabi_dmul>
    472c:	e1a02000 	mov	r2, r0
    4730:	e1a03001 	mov	r3, r1
    4734:	e1a00004 	mov	r0, r4
    4738:	e1a01005 	mov	r1, r5
    473c:	eb0007fd 	bl	6738 <__aeabi_dsub>
    4740:	e1a04000 	mov	r4, r0
    4744:	e1a05001 	mov	r5, r1
    4748:	eb000a77 	bl	712c <__aeabi_d2iz>
    474c:	e1a08000 	mov	r8, r0
    4750:	eb0008c6 	bl	6a70 <__aeabi_i2d>
    4754:	e1a02000 	mov	r2, r0
    4758:	e1a03001 	mov	r3, r1
    475c:	e1a00004 	mov	r0, r4
    4760:	e1a01005 	mov	r1, r5
    4764:	eb0007f3 	bl	6738 <__aeabi_dsub>
    4768:	e59d4018 	ldr	r4, [sp, #24]
    476c:	e3540000 	cmp	r4, #0
    4770:	e1a06000 	mov	r6, r0
    4774:	e1a07001 	mov	r7, r1
    4778:	da0000ad 	ble	4a34 <__kernel_rem_pio2+0x53c>
    477c:	e59dc004 	ldr	r12, [sp, #4]
    4780:	e28dee26 	add	lr, sp, #608	; 0x260
    4784:	e24c2001 	sub	r2, r12, #1
    4788:	e08e2102 	add	r2, lr, r2, lsl #2
    478c:	e5120230 	ldr	r0, [r2, #-560]	; 0xfffffdd0
    4790:	e2643018 	rsb	r3, r4, #24
    4794:	e1a01350 	asr	r1, r0, r3
    4798:	e0403311 	sub	r3, r0, r1, lsl r3
    479c:	e2645017 	rsb	r5, r4, #23
    47a0:	e1a05553 	asr	r5, r3, r5
    47a4:	e5023230 	str	r3, [r2, #-560]	; 0xfffffdd0
    47a8:	e0888001 	add	r8, r8, r1
    47ac:	e3550000 	cmp	r5, #0
    47b0:	da000027 	ble	4854 <__kernel_rem_pio2+0x35c>
    47b4:	e59d4004 	ldr	r4, [sp, #4]
    47b8:	e3540000 	cmp	r4, #0
    47bc:	e2888001 	add	r8, r8, #1
    47c0:	da0000b6 	ble	4aa0 <__kernel_rem_pio2+0x5a8>
    47c4:	e28d3030 	add	r3, sp, #48	; 0x30
    47c8:	e0830104 	add	r0, r3, r4, lsl #2
    47cc:	e3a04000 	mov	r4, #0
    47d0:	ea000005 	b	47ec <__kernel_rem_pio2+0x2f4>
    47d4:	e3520000 	cmp	r2, #0
    47d8:	12622401 	rsbne	r2, r2, #16777216	; 0x1000000
    47dc:	15032004 	strne	r2, [r3, #-4]
    47e0:	13a04001 	movne	r4, #1
    47e4:	e1530000 	cmp	r3, r0
    47e8:	0a000008 	beq	4810 <__kernel_rem_pio2+0x318>
    47ec:	e3540000 	cmp	r4, #0
    47f0:	e4932004 	ldr	r2, [r3], #4
    47f4:	0afffff6 	beq	47d4 <__kernel_rem_pio2+0x2dc>
    47f8:	e3e014ff 	mvn	r1, #-16777216	; 0xff000000
    47fc:	e0621001 	rsb	r1, r2, r1
    4800:	e1530000 	cmp	r3, r0
    4804:	e5031004 	str	r1, [r3, #-4]
    4808:	e3a04001 	mov	r4, #1
    480c:	1afffff6 	bne	47ec <__kernel_rem_pio2+0x2f4>
    4810:	e59dc018 	ldr	r12, [sp, #24]
    4814:	e35c0000 	cmp	r12, #0
    4818:	da00000b 	ble	484c <__kernel_rem_pio2+0x354>
    481c:	e35c0001 	cmp	r12, #1
    4820:	0a00008a 	beq	4a50 <__kernel_rem_pio2+0x558>
    4824:	e35c0002 	cmp	r12, #2
    4828:	1a000007 	bne	484c <__kernel_rem_pio2+0x354>
    482c:	e59dc004 	ldr	r12, [sp, #4]
    4830:	e28dee26 	add	lr, sp, #608	; 0x260
    4834:	e24c3001 	sub	r3, r12, #1
    4838:	e08e3103 	add	r3, lr, r3, lsl #2
    483c:	e5132230 	ldr	r2, [r3, #-560]	; 0xfffffdd0
    4840:	e3c224ff 	bic	r2, r2, #-16777216	; 0xff000000
    4844:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
    4848:	e5032230 	str	r2, [r3, #-560]	; 0xfffffdd0
    484c:	e3550002 	cmp	r5, #2
    4850:	0a000062 	beq	49e0 <__kernel_rem_pio2+0x4e8>
    4854:	e1a00006 	mov	r0, r6
    4858:	e1a01007 	mov	r1, r7
    485c:	e3a02000 	mov	r2, #0
    4860:	e3a03000 	mov	r3, #0
    4864:	eb000a12 	bl	70b4 <__aeabi_dcmpeq>
    4868:	e3500000 	cmp	r0, #0
    486c:	0a000090 	beq	4ab4 <__kernel_rem_pio2+0x5bc>
    4870:	e59d4004 	ldr	r4, [sp, #4]
    4874:	e59dc020 	ldr	r12, [sp, #32]
    4878:	e2440001 	sub	r0, r4, #1
    487c:	e15c0000 	cmp	r12, r0
    4880:	ca000009 	bgt	48ac <__kernel_rem_pio2+0x3b4>
    4884:	e28de030 	add	lr, sp, #48	; 0x30
    4888:	e59dc02c 	ldr	r12, [sp, #44]	; 0x2c
    488c:	e08e3104 	add	r3, lr, r4, lsl #2
    4890:	e3a02000 	mov	r2, #0
    4894:	e5331004 	ldr	r1, [r3, #-4]!
    4898:	e153000c 	cmp	r3, r12
    489c:	e1822001 	orr	r2, r2, r1
    48a0:	1afffffb 	bne	4894 <__kernel_rem_pio2+0x39c>
    48a4:	e3520000 	cmp	r2, #0
    48a8:	1a0001c9 	bne	4fd4 <__kernel_rem_pio2+0xadc>
    48ac:	e59d4020 	ldr	r4, [sp, #32]
    48b0:	e2442001 	sub	r2, r4, #1
    48b4:	e1a02102 	lsl	r2, r2, #2
    48b8:	e28dce26 	add	r12, sp, #608	; 0x260
    48bc:	e08c3002 	add	r3, r12, r2
    48c0:	e5133230 	ldr	r3, [r3, #-560]	; 0xfffffdd0
    48c4:	e3530000 	cmp	r3, #0
    48c8:	1a0001d9 	bne	5034 <__kernel_rem_pio2+0xb3c>
    48cc:	e28de030 	add	lr, sp, #48	; 0x30
    48d0:	e08e2002 	add	r2, lr, r2
    48d4:	e3a03001 	mov	r3, #1
    48d8:	e5321004 	ldr	r1, [r2, #-4]!
    48dc:	e3510000 	cmp	r1, #0
    48e0:	e2833001 	add	r3, r3, #1
    48e4:	0afffffb 	beq	48d8 <__kernel_rem_pio2+0x3e0>
    48e8:	e59d4004 	ldr	r4, [sp, #4]
    48ec:	e0843003 	add	r3, r4, r3
    48f0:	e2848001 	add	r8, r4, #1
    48f4:	e1580003 	cmp	r8, r3
    48f8:	e58d3024 	str	r3, [sp, #36]	; 0x24
    48fc:	ca000031 	bgt	49c8 <__kernel_rem_pio2+0x4d0>
    4900:	e59d4004 	ldr	r4, [sp, #4]
    4904:	e59dc028 	ldr	r12, [sp, #40]	; 0x28
    4908:	e084300c 	add	r3, r4, r12
    490c:	e59dc28c 	ldr	r12, [sp, #652]	; 0x28c
    4910:	e59d400c 	ldr	r4, [sp, #12]
    4914:	e08c3103 	add	r3, r12, r3, lsl #2
    4918:	e59dc024 	ldr	r12, [sp, #36]	; 0x24
    491c:	e0849008 	add	r9, r4, r8
    4920:	e28d4d07 	add	r4, sp, #448	; 0x1c0
    4924:	e0844188 	add	r4, r4, r8, lsl #3
    4928:	e28cc001 	add	r12, r12, #1
    492c:	e28de080 	add	lr, sp, #128	; 0x80
    4930:	e98d0018 	stmib	sp, {r3, r4}
    4934:	e58dc014 	str	r12, [sp, #20]
    4938:	e08e9189 	add	r9, lr, r9, lsl #3
    493c:	e59d4004 	ldr	r4, [sp, #4]
    4940:	e5b40004 	ldr	r0, [r4, #4]!
    4944:	e58d4004 	str	r4, [sp, #4]
    4948:	eb000848 	bl	6a70 <__aeabi_i2d>
    494c:	e59dc00c 	ldr	r12, [sp, #12]
    4950:	e35c0000 	cmp	r12, #0
    4954:	e8a90003 	stmia	r9!, {r0, r1}
    4958:	ba00001d 	blt	49d4 <__kernel_rem_pio2+0x4dc>
    495c:	e088700b 	add	r7, r8, r11
    4960:	e28de080 	add	lr, sp, #128	; 0x80
    4964:	e59da010 	ldr	r10, [sp, #16]
    4968:	e08e7187 	add	r7, lr, r7, lsl #3
    496c:	e3a04000 	mov	r4, #0
    4970:	e3a05000 	mov	r5, #0
    4974:	e3a06000 	mov	r6, #0
    4978:	e937000c 	ldmdb	r7!, {r2, r3}
    497c:	e8ba0003 	ldm	r10!, {r0, r1}
    4980:	eb000871 	bl	6b4c <__aeabi_dmul>
    4984:	e1a02000 	mov	r2, r0
    4988:	e1a03001 	mov	r3, r1
    498c:	e1a00004 	mov	r0, r4
    4990:	e1a01005 	mov	r1, r5
    4994:	eb000768 	bl	673c <__adddf3>
    4998:	e2866001 	add	r6, r6, #1
    499c:	e156000b 	cmp	r6, r11
    49a0:	e1a04000 	mov	r4, r0
    49a4:	e1a05001 	mov	r5, r1
    49a8:	1afffff2 	bne	4978 <__kernel_rem_pio2+0x480>
    49ac:	e59dc014 	ldr	r12, [sp, #20]
    49b0:	e2888001 	add	r8, r8, #1
    49b4:	e158000c 	cmp	r8, r12
    49b8:	e59dc008 	ldr	r12, [sp, #8]
    49bc:	e8ac0030 	stmia	r12!, {r4, r5}
    49c0:	e58dc008 	str	r12, [sp, #8]
    49c4:	1affffdc 	bne	493c <__kernel_rem_pio2+0x444>
    49c8:	e59dc024 	ldr	r12, [sp, #36]	; 0x24
    49cc:	e58dc004 	str	r12, [sp, #4]
    49d0:	eaffff20 	b	4658 <__kernel_rem_pio2+0x160>
    49d4:	e3a04000 	mov	r4, #0
    49d8:	e3a05000 	mov	r5, #0
    49dc:	eafffff2 	b	49ac <__kernel_rem_pio2+0x4b4>
    49e0:	e1a02006 	mov	r2, r6
    49e4:	e1a03007 	mov	r3, r7
    49e8:	e3a00000 	mov	r0, #0
    49ec:	e59f1690 	ldr	r1, [pc, #1680]	; 5084 <__kernel_rem_pio2+0xb8c>
    49f0:	eb000750 	bl	6738 <__aeabi_dsub>
    49f4:	e3540000 	cmp	r4, #0
    49f8:	e1a06000 	mov	r6, r0
    49fc:	e1a07001 	mov	r7, r1
    4a00:	0affff93 	beq	4854 <__kernel_rem_pio2+0x35c>
    4a04:	e59d2018 	ldr	r2, [sp, #24]
    4a08:	e3a00000 	mov	r0, #0
    4a0c:	e59f1670 	ldr	r1, [pc, #1648]	; 5084 <__kernel_rem_pio2+0xb8c>
    4a10:	eb0005be 	bl	6110 <scalbn>
    4a14:	e1a02000 	mov	r2, r0
    4a18:	e1a03001 	mov	r3, r1
    4a1c:	e1a00006 	mov	r0, r6
    4a20:	e1a01007 	mov	r1, r7
    4a24:	eb000743 	bl	6738 <__aeabi_dsub>
    4a28:	e1a06000 	mov	r6, r0
    4a2c:	e1a07001 	mov	r7, r1
    4a30:	eaffff87 	b	4854 <__kernel_rem_pio2+0x35c>
    4a34:	1a00000e 	bne	4a74 <__kernel_rem_pio2+0x57c>
    4a38:	e59d4004 	ldr	r4, [sp, #4]
    4a3c:	e28dce26 	add	r12, sp, #608	; 0x260
    4a40:	e08c3104 	add	r3, r12, r4, lsl #2
    4a44:	e5135234 	ldr	r5, [r3, #-564]	; 0xfffffdcc
    4a48:	e1a05bc5 	asr	r5, r5, #23
    4a4c:	eaffff56 	b	47ac <__kernel_rem_pio2+0x2b4>
    4a50:	e59dc004 	ldr	r12, [sp, #4]
    4a54:	e28dee26 	add	lr, sp, #608	; 0x260
    4a58:	e24c3001 	sub	r3, r12, #1
    4a5c:	e08e3103 	add	r3, lr, r3, lsl #2
    4a60:	e5132230 	ldr	r2, [r3, #-560]	; 0xfffffdd0
    4a64:	e3c224ff 	bic	r2, r2, #-16777216	; 0xff000000
    4a68:	e3c22502 	bic	r2, r2, #8388608	; 0x800000
    4a6c:	e5032230 	str	r2, [r3, #-560]	; 0xfffffdd0
    4a70:	eaffff75 	b	484c <__kernel_rem_pio2+0x354>
    4a74:	e3a02000 	mov	r2, #0
    4a78:	e59f3608 	ldr	r3, [pc, #1544]	; 5088 <__kernel_rem_pio2+0xb90>
    4a7c:	eb00099e 	bl	70fc <__aeabi_dcmpge>
    4a80:	e3500000 	cmp	r0, #0
    4a84:	03a05000 	moveq	r5, #0
    4a88:	0affff71 	beq	4854 <__kernel_rem_pio2+0x35c>
    4a8c:	e59d4004 	ldr	r4, [sp, #4]
    4a90:	e3540000 	cmp	r4, #0
    4a94:	e3a05002 	mov	r5, #2
    4a98:	e2888001 	add	r8, r8, #1
    4a9c:	caffff48 	bgt	47c4 <__kernel_rem_pio2+0x2cc>
    4aa0:	e3a04000 	mov	r4, #0
    4aa4:	eaffff59 	b	4810 <__kernel_rem_pio2+0x318>
    4aa8:	e3a04000 	mov	r4, #0
    4aac:	e3a05000 	mov	r5, #0
    4ab0:	eafffede 	b	4630 <__kernel_rem_pio2+0x138>
    4ab4:	e59d4018 	ldr	r4, [sp, #24]
    4ab8:	e1a00006 	mov	r0, r6
    4abc:	e2642000 	rsb	r2, r4, #0
    4ac0:	e1a01007 	mov	r1, r7
    4ac4:	e58d500c 	str	r5, [sp, #12]
    4ac8:	e58d8010 	str	r8, [sp, #16]
    4acc:	eb00058f 	bl	6110 <scalbn>
    4ad0:	e3a02000 	mov	r2, #0
    4ad4:	e59f35a0 	ldr	r3, [pc, #1440]	; 507c <__kernel_rem_pio2+0xb84>
    4ad8:	e1a04000 	mov	r4, r0
    4adc:	e1a05001 	mov	r5, r1
    4ae0:	eb000985 	bl	70fc <__aeabi_dcmpge>
    4ae4:	e3500000 	cmp	r0, #0
    4ae8:	0a000153 	beq	503c <__kernel_rem_pio2+0xb44>
    4aec:	e3a02000 	mov	r2, #0
    4af0:	e59f3580 	ldr	r3, [pc, #1408]	; 5078 <__kernel_rem_pio2+0xb80>
    4af4:	e1a00004 	mov	r0, r4
    4af8:	e1a01005 	mov	r1, r5
    4afc:	eb000812 	bl	6b4c <__aeabi_dmul>
    4b00:	eb000989 	bl	712c <__aeabi_d2iz>
    4b04:	eb0007d9 	bl	6a70 <__aeabi_i2d>
    4b08:	e3a02000 	mov	r2, #0
    4b0c:	e59f3568 	ldr	r3, [pc, #1384]	; 507c <__kernel_rem_pio2+0xb84>
    4b10:	e1a06000 	mov	r6, r0
    4b14:	e1a07001 	mov	r7, r1
    4b18:	eb00080b 	bl	6b4c <__aeabi_dmul>
    4b1c:	e1a02000 	mov	r2, r0
    4b20:	e1a03001 	mov	r3, r1
    4b24:	e1a00004 	mov	r0, r4
    4b28:	e1a01005 	mov	r1, r5
    4b2c:	eb000701 	bl	6738 <__aeabi_dsub>
    4b30:	eb00097d 	bl	712c <__aeabi_d2iz>
    4b34:	e59d4004 	ldr	r4, [sp, #4]
    4b38:	e28dce26 	add	r12, sp, #608	; 0x260
    4b3c:	e08c3104 	add	r3, r12, r4, lsl #2
    4b40:	e5030230 	str	r0, [r3, #-560]	; 0xfffffdd0
    4b44:	e1a01007 	mov	r1, r7
    4b48:	e1a00006 	mov	r0, r6
    4b4c:	eb000976 	bl	712c <__aeabi_d2iz>
    4b50:	e2844001 	add	r4, r4, #1
    4b54:	e28dee26 	add	lr, sp, #608	; 0x260
    4b58:	e08e3104 	add	r3, lr, r4, lsl #2
    4b5c:	e58d4004 	str	r4, [sp, #4]
    4b60:	e59d4018 	ldr	r4, [sp, #24]
    4b64:	e2844018 	add	r4, r4, #24
    4b68:	e58d4018 	str	r4, [sp, #24]
    4b6c:	e5030230 	str	r0, [r3, #-560]	; 0xfffffdd0
    4b70:	e3a00000 	mov	r0, #0
    4b74:	e59f1508 	ldr	r1, [pc, #1288]	; 5084 <__kernel_rem_pio2+0xb8c>
    4b78:	e59d2018 	ldr	r2, [sp, #24]
    4b7c:	eb000563 	bl	6110 <scalbn>
    4b80:	e59dc004 	ldr	r12, [sp, #4]
    4b84:	e35c0000 	cmp	r12, #0
    4b88:	e1a04000 	mov	r4, r0
    4b8c:	e1a05001 	mov	r5, r1
    4b90:	ba00003b 	blt	4c84 <__kernel_rem_pio2+0x78c>
    4b94:	e28c6001 	add	r6, r12, #1
    4b98:	e28d9d07 	add	r9, sp, #448	; 0x1c0
    4b9c:	e28de030 	add	lr, sp, #48	; 0x30
    4ba0:	e08e7106 	add	r7, lr, r6, lsl #2
    4ba4:	e0896186 	add	r6, r9, r6, lsl #3
    4ba8:	e5370004 	ldr	r0, [r7, #-4]!
    4bac:	eb0007af 	bl	6a70 <__aeabi_i2d>
    4bb0:	e1a02004 	mov	r2, r4
    4bb4:	e1a03005 	mov	r3, r5
    4bb8:	eb0007e3 	bl	6b4c <__aeabi_dmul>
    4bbc:	e3a02000 	mov	r2, #0
    4bc0:	e9260003 	stmdb	r6!, {r0, r1}
    4bc4:	e59f34ac 	ldr	r3, [pc, #1196]	; 5078 <__kernel_rem_pio2+0xb80>
    4bc8:	e1a00004 	mov	r0, r4
    4bcc:	e1a01005 	mov	r1, r5
    4bd0:	eb0007dd 	bl	6b4c <__aeabi_dmul>
    4bd4:	e1560009 	cmp	r6, r9
    4bd8:	e1a04000 	mov	r4, r0
    4bdc:	e1a05001 	mov	r5, r1
    4be0:	1afffff0 	bne	4ba8 <__kernel_rem_pio2+0x6b0>
    4be4:	e59da004 	ldr	r10, [sp, #4]
    4be8:	e59db020 	ldr	r11, [sp, #32]
    4bec:	e58da008 	str	r10, [sp, #8]
    4bf0:	e3a08000 	mov	r8, #0
    4bf4:	e35b0000 	cmp	r11, #0
    4bf8:	b3a04000 	movlt	r4, #0
    4bfc:	b3a05000 	movlt	r5, #0
    4c00:	ba000015 	blt	4c5c <__kernel_rem_pio2+0x764>
    4c04:	e59d4008 	ldr	r4, [sp, #8]
    4c08:	e59fa47c 	ldr	r10, [pc, #1148]	; 508c <__kernel_rem_pio2+0xb94>
    4c0c:	e0897184 	add	r7, r9, r4, lsl #3
    4c10:	e3a05000 	mov	r5, #0
    4c14:	e3a04000 	mov	r4, #0
    4c18:	e3a06000 	mov	r6, #0
    4c1c:	ea000001 	b	4c28 <__kernel_rem_pio2+0x730>
    4c20:	e1560008 	cmp	r6, r8
    4c24:	ca00000c 	bgt	4c5c <__kernel_rem_pio2+0x764>
    4c28:	e8b7000c 	ldm	r7!, {r2, r3}
    4c2c:	e8ba0003 	ldm	r10!, {r0, r1}
    4c30:	eb0007c5 	bl	6b4c <__aeabi_dmul>
    4c34:	e1a02000 	mov	r2, r0
    4c38:	e1a03001 	mov	r3, r1
    4c3c:	e1a00004 	mov	r0, r4
    4c40:	e1a01005 	mov	r1, r5
    4c44:	eb0006bc 	bl	673c <__adddf3>
    4c48:	e2866001 	add	r6, r6, #1
    4c4c:	e15b0006 	cmp	r11, r6
    4c50:	e1a04000 	mov	r4, r0
    4c54:	e1a05001 	mov	r5, r1
    4c58:	aafffff0 	bge	4c20 <__kernel_rem_pio2+0x728>
    4c5c:	e59dc008 	ldr	r12, [sp, #8]
    4c60:	e28d0e26 	add	r0, sp, #608	; 0x260
    4c64:	e24cc001 	sub	r12, r12, #1
    4c68:	e0803188 	add	r3, r0, r8, lsl #3
    4c6c:	e37c0001 	cmn	r12, #1
    4c70:	e58dc008 	str	r12, [sp, #8]
    4c74:	e5034140 	str	r4, [r3, #-320]	; 0xfffffec0
    4c78:	e503513c 	str	r5, [r3, #-316]	; 0xfffffec4
    4c7c:	e2888001 	add	r8, r8, #1
    4c80:	1affffdb 	bne	4bf4 <__kernel_rem_pio2+0x6fc>
    4c84:	e59dc288 	ldr	r12, [sp, #648]	; 0x288
    4c88:	e35c0003 	cmp	r12, #3
    4c8c:	979ff10c 	ldrls	pc, [pc, r12, lsl #2]
    4c90:	ea000015 	b	4cec <__kernel_rem_pio2+0x7f4>
    4c94:	00004f74 	.word	0x00004f74
    4c98:	00004e90 	.word	0x00004e90
    4c9c:	00004e90 	.word	0x00004e90
    4ca0:	00004d00 	.word	0x00004d00
    4ca4:	e59d000c 	ldr	r0, [sp, #12]
    4ca8:	e3a0c000 	mov	r12, #0
    4cac:	e3500000 	cmp	r0, #0
    4cb0:	e1a0400c 	mov	r4, r12
    4cb4:	0a000068 	beq	4e5c <__kernel_rem_pio2+0x964>
    4cb8:	e59d2124 	ldr	r2, [sp, #292]	; 0x124
    4cbc:	e59d001c 	ldr	r0, [sp, #28]
    4cc0:	e59d1120 	ldr	r1, [sp, #288]	; 0x120
    4cc4:	e2822102 	add	r2, r2, #-2147483648	; 0x80000000
    4cc8:	e59d312c 	ldr	r3, [sp, #300]	; 0x12c
    4ccc:	e8800006 	stm	r0, {r1, r2}
    4cd0:	e59d2128 	ldr	r2, [sp, #296]	; 0x128
    4cd4:	e2833102 	add	r3, r3, #-2147483648	; 0x80000000
    4cd8:	e2844102 	add	r4, r4, #-2147483648	; 0x80000000
    4cdc:	e5802008 	str	r2, [r0, #8]
    4ce0:	e580300c 	str	r3, [r0, #12]
    4ce4:	e580c010 	str	r12, [r0, #16]
    4ce8:	e5804014 	str	r4, [r0, #20]
    4cec:	e59d4010 	ldr	r4, [sp, #16]
    4cf0:	e2040007 	and	r0, r4, #7
    4cf4:	e28ddf99 	add	sp, sp, #612	; 0x264
    4cf8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    4cfc:	e12fff1e 	bx	lr
    4d00:	e59d4004 	ldr	r4, [sp, #4]
    4d04:	e3540000 	cmp	r4, #0
    4d08:	daffffe5 	ble	4ca4 <__kernel_rem_pio2+0x7ac>
    4d0c:	e59d4004 	ldr	r4, [sp, #4]
    4d10:	e28dbe12 	add	r11, sp, #288	; 0x120
    4d14:	e08ba184 	add	r10, r11, r4, lsl #3
    4d18:	e58da008 	str	r10, [sp, #8]
    4d1c:	e58da014 	str	r10, [sp, #20]
    4d20:	e93a0300 	ldmdb	r10!, {r8, r9}
    4d24:	e28a7008 	add	r7, r10, #8
    4d28:	e89700c0 	ldm	r7, {r6, r7}
    4d2c:	e1a00008 	mov	r0, r8
    4d30:	e1a02006 	mov	r2, r6
    4d34:	e1a03007 	mov	r3, r7
    4d38:	e1a01009 	mov	r1, r9
    4d3c:	eb00067e 	bl	673c <__adddf3>
    4d40:	e1a04000 	mov	r4, r0
    4d44:	e1a05001 	mov	r5, r1
    4d48:	e1a02004 	mov	r2, r4
    4d4c:	e1a03005 	mov	r3, r5
    4d50:	e1a00008 	mov	r0, r8
    4d54:	e1a01009 	mov	r1, r9
    4d58:	eb000676 	bl	6738 <__aeabi_dsub>
    4d5c:	e1a02000 	mov	r2, r0
    4d60:	e1a03001 	mov	r3, r1
    4d64:	e1a00006 	mov	r0, r6
    4d68:	e1a01007 	mov	r1, r7
    4d6c:	eb000672 	bl	673c <__adddf3>
    4d70:	e59dc008 	ldr	r12, [sp, #8]
    4d74:	e58a0008 	str	r0, [r10, #8]
    4d78:	e58a100c 	str	r1, [r10, #12]
    4d7c:	e92c0030 	stmdb	r12!, {r4, r5}
    4d80:	e15a000b 	cmp	r10, r11
    4d84:	e58dc008 	str	r12, [sp, #8]
    4d88:	1affffe4 	bne	4d20 <__kernel_rem_pio2+0x828>
    4d8c:	e59d4004 	ldr	r4, [sp, #4]
    4d90:	e3540001 	cmp	r4, #1
    4d94:	e59da014 	ldr	r10, [sp, #20]
    4d98:	daffffc1 	ble	4ca4 <__kernel_rem_pio2+0x7ac>
    4d9c:	e28bc008 	add	r12, r11, #8
    4da0:	e58dc008 	str	r12, [sp, #8]
    4da4:	e1a0c00a 	mov	r12, r10
    4da8:	e93a0300 	ldmdb	r10!, {r8, r9}
    4dac:	e28a7008 	add	r7, r10, #8
    4db0:	e89700c0 	ldm	r7, {r6, r7}
    4db4:	e1a00008 	mov	r0, r8
    4db8:	e1a02006 	mov	r2, r6
    4dbc:	e1a03007 	mov	r3, r7
    4dc0:	e1a01009 	mov	r1, r9
    4dc4:	e58dc000 	str	r12, [sp]
    4dc8:	eb00065b 	bl	673c <__adddf3>
    4dcc:	e1a04000 	mov	r4, r0
    4dd0:	e1a05001 	mov	r5, r1
    4dd4:	e1a02004 	mov	r2, r4
    4dd8:	e1a03005 	mov	r3, r5
    4ddc:	e1a00008 	mov	r0, r8
    4de0:	e1a01009 	mov	r1, r9
    4de4:	eb000653 	bl	6738 <__aeabi_dsub>
    4de8:	e1a02000 	mov	r2, r0
    4dec:	e1a03001 	mov	r3, r1
    4df0:	e1a00006 	mov	r0, r6
    4df4:	e1a01007 	mov	r1, r7
    4df8:	eb00064f 	bl	673c <__adddf3>
    4dfc:	e59de008 	ldr	lr, [sp, #8]
    4e00:	e59dc000 	ldr	r12, [sp]
    4e04:	e15a000e 	cmp	r10, lr
    4e08:	e58a0008 	str	r0, [r10, #8]
    4e0c:	e58a100c 	str	r1, [r10, #12]
    4e10:	e92c0030 	stmdb	r12!, {r4, r5}
    4e14:	1affffe3 	bne	4da8 <__kernel_rem_pio2+0x8b0>
    4e18:	e59d4004 	ldr	r4, [sp, #4]
    4e1c:	e3a0c000 	mov	r12, #0
    4e20:	e2845001 	add	r5, r4, #1
    4e24:	e08b5185 	add	r5, r11, r5, lsl #3
    4e28:	e1a0400c 	mov	r4, r12
    4e2c:	e28bb010 	add	r11, r11, #16
    4e30:	e1a0000c 	mov	r0, r12
    4e34:	e1a01004 	mov	r1, r4
    4e38:	e935000c 	ldmdb	r5!, {r2, r3}
    4e3c:	eb00063e 	bl	673c <__adddf3>
    4e40:	e155000b 	cmp	r5, r11
    4e44:	e1a0c000 	mov	r12, r0
    4e48:	e1a04001 	mov	r4, r1
    4e4c:	1afffff7 	bne	4e30 <__kernel_rem_pio2+0x938>
    4e50:	e59d000c 	ldr	r0, [sp, #12]
    4e54:	e3500000 	cmp	r0, #0
    4e58:	1affff96 	bne	4cb8 <__kernel_rem_pio2+0x7c0>
    4e5c:	e1a03004 	mov	r3, r4
    4e60:	e28d1e12 	add	r1, sp, #288	; 0x120
    4e64:	e8910003 	ldm	r1, {r0, r1}
    4e68:	e59d401c 	ldr	r4, [sp, #28]
    4e6c:	e8840003 	stm	r4, {r0, r1}
    4e70:	e28d1f4a 	add	r1, sp, #296	; 0x128
    4e74:	e8910003 	ldm	r1, {r0, r1}
    4e78:	e1a0200c 	mov	r2, r12
    4e7c:	e5840008 	str	r0, [r4, #8]
    4e80:	e584100c 	str	r1, [r4, #12]
    4e84:	e5842010 	str	r2, [r4, #16]
    4e88:	e5843014 	str	r3, [r4, #20]
    4e8c:	eaffff96 	b	4cec <__kernel_rem_pio2+0x7f4>
    4e90:	e59dc004 	ldr	r12, [sp, #4]
    4e94:	e35c0000 	cmp	r12, #0
    4e98:	b3a0e000 	movlt	lr, #0
    4e9c:	b1a0c00e 	movlt	r12, lr
    4ea0:	ba00000d 	blt	4edc <__kernel_rem_pio2+0x9e4>
    4ea4:	e59dc004 	ldr	r12, [sp, #4]
    4ea8:	e28d5e12 	add	r5, sp, #288	; 0x120
    4eac:	e28c4001 	add	r4, r12, #1
    4eb0:	e3a0e000 	mov	lr, #0
    4eb4:	e0854184 	add	r4, r5, r4, lsl #3
    4eb8:	e1a0c00e 	mov	r12, lr
    4ebc:	e1a0000e 	mov	r0, lr
    4ec0:	e1a0100c 	mov	r1, r12
    4ec4:	e934000c 	ldmdb	r4!, {r2, r3}
    4ec8:	eb00061b 	bl	673c <__adddf3>
    4ecc:	e1540005 	cmp	r4, r5
    4ed0:	e1a0e000 	mov	lr, r0
    4ed4:	e1a0c001 	mov	r12, r1
    4ed8:	1afffff7 	bne	4ebc <__kernel_rem_pio2+0x9c4>
    4edc:	e59d400c 	ldr	r4, [sp, #12]
    4ee0:	e3540000 	cmp	r4, #0
    4ee4:	128c3102 	addne	r3, r12, #-2147483648	; 0x80000000
    4ee8:	01a0300c 	moveq	r3, r12
    4eec:	e1a01003 	mov	r1, r3
    4ef0:	e1a0300c 	mov	r3, r12
    4ef4:	e59dc01c 	ldr	r12, [sp, #28]
    4ef8:	e1a0000e 	mov	r0, lr
    4efc:	e88c0003 	stm	r12, {r0, r1}
    4f00:	e1a0200e 	mov	r2, lr
    4f04:	e28d1e12 	add	r1, sp, #288	; 0x120
    4f08:	e8910003 	ldm	r1, {r0, r1}
    4f0c:	eb000609 	bl	6738 <__aeabi_dsub>
    4f10:	e59d4004 	ldr	r4, [sp, #4]
    4f14:	e3540000 	cmp	r4, #0
    4f18:	e1a05000 	mov	r5, r0
    4f1c:	e1a0c001 	mov	r12, r1
    4f20:	da00000a 	ble	4f50 <__kernel_rem_pio2+0xa58>
    4f24:	e59de004 	ldr	lr, [sp, #4]
    4f28:	e28d4f4a 	add	r4, sp, #296	; 0x128
    4f2c:	e084618e 	add	r6, r4, lr, lsl #3
    4f30:	e1a00005 	mov	r0, r5
    4f34:	e1a0100c 	mov	r1, r12
    4f38:	e8b4000c 	ldm	r4!, {r2, r3}
    4f3c:	eb0005fe 	bl	673c <__adddf3>
    4f40:	e1540006 	cmp	r4, r6
    4f44:	e1a05000 	mov	r5, r0
    4f48:	e1a0c001 	mov	r12, r1
    4f4c:	1afffff7 	bne	4f30 <__kernel_rem_pio2+0xa38>
    4f50:	e59d400c 	ldr	r4, [sp, #12]
    4f54:	e3540000 	cmp	r4, #0
    4f58:	128cc102 	addne	r12, r12, #-2147483648	; 0x80000000
    4f5c:	e1a0300c 	mov	r3, r12
    4f60:	e59dc01c 	ldr	r12, [sp, #28]
    4f64:	e1a02005 	mov	r2, r5
    4f68:	e58c2008 	str	r2, [r12, #8]
    4f6c:	e58c300c 	str	r3, [r12, #12]
    4f70:	eaffff5d 	b	4cec <__kernel_rem_pio2+0x7f4>
    4f74:	e59d4004 	ldr	r4, [sp, #4]
    4f78:	e3540000 	cmp	r4, #0
    4f7c:	ba000038 	blt	5064 <__kernel_rem_pio2+0xb6c>
    4f80:	e2846001 	add	r6, r4, #1
    4f84:	e28d5e12 	add	r5, sp, #288	; 0x120
    4f88:	e3a04000 	mov	r4, #0
    4f8c:	e0856186 	add	r6, r5, r6, lsl #3
    4f90:	e1a0c004 	mov	r12, r4
    4f94:	e1a00004 	mov	r0, r4
    4f98:	e1a0100c 	mov	r1, r12
    4f9c:	e936000c 	ldmdb	r6!, {r2, r3}
    4fa0:	eb0005e5 	bl	673c <__adddf3>
    4fa4:	e1560005 	cmp	r6, r5
    4fa8:	e1a04000 	mov	r4, r0
    4fac:	e1a0c001 	mov	r12, r1
    4fb0:	1afffff7 	bne	4f94 <__kernel_rem_pio2+0xa9c>
    4fb4:	e59d000c 	ldr	r0, [sp, #12]
    4fb8:	e3500000 	cmp	r0, #0
    4fbc:	e1a02004 	mov	r2, r4
    4fc0:	128cc102 	addne	r12, r12, #-2147483648	; 0x80000000
    4fc4:	e59d401c 	ldr	r4, [sp, #28]
    4fc8:	e1a0300c 	mov	r3, r12
    4fcc:	e884000c 	stm	r4, {r2, r3}
    4fd0:	eaffff45 	b	4cec <__kernel_rem_pio2+0x7f4>
    4fd4:	e1a03100 	lsl	r3, r0, #2
    4fd8:	e28dce26 	add	r12, sp, #608	; 0x260
    4fdc:	e08c2003 	add	r2, r12, r3
    4fe0:	e59d4018 	ldr	r4, [sp, #24]
    4fe4:	e5122230 	ldr	r2, [r2, #-560]	; 0xfffffdd0
    4fe8:	e2444018 	sub	r4, r4, #24
    4fec:	e3520000 	cmp	r2, #0
    4ff0:	e58d8010 	str	r8, [sp, #16]
    4ff4:	e58d500c 	str	r5, [sp, #12]
    4ff8:	e58d4018 	str	r4, [sp, #24]
    4ffc:	1a000016 	bne	505c <__kernel_rem_pio2+0xb64>
    5000:	e28dc030 	add	r12, sp, #48	; 0x30
    5004:	e58d0004 	str	r0, [sp, #4]
    5008:	e08c3003 	add	r3, r12, r3
    500c:	e1a02000 	mov	r2, r0
    5010:	e1a01004 	mov	r1, r4
    5014:	e5330004 	ldr	r0, [r3, #-4]!
    5018:	e3500000 	cmp	r0, #0
    501c:	e2422001 	sub	r2, r2, #1
    5020:	e2411018 	sub	r1, r1, #24
    5024:	0afffffa 	beq	5014 <__kernel_rem_pio2+0xb1c>
    5028:	e58d2004 	str	r2, [sp, #4]
    502c:	e58d1018 	str	r1, [sp, #24]
    5030:	eafffece 	b	4b70 <__kernel_rem_pio2+0x678>
    5034:	e3a03001 	mov	r3, #1
    5038:	eafffe2a 	b	48e8 <__kernel_rem_pio2+0x3f0>
    503c:	e1a00004 	mov	r0, r4
    5040:	e1a01005 	mov	r1, r5
    5044:	eb000838 	bl	712c <__aeabi_d2iz>
    5048:	e59dc004 	ldr	r12, [sp, #4]
    504c:	e28dee26 	add	lr, sp, #608	; 0x260
    5050:	e08e310c 	add	r3, lr, r12, lsl #2
    5054:	e5030230 	str	r0, [r3, #-560]	; 0xfffffdd0
    5058:	eafffec4 	b	4b70 <__kernel_rem_pio2+0x678>
    505c:	e58d0004 	str	r0, [sp, #4]
    5060:	eafffec2 	b	4b70 <__kernel_rem_pio2+0x678>
    5064:	e3a04000 	mov	r4, #0
    5068:	e1a0c004 	mov	r12, r4
    506c:	eaffffd0 	b	4fb4 <__kernel_rem_pio2+0xabc>
    5070:	2aaaaaab 	.word	0x2aaaaaab
    5074:	0000a608 	.word	0x0000a608
    5078:	3e700000 	.word	0x3e700000
    507c:	41700000 	.word	0x41700000
    5080:	40200000 	.word	0x40200000
    5084:	3ff00000 	.word	0x3ff00000
    5088:	3fe00000 	.word	0x3fe00000
    508c:	0000a618 	.word	0x0000a618

00005090 <__kernel_sin>:
    5090:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    5094:	e3c1c102 	bic	r12, r1, #-2147483648	; 0x80000000
    5098:	e35c05f9 	cmp	r12, #1044381696	; 0x3e400000
    509c:	e24dd014 	sub	sp, sp, #20
    50a0:	e1a04000 	mov	r4, r0
    50a4:	e1a05001 	mov	r5, r1
    50a8:	e1a06000 	mov	r6, r0
    50ac:	e1a07001 	mov	r7, r1
    50b0:	e1a08002 	mov	r8, r2
    50b4:	e1a09003 	mov	r9, r3
    50b8:	aa000002 	bge	50c8 <__kernel_sin+0x38>
    50bc:	eb00081a 	bl	712c <__aeabi_d2iz>
    50c0:	e3500000 	cmp	r0, #0
    50c4:	0a000052 	beq	5214 <__kernel_sin+0x184>
    50c8:	e1a02004 	mov	r2, r4
    50cc:	e1a03005 	mov	r3, r5
    50d0:	e1a00004 	mov	r0, r4
    50d4:	e1a01005 	mov	r1, r5
    50d8:	eb00069b 	bl	6b4c <__aeabi_dmul>
    50dc:	e1a02004 	mov	r2, r4
    50e0:	e1a03005 	mov	r3, r5
    50e4:	e1a06000 	mov	r6, r0
    50e8:	e1a07001 	mov	r7, r1
    50ec:	eb000696 	bl	6b4c <__aeabi_dmul>
    50f0:	e28f3d06 	add	r3, pc, #384	; 0x180
    50f4:	e893000c 	ldm	r3, {r2, r3}
    50f8:	e1a0a000 	mov	r10, r0
    50fc:	e1a0b001 	mov	r11, r1
    5100:	e1a00006 	mov	r0, r6
    5104:	e1a01007 	mov	r1, r7
    5108:	eb00068f 	bl	6b4c <__aeabi_dmul>
    510c:	e28f3f5b 	add	r3, pc, #364	; 0x16c
    5110:	e893000c 	ldm	r3, {r2, r3}
    5114:	eb000587 	bl	6738 <__aeabi_dsub>
    5118:	e1a02006 	mov	r2, r6
    511c:	e1a03007 	mov	r3, r7
    5120:	eb000689 	bl	6b4c <__aeabi_dmul>
    5124:	e28f3f57 	add	r3, pc, #348	; 0x15c
    5128:	e893000c 	ldm	r3, {r2, r3}
    512c:	eb000582 	bl	673c <__adddf3>
    5130:	e1a02006 	mov	r2, r6
    5134:	e1a03007 	mov	r3, r7
    5138:	eb000683 	bl	6b4c <__aeabi_dmul>
    513c:	e28f3f53 	add	r3, pc, #332	; 0x14c
    5140:	e893000c 	ldm	r3, {r2, r3}
    5144:	eb00057b 	bl	6738 <__aeabi_dsub>
    5148:	e1a02006 	mov	r2, r6
    514c:	e1a03007 	mov	r3, r7
    5150:	eb00067d 	bl	6b4c <__aeabi_dmul>
    5154:	e28f3f4f 	add	r3, pc, #316	; 0x13c
    5158:	e893000c 	ldm	r3, {r2, r3}
    515c:	eb000576 	bl	673c <__adddf3>
    5160:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
    5164:	e3530000 	cmp	r3, #0
    5168:	e88d0003 	stm	sp, {r0, r1}
    516c:	0a00002d 	beq	5228 <__kernel_sin+0x198>
    5170:	e3a02000 	mov	r2, #0
    5174:	e59f312c 	ldr	r3, [pc, #300]	; 52a8 <__kernel_sin+0x218>
    5178:	e1a00008 	mov	r0, r8
    517c:	e1a01009 	mov	r1, r9
    5180:	eb000671 	bl	6b4c <__aeabi_dmul>
    5184:	e89d000c 	ldm	sp, {r2, r3}
    5188:	e58d0008 	str	r0, [sp, #8]
    518c:	e58d100c 	str	r1, [sp, #12]
    5190:	e1a0000a 	mov	r0, r10
    5194:	e1a0100b 	mov	r1, r11
    5198:	eb00066b 	bl	6b4c <__aeabi_dmul>
    519c:	e1a02000 	mov	r2, r0
    51a0:	e1a03001 	mov	r3, r1
    51a4:	e28d1008 	add	r1, sp, #8
    51a8:	e8910003 	ldm	r1, {r0, r1}
    51ac:	eb000561 	bl	6738 <__aeabi_dsub>
    51b0:	e1a02006 	mov	r2, r6
    51b4:	e1a03007 	mov	r3, r7
    51b8:	eb000663 	bl	6b4c <__aeabi_dmul>
    51bc:	e1a02008 	mov	r2, r8
    51c0:	e1a03009 	mov	r3, r9
    51c4:	eb00055b 	bl	6738 <__aeabi_dsub>
    51c8:	e28f30d0 	add	r3, pc, #208	; 0xd0
    51cc:	e893000c 	ldm	r3, {r2, r3}
    51d0:	e1a06000 	mov	r6, r0
    51d4:	e1a07001 	mov	r7, r1
    51d8:	e1a0000a 	mov	r0, r10
    51dc:	e1a0100b 	mov	r1, r11
    51e0:	eb000659 	bl	6b4c <__aeabi_dmul>
    51e4:	e1a02000 	mov	r2, r0
    51e8:	e1a03001 	mov	r3, r1
    51ec:	e1a00006 	mov	r0, r6
    51f0:	e1a01007 	mov	r1, r7
    51f4:	eb000550 	bl	673c <__adddf3>
    51f8:	e1a02000 	mov	r2, r0
    51fc:	e1a03001 	mov	r3, r1
    5200:	e1a00004 	mov	r0, r4
    5204:	e1a01005 	mov	r1, r5
    5208:	eb00054a 	bl	6738 <__aeabi_dsub>
    520c:	e1a04000 	mov	r4, r0
    5210:	e1a05001 	mov	r5, r1
    5214:	e1a00004 	mov	r0, r4
    5218:	e1a01005 	mov	r1, r5
    521c:	e28dd014 	add	sp, sp, #20
    5220:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    5224:	e12fff1e 	bx	lr
    5228:	e1a02000 	mov	r2, r0
    522c:	e1a03001 	mov	r3, r1
    5230:	e1a00006 	mov	r0, r6
    5234:	e1a01007 	mov	r1, r7
    5238:	eb000643 	bl	6b4c <__aeabi_dmul>
    523c:	e28f305c 	add	r3, pc, #92	; 0x5c
    5240:	e893000c 	ldm	r3, {r2, r3}
    5244:	eb00053b 	bl	6738 <__aeabi_dsub>
    5248:	e1a0200a 	mov	r2, r10
    524c:	e1a0300b 	mov	r3, r11
    5250:	eb00063d 	bl	6b4c <__aeabi_dmul>
    5254:	e1a02000 	mov	r2, r0
    5258:	e1a03001 	mov	r3, r1
    525c:	e1a00004 	mov	r0, r4
    5260:	e1a01005 	mov	r1, r5
    5264:	eb000534 	bl	673c <__adddf3>
    5268:	e1a04000 	mov	r4, r0
    526c:	e1a05001 	mov	r5, r1
    5270:	eaffffe7 	b	5214 <__kernel_sin+0x184>
    5274:	e1a00000 	nop			; (mov r0, r0)
    5278:	5acfd57c 	.word	0x5acfd57c
    527c:	3de5d93a 	.word	0x3de5d93a
    5280:	8a2b9ceb 	.word	0x8a2b9ceb
    5284:	3e5ae5e6 	.word	0x3e5ae5e6
    5288:	57b1fe7d 	.word	0x57b1fe7d
    528c:	3ec71de3 	.word	0x3ec71de3
    5290:	19c161d5 	.word	0x19c161d5
    5294:	3f2a01a0 	.word	0x3f2a01a0
    5298:	1110f8a6 	.word	0x1110f8a6
    529c:	3f811111 	.word	0x3f811111
    52a0:	55555549 	.word	0x55555549
    52a4:	3fc55555 	.word	0x3fc55555
    52a8:	3fe00000 	.word	0x3fe00000
    52ac:	e1a00000 	nop			; (mov r0, r0)

000052b0 <__kernel_cosf>:
    52b0:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, r10, lr}
    52b4:	e3c06102 	bic	r6, r0, #-2147483648	; 0x80000000
    52b8:	e3560432 	cmp	r6, #838860800	; 0x32000000
    52bc:	e1a05000 	mov	r5, r0
    52c0:	e1a07001 	mov	r7, r1
    52c4:	aa000032 	bge	5394 <__kernel_cosf+0xe4>
    52c8:	eb00095c 	bl	7840 <__aeabi_f2iz>
    52cc:	e3500000 	cmp	r0, #0
    52d0:	0a00006f 	beq	5494 <__kernel_cosf+0x1e4>
    52d4:	e1a01005 	mov	r1, r5
    52d8:	e1a00005 	mov	r0, r5
    52dc:	eb000854 	bl	7434 <__aeabi_fmul>
    52e0:	e59f11b4 	ldr	r1, [pc, #436]	; 549c <__kernel_cosf+0x1ec>
    52e4:	e1a04000 	mov	r4, r0
    52e8:	eb000851 	bl	7434 <__aeabi_fmul>
    52ec:	e59f11ac 	ldr	r1, [pc, #428]	; 54a0 <__kernel_cosf+0x1f0>
    52f0:	eb0007a7 	bl	7194 <__addsf3>
    52f4:	e1a01004 	mov	r1, r4
    52f8:	eb00084d 	bl	7434 <__aeabi_fmul>
    52fc:	e59f11a0 	ldr	r1, [pc, #416]	; 54a4 <__kernel_cosf+0x1f4>
    5300:	eb0007a2 	bl	7190 <__aeabi_fsub>
    5304:	e1a01004 	mov	r1, r4
    5308:	eb000849 	bl	7434 <__aeabi_fmul>
    530c:	e59f1194 	ldr	r1, [pc, #404]	; 54a8 <__kernel_cosf+0x1f8>
    5310:	eb00079f 	bl	7194 <__addsf3>
    5314:	e1a01004 	mov	r1, r4
    5318:	eb000845 	bl	7434 <__aeabi_fmul>
    531c:	e59f1188 	ldr	r1, [pc, #392]	; 54ac <__kernel_cosf+0x1fc>
    5320:	eb00079a 	bl	7190 <__aeabi_fsub>
    5324:	e1a01004 	mov	r1, r4
    5328:	eb000841 	bl	7434 <__aeabi_fmul>
    532c:	e59f117c 	ldr	r1, [pc, #380]	; 54b0 <__kernel_cosf+0x200>
    5330:	eb000797 	bl	7194 <__addsf3>
    5334:	e1a01004 	mov	r1, r4
    5338:	eb00083d 	bl	7434 <__aeabi_fmul>
    533c:	e1a08000 	mov	r8, r0
    5340:	e1a00004 	mov	r0, r4
    5344:	e3a0143f 	mov	r1, #1056964608	; 0x3f000000
    5348:	eb000839 	bl	7434 <__aeabi_fmul>
    534c:	e1a01008 	mov	r1, r8
    5350:	e1a06000 	mov	r6, r0
    5354:	e1a00004 	mov	r0, r4
    5358:	eb000835 	bl	7434 <__aeabi_fmul>
    535c:	e1a01007 	mov	r1, r7
    5360:	e1a04000 	mov	r4, r0
    5364:	e1a00005 	mov	r0, r5
    5368:	eb000831 	bl	7434 <__aeabi_fmul>
    536c:	e1a01000 	mov	r1, r0
    5370:	e1a00004 	mov	r0, r4
    5374:	eb000785 	bl	7190 <__aeabi_fsub>
    5378:	e1a01000 	mov	r1, r0
    537c:	e1a00006 	mov	r0, r6
    5380:	eb000782 	bl	7190 <__aeabi_fsub>
    5384:	e1a01000 	mov	r1, r0
    5388:	e3a005fe 	mov	r0, #1065353216	; 0x3f800000
    538c:	eb00077f 	bl	7190 <__aeabi_fsub>
    5390:	ea00003a 	b	5480 <__kernel_cosf+0x1d0>
    5394:	e1a01000 	mov	r1, r0
    5398:	eb000825 	bl	7434 <__aeabi_fmul>
    539c:	e59f10f8 	ldr	r1, [pc, #248]	; 549c <__kernel_cosf+0x1ec>
    53a0:	e1a04000 	mov	r4, r0
    53a4:	eb000822 	bl	7434 <__aeabi_fmul>
    53a8:	e59f10f0 	ldr	r1, [pc, #240]	; 54a0 <__kernel_cosf+0x1f0>
    53ac:	eb000778 	bl	7194 <__addsf3>
    53b0:	e1a01004 	mov	r1, r4
    53b4:	eb00081e 	bl	7434 <__aeabi_fmul>
    53b8:	e59f10e4 	ldr	r1, [pc, #228]	; 54a4 <__kernel_cosf+0x1f4>
    53bc:	eb000773 	bl	7190 <__aeabi_fsub>
    53c0:	e1a01004 	mov	r1, r4
    53c4:	eb00081a 	bl	7434 <__aeabi_fmul>
    53c8:	e59f10d8 	ldr	r1, [pc, #216]	; 54a8 <__kernel_cosf+0x1f8>
    53cc:	eb000770 	bl	7194 <__addsf3>
    53d0:	e1a01004 	mov	r1, r4
    53d4:	eb000816 	bl	7434 <__aeabi_fmul>
    53d8:	e59f10cc 	ldr	r1, [pc, #204]	; 54ac <__kernel_cosf+0x1fc>
    53dc:	eb00076b 	bl	7190 <__aeabi_fsub>
    53e0:	e1a01004 	mov	r1, r4
    53e4:	eb000812 	bl	7434 <__aeabi_fmul>
    53e8:	e59f10c0 	ldr	r1, [pc, #192]	; 54b0 <__kernel_cosf+0x200>
    53ec:	eb000768 	bl	7194 <__addsf3>
    53f0:	e1a01004 	mov	r1, r4
    53f4:	eb00080e 	bl	7434 <__aeabi_fmul>
    53f8:	e59f30b4 	ldr	r3, [pc, #180]	; 54b4 <__kernel_cosf+0x204>
    53fc:	e1560003 	cmp	r6, r3
    5400:	e1a08000 	mov	r8, r0
    5404:	daffffcd 	ble	5340 <__kernel_cosf+0x90>
    5408:	e59f30a8 	ldr	r3, [pc, #168]	; 54b8 <__kernel_cosf+0x208>
    540c:	e1560003 	cmp	r6, r3
    5410:	ca00001c 	bgt	5488 <__kernel_cosf+0x1d8>
    5414:	e28664ff 	add	r6, r6, #-16777216	; 0xff000000
    5418:	e3a005fe 	mov	r0, #1065353216	; 0x3f800000
    541c:	e1a01006 	mov	r1, r6
    5420:	eb00075a 	bl	7190 <__aeabi_fsub>
    5424:	e1a0a000 	mov	r10, r0
    5428:	e1a00004 	mov	r0, r4
    542c:	e3a0143f 	mov	r1, #1056964608	; 0x3f000000
    5430:	eb0007ff 	bl	7434 <__aeabi_fmul>
    5434:	e1a01006 	mov	r1, r6
    5438:	eb000754 	bl	7190 <__aeabi_fsub>
    543c:	e1a01008 	mov	r1, r8
    5440:	e1a06000 	mov	r6, r0
    5444:	e1a00004 	mov	r0, r4
    5448:	eb0007f9 	bl	7434 <__aeabi_fmul>
    544c:	e1a01007 	mov	r1, r7
    5450:	e1a04000 	mov	r4, r0
    5454:	e1a00005 	mov	r0, r5
    5458:	eb0007f5 	bl	7434 <__aeabi_fmul>
    545c:	e1a01000 	mov	r1, r0
    5460:	e1a00004 	mov	r0, r4
    5464:	eb000749 	bl	7190 <__aeabi_fsub>
    5468:	e1a01000 	mov	r1, r0
    546c:	e1a00006 	mov	r0, r6
    5470:	eb000746 	bl	7190 <__aeabi_fsub>
    5474:	e1a01000 	mov	r1, r0
    5478:	e1a0000a 	mov	r0, r10
    547c:	eb000743 	bl	7190 <__aeabi_fsub>
    5480:	e8bd45f8 	pop	{r3, r4, r5, r6, r7, r8, r10, lr}
    5484:	e12fff1e 	bx	lr
    5488:	e59fa02c 	ldr	r10, [pc, #44]	; 54bc <__kernel_cosf+0x20c>
    548c:	e59f602c 	ldr	r6, [pc, #44]	; 54c0 <__kernel_cosf+0x210>
    5490:	eaffffe4 	b	5428 <__kernel_cosf+0x178>
    5494:	e3a005fe 	mov	r0, #1065353216	; 0x3f800000
    5498:	eafffff8 	b	5480 <__kernel_cosf+0x1d0>
    549c:	ad47d74e 	.word	0xad47d74e
    54a0:	310f74f6 	.word	0x310f74f6
    54a4:	3493f27c 	.word	0x3493f27c
    54a8:	37d00d01 	.word	0x37d00d01
    54ac:	3ab60b61 	.word	0x3ab60b61
    54b0:	3d2aaaab 	.word	0x3d2aaaab
    54b4:	3e999999 	.word	0x3e999999
    54b8:	3f480000 	.word	0x3f480000
    54bc:	3f380000 	.word	0x3f380000
    54c0:	3e900000 	.word	0x3e900000

000054c4 <__kernel_rem_pio2f>:
    54c4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    54c8:	e24ddf5f 	sub	sp, sp, #380	; 0x17c
    54cc:	e58d302c 	str	r3, [sp, #44]	; 0x2c
    54d0:	e59d41a0 	ldr	r4, [sp, #416]	; 0x1a0
    54d4:	e59f393c 	ldr	r3, [pc, #2364]	; 5e18 <__kernel_rem_pio2f+0x954>
    54d8:	e7933104 	ldr	r3, [r3, r4, lsl #2]
    54dc:	e252c003 	subs	r12, r2, #3
    54e0:	4282c004 	addmi	r12, r2, #4
    54e4:	e58d3020 	str	r3, [sp, #32]
    54e8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
    54ec:	e1a0c1cc 	asr	r12, r12, #3
    54f0:	e2433001 	sub	r3, r3, #1
    54f4:	e1cccfcc 	bic	r12, r12, r12, asr #31
    54f8:	e59d4020 	ldr	r4, [sp, #32]
    54fc:	e58d300c 	str	r3, [sp, #12]
    5500:	e58dc030 	str	r12, [sp, #48]	; 0x30
    5504:	e1e0c00c 	mvn	r12, r12
    5508:	e082c18c 	add	r12, r2, r12, lsl #3
    550c:	e0933004 	adds	r3, r3, r4
    5510:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
    5514:	e59d400c 	ldr	r4, [sp, #12]
    5518:	e1a06000 	mov	r6, r0
    551c:	e58d1024 	str	r1, [sp, #36]	; 0x24
    5520:	e58dc01c 	str	r12, [sp, #28]
    5524:	e0647002 	rsb	r7, r4, r2
    5528:	4a00000e 	bmi	5568 <__kernel_rem_pio2f+0xa4>
    552c:	e59d41a4 	ldr	r4, [sp, #420]	; 0x1a4
    5530:	e0873003 	add	r3, r7, r3
    5534:	e084a107 	add	r10, r4, r7, lsl #2
    5538:	e2835001 	add	r5, r3, #1
    553c:	e3a08000 	mov	r8, #0
    5540:	e28d4088 	add	r4, sp, #136	; 0x88
    5544:	e3570000 	cmp	r7, #0
    5548:	b3a00000 	movlt	r0, #0
    554c:	a79a0008 	ldrge	r0, [r10, r8]
    5550:	ab000780 	blge	7358 <__aeabi_i2f>
    5554:	e2877001 	add	r7, r7, #1
    5558:	e1570005 	cmp	r7, r5
    555c:	e7840008 	str	r0, [r4, r8]
    5560:	e2888004 	add	r8, r8, #4
    5564:	1afffff6 	bne	5544 <__kernel_rem_pio2f+0x80>
    5568:	e59d2020 	ldr	r2, [sp, #32]
    556c:	e3520000 	cmp	r2, #0
    5570:	ba000215 	blt	5dcc <__kernel_rem_pio2f+0x908>
    5574:	e59d3020 	ldr	r3, [sp, #32]
    5578:	e59d402c 	ldr	r4, [sp, #44]	; 0x2c
    557c:	e1a07103 	lsl	r7, r3, #2
    5580:	e28def4a 	add	lr, sp, #296	; 0x128
    5584:	e58d7008 	str	r7, [sp, #8]
    5588:	e28d5f49 	add	r5, sp, #292	; 0x124
    558c:	e08e9007 	add	r9, lr, r7
    5590:	e1a0b104 	lsl	r11, r4, #2
    5594:	e59d200c 	ldr	r2, [sp, #12]
    5598:	e3520000 	cmp	r2, #0
    559c:	ba000103 	blt	59b0 <__kernel_rem_pio2f+0x4ec>
    55a0:	e28d3088 	add	r3, sp, #136	; 0x88
    55a4:	e083a104 	add	r10, r3, r4, lsl #2
    55a8:	e3a08000 	mov	r8, #0
    55ac:	e3a07000 	mov	r7, #0
    55b0:	e7960008 	ldr	r0, [r6, r8]
    55b4:	e53a1004 	ldr	r1, [r10, #-4]!
    55b8:	eb00079d 	bl	7434 <__aeabi_fmul>
    55bc:	e1a01000 	mov	r1, r0
    55c0:	e1a00007 	mov	r0, r7
    55c4:	eb0006f2 	bl	7194 <__addsf3>
    55c8:	e2888004 	add	r8, r8, #4
    55cc:	e158000b 	cmp	r8, r11
    55d0:	e1a07000 	mov	r7, r0
    55d4:	1afffff5 	bne	55b0 <__kernel_rem_pio2f+0xec>
    55d8:	e5a57004 	str	r7, [r5, #4]!
    55dc:	e1550009 	cmp	r5, r9
    55e0:	e2844001 	add	r4, r4, #1
    55e4:	1affffea 	bne	5594 <__kernel_rem_pio2f+0xd0>
    55e8:	e59d7008 	ldr	r7, [sp, #8]
    55ec:	e28d2038 	add	r2, sp, #56	; 0x38
    55f0:	e0822007 	add	r2, r2, r7
    55f4:	e58d2034 	str	r2, [sp, #52]	; 0x34
    55f8:	e59d8020 	ldr	r8, [sp, #32]
    55fc:	e1a04108 	lsl	r4, r8, #2
    5600:	e28def5e 	add	lr, sp, #376	; 0x178
    5604:	e08e3004 	add	r3, lr, r4
    5608:	e3580000 	cmp	r8, #0
    560c:	e58d4008 	str	r4, [sp, #8]
    5610:	e5139050 	ldr	r9, [r3, #-80]	; 0xffffffb0
    5614:	da000017 	ble	5678 <__kernel_rem_pio2f+0x1b4>
    5618:	e59d2008 	ldr	r2, [sp, #8]
    561c:	e28d4034 	add	r4, sp, #52	; 0x34
    5620:	e28d3f4a 	add	r3, sp, #296	; 0x128
    5624:	e0835002 	add	r5, r3, r2
    5628:	e0847002 	add	r7, r4, r2
    562c:	e3a015ee 	mov	r1, #998244352	; 0x3b800000
    5630:	e1a00009 	mov	r0, r9
    5634:	eb00077e 	bl	7434 <__aeabi_fmul>
    5638:	eb000880 	bl	7840 <__aeabi_f2iz>
    563c:	eb000745 	bl	7358 <__aeabi_i2f>
    5640:	e59f17d4 	ldr	r1, [pc, #2004]	; 5e1c <__kernel_rem_pio2f+0x958>
    5644:	e1a0a000 	mov	r10, r0
    5648:	eb000779 	bl	7434 <__aeabi_fmul>
    564c:	e1a01000 	mov	r1, r0
    5650:	e1a00009 	mov	r0, r9
    5654:	eb0006cd 	bl	7190 <__aeabi_fsub>
    5658:	eb000878 	bl	7840 <__aeabi_f2iz>
    565c:	e1a0100a 	mov	r1, r10
    5660:	e5a40004 	str	r0, [r4, #4]!
    5664:	e5350004 	ldr	r0, [r5, #-4]!
    5668:	eb0006c9 	bl	7194 <__addsf3>
    566c:	e1540007 	cmp	r4, r7
    5670:	e1a09000 	mov	r9, r0
    5674:	1affffec 	bne	562c <__kernel_rem_pio2f+0x168>
    5678:	e59d101c 	ldr	r1, [sp, #28]
    567c:	e1a00009 	mov	r0, r9
    5680:	eb00033e 	bl	6380 <scalbnf>
    5684:	e3a0143e 	mov	r1, #1040187392	; 0x3e000000
    5688:	e1a04000 	mov	r4, r0
    568c:	eb000768 	bl	7434 <__aeabi_fmul>
    5690:	eb000306 	bl	62b0 <floorf>
    5694:	e3a01441 	mov	r1, #1090519040	; 0x41000000
    5698:	eb000765 	bl	7434 <__aeabi_fmul>
    569c:	e1a01000 	mov	r1, r0
    56a0:	e1a00004 	mov	r0, r4
    56a4:	eb0006b9 	bl	7190 <__aeabi_fsub>
    56a8:	e1a04000 	mov	r4, r0
    56ac:	eb000863 	bl	7840 <__aeabi_f2iz>
    56b0:	e1a05000 	mov	r5, r0
    56b4:	eb000727 	bl	7358 <__aeabi_i2f>
    56b8:	e1a01000 	mov	r1, r0
    56bc:	e1a00004 	mov	r0, r4
    56c0:	eb0006b2 	bl	7190 <__aeabi_fsub>
    56c4:	e59d201c 	ldr	r2, [sp, #28]
    56c8:	e3520000 	cmp	r2, #0
    56cc:	e1a07000 	mov	r7, r0
    56d0:	da00009e 	ble	5950 <__kernel_rem_pio2f+0x48c>
    56d4:	e28d3f5e 	add	r3, sp, #376	; 0x178
    56d8:	e2482001 	sub	r2, r8, #1
    56dc:	e0832102 	add	r2, r3, r2, lsl #2
    56e0:	e59d401c 	ldr	r4, [sp, #28]
    56e4:	e5120140 	ldr	r0, [r2, #-320]	; 0xfffffec0
    56e8:	e2643008 	rsb	r3, r4, #8
    56ec:	e1a01350 	asr	r1, r0, r3
    56f0:	e0403311 	sub	r3, r0, r1, lsl r3
    56f4:	e2644007 	rsb	r4, r4, #7
    56f8:	e1a04453 	asr	r4, r3, r4
    56fc:	e5023140 	str	r3, [r2, #-320]	; 0xfffffec0
    5700:	e0855001 	add	r5, r5, r1
    5704:	e3540000 	cmp	r4, #0
    5708:	da000024 	ble	57a0 <__kernel_rem_pio2f+0x2dc>
    570c:	e3580000 	cmp	r8, #0
    5710:	e2855001 	add	r5, r5, #1
    5714:	da0000a3 	ble	59a8 <__kernel_rem_pio2f+0x4e4>
    5718:	e59d2008 	ldr	r2, [sp, #8]
    571c:	e28d3038 	add	r3, sp, #56	; 0x38
    5720:	e0831002 	add	r1, r3, r2
    5724:	e3a09000 	mov	r9, #0
    5728:	ea000005 	b	5744 <__kernel_rem_pio2f+0x280>
    572c:	e3520000 	cmp	r2, #0
    5730:	12622c01 	rsbne	r2, r2, #256	; 0x100
    5734:	15032004 	strne	r2, [r3, #-4]
    5738:	13a09001 	movne	r9, #1
    573c:	e1530001 	cmp	r3, r1
    5740:	0a000007 	beq	5764 <__kernel_rem_pio2f+0x2a0>
    5744:	e3590000 	cmp	r9, #0
    5748:	e4932004 	ldr	r2, [r3], #4
    574c:	0afffff6 	beq	572c <__kernel_rem_pio2f+0x268>
    5750:	e26220ff 	rsb	r2, r2, #255	; 0xff
    5754:	e1530001 	cmp	r3, r1
    5758:	e5032004 	str	r2, [r3, #-4]
    575c:	e3a09001 	mov	r9, #1
    5760:	1afffff7 	bne	5744 <__kernel_rem_pio2f+0x280>
    5764:	e59d301c 	ldr	r3, [sp, #28]
    5768:	e3530000 	cmp	r3, #0
    576c:	da000009 	ble	5798 <__kernel_rem_pio2f+0x2d4>
    5770:	e3530001 	cmp	r3, #1
    5774:	0a00007b 	beq	5968 <__kernel_rem_pio2f+0x4a4>
    5778:	e3530002 	cmp	r3, #2
    577c:	1a000005 	bne	5798 <__kernel_rem_pio2f+0x2d4>
    5780:	e2483001 	sub	r3, r8, #1
    5784:	e28d0f5e 	add	r0, sp, #376	; 0x178
    5788:	e0803103 	add	r3, r0, r3, lsl #2
    578c:	e5132140 	ldr	r2, [r3, #-320]	; 0xfffffec0
    5790:	e202203f 	and	r2, r2, #63	; 0x3f
    5794:	e5032140 	str	r2, [r3, #-320]	; 0xfffffec0
    5798:	e3540002 	cmp	r4, #2
    579c:	0a00005d 	beq	5918 <__kernel_rem_pio2f+0x454>
    57a0:	e1a00007 	mov	r0, r7
    57a4:	e3a01000 	mov	r1, #0
    57a8:	eb000806 	bl	77c8 <__aeabi_fcmpeq>
    57ac:	e3500000 	cmp	r0, #0
    57b0:	0a000084 	beq	59c8 <__kernel_rem_pio2f+0x504>
    57b4:	e59d2020 	ldr	r2, [sp, #32]
    57b8:	e2480001 	sub	r0, r8, #1
    57bc:	e1520000 	cmp	r2, r0
    57c0:	ca00000a 	bgt	57f0 <__kernel_rem_pio2f+0x32c>
    57c4:	e59d2008 	ldr	r2, [sp, #8]
    57c8:	e28de038 	add	lr, sp, #56	; 0x38
    57cc:	e59dc034 	ldr	r12, [sp, #52]	; 0x34
    57d0:	e08e3002 	add	r3, lr, r2
    57d4:	e3a02000 	mov	r2, #0
    57d8:	e5331004 	ldr	r1, [r3, #-4]!
    57dc:	e153000c 	cmp	r3, r12
    57e0:	e1822001 	orr	r2, r2, r1
    57e4:	1afffffb 	bne	57d8 <__kernel_rem_pio2f+0x314>
    57e8:	e3520000 	cmp	r2, #0
    57ec:	1a000160 	bne	5d74 <__kernel_rem_pio2f+0x8b0>
    57f0:	e59d3020 	ldr	r3, [sp, #32]
    57f4:	e2432001 	sub	r2, r3, #1
    57f8:	e1a02102 	lsl	r2, r2, #2
    57fc:	e28d4f5e 	add	r4, sp, #376	; 0x178
    5800:	e0843002 	add	r3, r4, r2
    5804:	e5133140 	ldr	r3, [r3, #-320]	; 0xfffffec0
    5808:	e3530000 	cmp	r3, #0
    580c:	1a00016c 	bne	5dc4 <__kernel_rem_pio2f+0x900>
    5810:	e28de038 	add	lr, sp, #56	; 0x38
    5814:	e08e2002 	add	r2, lr, r2
    5818:	e3a03001 	mov	r3, #1
    581c:	e5321004 	ldr	r1, [r2, #-4]!
    5820:	e3510000 	cmp	r1, #0
    5824:	e2833001 	add	r3, r3, #1
    5828:	0afffffb 	beq	581c <__kernel_rem_pio2f+0x358>
    582c:	e0883003 	add	r3, r8, r3
    5830:	e2882001 	add	r2, r8, #1
    5834:	e1520003 	cmp	r2, r3
    5838:	e58d3028 	str	r3, [sp, #40]	; 0x28
    583c:	ca000033 	bgt	5910 <__kernel_rem_pio2f+0x44c>
    5840:	e59d400c 	ldr	r4, [sp, #12]
    5844:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
    5848:	e0842002 	add	r2, r4, r2
    584c:	e28d4088 	add	r4, sp, #136	; 0x88
    5850:	e0881003 	add	r1, r8, r3
    5854:	e58d4018 	str	r4, [sp, #24]
    5858:	e28d3028 	add	r3, sp, #40	; 0x28
    585c:	e8930018 	ldm	r3, {r3, r4}
    5860:	e0689003 	rsb	r9, r8, r3
    5864:	e2825001 	add	r5, r2, #1
    5868:	e0843008 	add	r3, r4, r8
    586c:	e59d2018 	ldr	r2, [sp, #24]
    5870:	e59d41a4 	ldr	r4, [sp, #420]	; 0x1a4
    5874:	e59de008 	ldr	lr, [sp, #8]
    5878:	e0848101 	add	r8, r4, r1, lsl #2
    587c:	e1a09109 	lsl	r9, r9, #2
    5880:	e28d4f4a 	add	r4, sp, #296	; 0x128
    5884:	e0823103 	add	r3, r2, r3, lsl #2
    5888:	e084400e 	add	r4, r4, lr
    588c:	e58d9014 	str	r9, [sp, #20]
    5890:	e58d3010 	str	r3, [sp, #16]
    5894:	e58d4008 	str	r4, [sp, #8]
    5898:	e3a04000 	mov	r4, #0
    589c:	e5b80004 	ldr	r0, [r8, #4]!
    58a0:	eb0006ac 	bl	7358 <__aeabi_i2f>
    58a4:	e59d300c 	ldr	r3, [sp, #12]
    58a8:	e59d2010 	ldr	r2, [sp, #16]
    58ac:	e3530000 	cmp	r3, #0
    58b0:	e3a0a000 	mov	r10, #0
    58b4:	e7820004 	str	r0, [r2, r4]
    58b8:	ba00000c 	blt	58f0 <__kernel_rem_pio2f+0x42c>
    58bc:	e59d3018 	ldr	r3, [sp, #24]
    58c0:	e3a09000 	mov	r9, #0
    58c4:	e0837105 	add	r7, r3, r5, lsl #2
    58c8:	e7960009 	ldr	r0, [r6, r9]
    58cc:	e5371004 	ldr	r1, [r7, #-4]!
    58d0:	eb0006d7 	bl	7434 <__aeabi_fmul>
    58d4:	e1a01000 	mov	r1, r0
    58d8:	e1a0000a 	mov	r0, r10
    58dc:	eb00062c 	bl	7194 <__addsf3>
    58e0:	e2899004 	add	r9, r9, #4
    58e4:	e159000b 	cmp	r9, r11
    58e8:	e1a0a000 	mov	r10, r0
    58ec:	1afffff5 	bne	58c8 <__kernel_rem_pio2f+0x404>
    58f0:	e59d3008 	ldr	r3, [sp, #8]
    58f4:	e59d2014 	ldr	r2, [sp, #20]
    58f8:	e2844004 	add	r4, r4, #4
    58fc:	e5a3a004 	str	r10, [r3, #4]!
    5900:	e1540002 	cmp	r4, r2
    5904:	e58d3008 	str	r3, [sp, #8]
    5908:	e2855001 	add	r5, r5, #1
    590c:	1affffe2 	bne	589c <__kernel_rem_pio2f+0x3d8>
    5910:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
    5914:	eaffff38 	b	55fc <__kernel_rem_pio2f+0x138>
    5918:	e1a01007 	mov	r1, r7
    591c:	e3a005fe 	mov	r0, #1065353216	; 0x3f800000
    5920:	eb00061a 	bl	7190 <__aeabi_fsub>
    5924:	e3590000 	cmp	r9, #0
    5928:	e1a07000 	mov	r7, r0
    592c:	0affff9b 	beq	57a0 <__kernel_rem_pio2f+0x2dc>
    5930:	e59d101c 	ldr	r1, [sp, #28]
    5934:	e3a005fe 	mov	r0, #1065353216	; 0x3f800000
    5938:	eb000290 	bl	6380 <scalbnf>
    593c:	e1a01000 	mov	r1, r0
    5940:	e1a00007 	mov	r0, r7
    5944:	eb000611 	bl	7190 <__aeabi_fsub>
    5948:	e1a07000 	mov	r7, r0
    594c:	eaffff93 	b	57a0 <__kernel_rem_pio2f+0x2dc>
    5950:	1a00000b 	bne	5984 <__kernel_rem_pio2f+0x4c0>
    5954:	e28def5e 	add	lr, sp, #376	; 0x178
    5958:	e08e3108 	add	r3, lr, r8, lsl #2
    595c:	e5134144 	ldr	r4, [r3, #-324]	; 0xfffffebc
    5960:	e1a04444 	asr	r4, r4, #8
    5964:	eaffff66 	b	5704 <__kernel_rem_pio2f+0x240>
    5968:	e2483001 	sub	r3, r8, #1
    596c:	e28def5e 	add	lr, sp, #376	; 0x178
    5970:	e08e3103 	add	r3, lr, r3, lsl #2
    5974:	e5132140 	ldr	r2, [r3, #-320]	; 0xfffffec0
    5978:	e202207f 	and	r2, r2, #127	; 0x7f
    597c:	e5032140 	str	r2, [r3, #-320]	; 0xfffffec0
    5980:	eaffff84 	b	5798 <__kernel_rem_pio2f+0x2d4>
    5984:	e3a0143f 	mov	r1, #1056964608	; 0x3f000000
    5988:	eb0007a0 	bl	7810 <__aeabi_fcmpge>
    598c:	e3500000 	cmp	r0, #0
    5990:	03a04000 	moveq	r4, #0
    5994:	0affff81 	beq	57a0 <__kernel_rem_pio2f+0x2dc>
    5998:	e3580000 	cmp	r8, #0
    599c:	e3a04002 	mov	r4, #2
    59a0:	e2855001 	add	r5, r5, #1
    59a4:	caffff5b 	bgt	5718 <__kernel_rem_pio2f+0x254>
    59a8:	e3a09000 	mov	r9, #0
    59ac:	eaffff6c 	b	5764 <__kernel_rem_pio2f+0x2a0>
    59b0:	e3a07000 	mov	r7, #0
    59b4:	e5a57004 	str	r7, [r5, #4]!
    59b8:	e1550009 	cmp	r5, r9
    59bc:	e2844001 	add	r4, r4, #1
    59c0:	1afffef3 	bne	5594 <__kernel_rem_pio2f+0xd0>
    59c4:	eaffff07 	b	55e8 <__kernel_rem_pio2f+0x124>
    59c8:	e59d201c 	ldr	r2, [sp, #28]
    59cc:	e1a00007 	mov	r0, r7
    59d0:	e2621000 	rsb	r1, r2, #0
    59d4:	e58d500c 	str	r5, [sp, #12]
    59d8:	eb000268 	bl	6380 <scalbnf>
    59dc:	e59f1438 	ldr	r1, [pc, #1080]	; 5e1c <__kernel_rem_pio2f+0x958>
    59e0:	e1a05000 	mov	r5, r0
    59e4:	eb000789 	bl	7810 <__aeabi_fcmpge>
    59e8:	e3500000 	cmp	r0, #0
    59ec:	0a0000fa 	beq	5ddc <__kernel_rem_pio2f+0x918>
    59f0:	e3a015ee 	mov	r1, #998244352	; 0x3b800000
    59f4:	e1a00005 	mov	r0, r5
    59f8:	eb00068d 	bl	7434 <__aeabi_fmul>
    59fc:	eb00078f 	bl	7840 <__aeabi_f2iz>
    5a00:	eb000654 	bl	7358 <__aeabi_i2f>
    5a04:	e59f1410 	ldr	r1, [pc, #1040]	; 5e1c <__kernel_rem_pio2f+0x958>
    5a08:	e1a06000 	mov	r6, r0
    5a0c:	eb000688 	bl	7434 <__aeabi_fmul>
    5a10:	e1a01000 	mov	r1, r0
    5a14:	e1a00005 	mov	r0, r5
    5a18:	eb0005dc 	bl	7190 <__aeabi_fsub>
    5a1c:	eb000787 	bl	7840 <__aeabi_f2iz>
    5a20:	e59d2008 	ldr	r2, [sp, #8]
    5a24:	e28d3f5e 	add	r3, sp, #376	; 0x178
    5a28:	e0839002 	add	r9, r3, r2
    5a2c:	e5090140 	str	r0, [r9, #-320]	; 0xfffffec0
    5a30:	e1a00006 	mov	r0, r6
    5a34:	eb000781 	bl	7840 <__aeabi_f2iz>
    5a38:	e59d201c 	ldr	r2, [sp, #28]
    5a3c:	e2888001 	add	r8, r8, #1
    5a40:	e28def5e 	add	lr, sp, #376	; 0x178
    5a44:	e08e3108 	add	r3, lr, r8, lsl #2
    5a48:	e2822008 	add	r2, r2, #8
    5a4c:	e58d201c 	str	r2, [sp, #28]
    5a50:	e5030140 	str	r0, [r3, #-320]	; 0xfffffec0
    5a54:	e3a005fe 	mov	r0, #1065353216	; 0x3f800000
    5a58:	e59d101c 	ldr	r1, [sp, #28]
    5a5c:	eb000247 	bl	6380 <scalbnf>
    5a60:	e3580000 	cmp	r8, #0
    5a64:	e1a05000 	mov	r5, r0
    5a68:	ba000039 	blt	5b54 <__kernel_rem_pio2f+0x690>
    5a6c:	e068af08 	rsb	r10, r8, r8, lsl #30
    5a70:	e1a06108 	lsl	r6, r8, #2
    5a74:	e1a0a10a 	lsl	r10, r10, #2
    5a78:	e28d0038 	add	r0, sp, #56	; 0x38
    5a7c:	e28d1f4a 	add	r1, sp, #296	; 0x128
    5a80:	e0807006 	add	r7, r0, r6
    5a84:	e24aa004 	sub	r10, r10, #4
    5a88:	e0816006 	add	r6, r1, r6
    5a8c:	e3a09000 	mov	r9, #0
    5a90:	e7970009 	ldr	r0, [r7, r9]
    5a94:	eb00062f 	bl	7358 <__aeabi_i2f>
    5a98:	e1a01005 	mov	r1, r5
    5a9c:	eb000664 	bl	7434 <__aeabi_fmul>
    5aa0:	e3a015ee 	mov	r1, #998244352	; 0x3b800000
    5aa4:	e7860009 	str	r0, [r6, r9]
    5aa8:	e1a00005 	mov	r0, r5
    5aac:	eb000660 	bl	7434 <__aeabi_fmul>
    5ab0:	e2499004 	sub	r9, r9, #4
    5ab4:	e159000a 	cmp	r9, r10
    5ab8:	e1a05000 	mov	r5, r0
    5abc:	1afffff3 	bne	5a90 <__kernel_rem_pio2f+0x5cc>
    5ac0:	e2883001 	add	r3, r8, #1
    5ac4:	e59f7354 	ldr	r7, [pc, #852]	; 5e20 <__kernel_rem_pio2f+0x95c>
    5ac8:	e59d9020 	ldr	r9, [sp, #32]
    5acc:	e58d8008 	str	r8, [sp, #8]
    5ad0:	e58d4010 	str	r4, [sp, #16]
    5ad4:	e3a05000 	mov	r5, #0
    5ad8:	e1a0b003 	mov	r11, r3
    5adc:	e3590000 	cmp	r9, #0
    5ae0:	ba0000a1 	blt	5d6c <__kernel_rem_pio2f+0x8a8>
    5ae4:	e3550000 	cmp	r5, #0
    5ae8:	a3a0a000 	movge	r10, #0
    5aec:	a3a04000 	movge	r4, #0
    5af0:	a1a0800a 	movge	r8, r10
    5af4:	aa000003 	bge	5b08 <__kernel_rem_pio2f+0x644>
    5af8:	ea00009b 	b	5d6c <__kernel_rem_pio2f+0x8a8>
    5afc:	e1580005 	cmp	r8, r5
    5b00:	e28aa004 	add	r10, r10, #4
    5b04:	ca000009 	bgt	5b30 <__kernel_rem_pio2f+0x66c>
    5b08:	e796100a 	ldr	r1, [r6, r10]
    5b0c:	e797000a 	ldr	r0, [r7, r10]
    5b10:	eb000647 	bl	7434 <__aeabi_fmul>
    5b14:	e1a01000 	mov	r1, r0
    5b18:	e1a00004 	mov	r0, r4
    5b1c:	eb00059c 	bl	7194 <__addsf3>
    5b20:	e2888001 	add	r8, r8, #1
    5b24:	e1590008 	cmp	r9, r8
    5b28:	e1a04000 	mov	r4, r0
    5b2c:	aafffff2 	bge	5afc <__kernel_rem_pio2f+0x638>
    5b30:	e28d2f5e 	add	r2, sp, #376	; 0x178
    5b34:	e0823105 	add	r3, r2, r5, lsl #2
    5b38:	e2855001 	add	r5, r5, #1
    5b3c:	e155000b 	cmp	r5, r11
    5b40:	e50340a0 	str	r4, [r3, #-160]	; 0xffffff60
    5b44:	e2466004 	sub	r6, r6, #4
    5b48:	1affffe3 	bne	5adc <__kernel_rem_pio2f+0x618>
    5b4c:	e59d8008 	ldr	r8, [sp, #8]
    5b50:	e59d4010 	ldr	r4, [sp, #16]
    5b54:	e59d21a0 	ldr	r2, [sp, #416]	; 0x1a0
    5b58:	e3520003 	cmp	r2, #3
    5b5c:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
    5b60:	ea00000f 	b	5ba4 <__kernel_rem_pio2f+0x6e0>
    5b64:	00005d30 	.word	0x00005d30
    5b68:	00005ca8 	.word	0x00005ca8
    5b6c:	00005ca8 	.word	0x00005ca8
    5b70:	00005bb8 	.word	0x00005bb8
    5b74:	e3540000 	cmp	r4, #0
    5b78:	e3a00000 	mov	r0, #0
    5b7c:	0a000042 	beq	5c8c <__kernel_rem_pio2f+0x7c8>
    5b80:	e28d20d8 	add	r2, sp, #216	; 0xd8
    5b84:	e892000c 	ldm	r2, {r2, r3}
    5b88:	e59d4024 	ldr	r4, [sp, #36]	; 0x24
    5b8c:	e2822102 	add	r2, r2, #-2147483648	; 0x80000000
    5b90:	e2833102 	add	r3, r3, #-2147483648	; 0x80000000
    5b94:	e2800102 	add	r0, r0, #-2147483648	; 0x80000000
    5b98:	e5842000 	str	r2, [r4]
    5b9c:	e5843004 	str	r3, [r4, #4]
    5ba0:	e5840008 	str	r0, [r4, #8]
    5ba4:	e59d200c 	ldr	r2, [sp, #12]
    5ba8:	e2020007 	and	r0, r2, #7
    5bac:	e28ddf5f 	add	sp, sp, #380	; 0x17c
    5bb0:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    5bb4:	e12fff1e 	bx	lr
    5bb8:	e3580000 	cmp	r8, #0
    5bbc:	daffffec 	ble	5b74 <__kernel_rem_pio2f+0x6b0>
    5bc0:	e28d70d8 	add	r7, sp, #216	; 0xd8
    5bc4:	e2485001 	sub	r5, r8, #1
    5bc8:	e0875105 	add	r5, r7, r5, lsl #2
    5bcc:	e28d20d4 	add	r2, sp, #212	; 0xd4
    5bd0:	e1a06005 	mov	r6, r5
    5bd4:	e416b004 	ldr	r11, [r6], #-4
    5bd8:	e5969008 	ldr	r9, [r6, #8]
    5bdc:	e1a0000b 	mov	r0, r11
    5be0:	e1a01009 	mov	r1, r9
    5be4:	e58d2004 	str	r2, [sp, #4]
    5be8:	eb000569 	bl	7194 <__addsf3>
    5bec:	e1a0a000 	mov	r10, r0
    5bf0:	e1a0100a 	mov	r1, r10
    5bf4:	e1a0000b 	mov	r0, r11
    5bf8:	eb000564 	bl	7190 <__aeabi_fsub>
    5bfc:	e1a01000 	mov	r1, r0
    5c00:	e1a00009 	mov	r0, r9
    5c04:	eb000562 	bl	7194 <__addsf3>
    5c08:	e59d2004 	ldr	r2, [sp, #4]
    5c0c:	e1560002 	cmp	r6, r2
    5c10:	e5860008 	str	r0, [r6, #8]
    5c14:	e586a004 	str	r10, [r6, #4]
    5c18:	1affffed 	bne	5bd4 <__kernel_rem_pio2f+0x710>
    5c1c:	e3580001 	cmp	r8, #1
    5c20:	daffffd3 	ble	5b74 <__kernel_rem_pio2f+0x6b0>
    5c24:	e4159004 	ldr	r9, [r5], #-4
    5c28:	e595a008 	ldr	r10, [r5, #8]
    5c2c:	e1a00009 	mov	r0, r9
    5c30:	e1a0100a 	mov	r1, r10
    5c34:	eb000556 	bl	7194 <__addsf3>
    5c38:	e1a06000 	mov	r6, r0
    5c3c:	e1a01006 	mov	r1, r6
    5c40:	e1a00009 	mov	r0, r9
    5c44:	eb000551 	bl	7190 <__aeabi_fsub>
    5c48:	e1a01000 	mov	r1, r0
    5c4c:	e1a0000a 	mov	r0, r10
    5c50:	eb00054f 	bl	7194 <__addsf3>
    5c54:	e1550007 	cmp	r5, r7
    5c58:	e5850008 	str	r0, [r5, #8]
    5c5c:	e5856004 	str	r6, [r5, #4]
    5c60:	1affffef 	bne	5c24 <__kernel_rem_pio2f+0x760>
    5c64:	e2886001 	add	r6, r8, #1
    5c68:	e0856106 	add	r6, r5, r6, lsl #2
    5c6c:	e3a00000 	mov	r0, #0
    5c70:	e2855008 	add	r5, r5, #8
    5c74:	e5361004 	ldr	r1, [r6, #-4]!
    5c78:	eb000545 	bl	7194 <__addsf3>
    5c7c:	e1560005 	cmp	r6, r5
    5c80:	1afffffb 	bne	5c74 <__kernel_rem_pio2f+0x7b0>
    5c84:	e3540000 	cmp	r4, #0
    5c88:	1affffbc 	bne	5b80 <__kernel_rem_pio2f+0x6bc>
    5c8c:	e59d4024 	ldr	r4, [sp, #36]	; 0x24
    5c90:	e59d30d8 	ldr	r3, [sp, #216]	; 0xd8
    5c94:	e5843000 	str	r3, [r4]
    5c98:	e59d30dc 	ldr	r3, [sp, #220]	; 0xdc
    5c9c:	e5840008 	str	r0, [r4, #8]
    5ca0:	e5843004 	str	r3, [r4, #4]
    5ca4:	eaffffbe 	b	5ba4 <__kernel_rem_pio2f+0x6e0>
    5ca8:	e3580000 	cmp	r8, #0
    5cac:	b3a03000 	movlt	r3, #0
    5cb0:	ba000009 	blt	5cdc <__kernel_rem_pio2f+0x818>
    5cb4:	e28d60d8 	add	r6, sp, #216	; 0xd8
    5cb8:	e2885001 	add	r5, r8, #1
    5cbc:	e3a03000 	mov	r3, #0
    5cc0:	e0865105 	add	r5, r6, r5, lsl #2
    5cc4:	e1a00003 	mov	r0, r3
    5cc8:	e5351004 	ldr	r1, [r5, #-4]!
    5ccc:	eb000530 	bl	7194 <__addsf3>
    5cd0:	e1550006 	cmp	r5, r6
    5cd4:	1afffffb 	bne	5cc8 <__kernel_rem_pio2f+0x804>
    5cd8:	e1a03000 	mov	r3, r0
    5cdc:	e3540000 	cmp	r4, #0
    5ce0:	e59de024 	ldr	lr, [sp, #36]	; 0x24
    5ce4:	12832102 	addne	r2, r3, #-2147483648	; 0x80000000
    5ce8:	01a02003 	moveq	r2, r3
    5cec:	e58e2000 	str	r2, [lr]
    5cf0:	e59d00d8 	ldr	r0, [sp, #216]	; 0xd8
    5cf4:	e1a01003 	mov	r1, r3
    5cf8:	eb000524 	bl	7190 <__aeabi_fsub>
    5cfc:	e3580000 	cmp	r8, #0
    5d00:	da000005 	ble	5d1c <__kernel_rem_pio2f+0x858>
    5d04:	e28d50d8 	add	r5, sp, #216	; 0xd8
    5d08:	e0858108 	add	r8, r5, r8, lsl #2
    5d0c:	e5b51004 	ldr	r1, [r5, #4]!
    5d10:	eb00051f 	bl	7194 <__addsf3>
    5d14:	e1550008 	cmp	r5, r8
    5d18:	1afffffb 	bne	5d0c <__kernel_rem_pio2f+0x848>
    5d1c:	e3540000 	cmp	r4, #0
    5d20:	e59d2024 	ldr	r2, [sp, #36]	; 0x24
    5d24:	12800102 	addne	r0, r0, #-2147483648	; 0x80000000
    5d28:	e5820004 	str	r0, [r2, #4]
    5d2c:	eaffff9c 	b	5ba4 <__kernel_rem_pio2f+0x6e0>
    5d30:	e3580000 	cmp	r8, #0
    5d34:	ba000031 	blt	5e00 <__kernel_rem_pio2f+0x93c>
    5d38:	e28d60d8 	add	r6, sp, #216	; 0xd8
    5d3c:	e2885001 	add	r5, r8, #1
    5d40:	e3a00000 	mov	r0, #0
    5d44:	e0865105 	add	r5, r6, r5, lsl #2
    5d48:	e5351004 	ldr	r1, [r5, #-4]!
    5d4c:	eb000510 	bl	7194 <__addsf3>
    5d50:	e1550006 	cmp	r5, r6
    5d54:	1afffffb 	bne	5d48 <__kernel_rem_pio2f+0x884>
    5d58:	e3540000 	cmp	r4, #0
    5d5c:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
    5d60:	12800102 	addne	r0, r0, #-2147483648	; 0x80000000
    5d64:	e5830000 	str	r0, [r3]
    5d68:	eaffff8d 	b	5ba4 <__kernel_rem_pio2f+0x6e0>
    5d6c:	e3a04000 	mov	r4, #0
    5d70:	eaffff6e 	b	5b30 <__kernel_rem_pio2f+0x66c>
    5d74:	e1a03100 	lsl	r3, r0, #2
    5d78:	e28def5e 	add	lr, sp, #376	; 0x178
    5d7c:	e08e2003 	add	r2, lr, r3
    5d80:	e5122140 	ldr	r2, [r2, #-320]	; 0xfffffec0
    5d84:	e3520000 	cmp	r2, #0
    5d88:	e59d201c 	ldr	r2, [sp, #28]
    5d8c:	e2422008 	sub	r2, r2, #8
    5d90:	e58d500c 	str	r5, [sp, #12]
    5d94:	e58d201c 	str	r2, [sp, #28]
    5d98:	1a000016 	bne	5df8 <__kernel_rem_pio2f+0x934>
    5d9c:	e28de038 	add	lr, sp, #56	; 0x38
    5da0:	e08e3003 	add	r3, lr, r3
    5da4:	e1a08000 	mov	r8, r0
    5da8:	e5331004 	ldr	r1, [r3, #-4]!
    5dac:	e3510000 	cmp	r1, #0
    5db0:	e2488001 	sub	r8, r8, #1
    5db4:	e2422008 	sub	r2, r2, #8
    5db8:	0afffffa 	beq	5da8 <__kernel_rem_pio2f+0x8e4>
    5dbc:	e58d201c 	str	r2, [sp, #28]
    5dc0:	eaffff23 	b	5a54 <__kernel_rem_pio2f+0x590>
    5dc4:	e3a03001 	mov	r3, #1
    5dc8:	eafffe97 	b	582c <__kernel_rem_pio2f+0x368>
    5dcc:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
    5dd0:	e1a07102 	lsl	r7, r2, #2
    5dd4:	e1a0b103 	lsl	r11, r3, #2
    5dd8:	eafffe03 	b	55ec <__kernel_rem_pio2f+0x128>
    5ddc:	e1a00005 	mov	r0, r5
    5de0:	eb000696 	bl	7840 <__aeabi_f2iz>
    5de4:	e59d3008 	ldr	r3, [sp, #8]
    5de8:	e28def5e 	add	lr, sp, #376	; 0x178
    5dec:	e08e9003 	add	r9, lr, r3
    5df0:	e5090140 	str	r0, [r9, #-320]	; 0xfffffec0
    5df4:	eaffff16 	b	5a54 <__kernel_rem_pio2f+0x590>
    5df8:	e1a08000 	mov	r8, r0
    5dfc:	eaffff14 	b	5a54 <__kernel_rem_pio2f+0x590>
    5e00:	e3a00000 	mov	r0, #0
    5e04:	e3540000 	cmp	r4, #0
    5e08:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
    5e0c:	12800102 	addne	r0, r0, #-2147483648	; 0x80000000
    5e10:	e5830000 	str	r0, [r3]
    5e14:	eaffff62 	b	5ba4 <__kernel_rem_pio2f+0x6e0>
    5e18:	0000a658 	.word	0x0000a658
    5e1c:	43800000 	.word	0x43800000
    5e20:	0000a664 	.word	0x0000a664

00005e24 <__kernel_sinf>:
    5e24:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, r10, lr}
    5e28:	e3c03102 	bic	r3, r0, #-2147483648	; 0x80000000
    5e2c:	e3530432 	cmp	r3, #838860800	; 0x32000000
    5e30:	e1a04000 	mov	r4, r0
    5e34:	e1a07001 	mov	r7, r1
    5e38:	e1a08002 	mov	r8, r2
    5e3c:	aa000002 	bge	5e4c <__kernel_sinf+0x28>
    5e40:	eb00067e 	bl	7840 <__aeabi_f2iz>
    5e44:	e3500000 	cmp	r0, #0
    5e48:	0a000033 	beq	5f1c <__kernel_sinf+0xf8>
    5e4c:	e1a01004 	mov	r1, r4
    5e50:	e1a00004 	mov	r0, r4
    5e54:	eb000576 	bl	7434 <__aeabi_fmul>
    5e58:	e1a01004 	mov	r1, r4
    5e5c:	e1a05000 	mov	r5, r0
    5e60:	eb000573 	bl	7434 <__aeabi_fmul>
    5e64:	e59f10ec 	ldr	r1, [pc, #236]	; 5f58 <__kernel_sinf+0x134>
    5e68:	e1a06000 	mov	r6, r0
    5e6c:	e1a00005 	mov	r0, r5
    5e70:	eb00056f 	bl	7434 <__aeabi_fmul>
    5e74:	e59f10e0 	ldr	r1, [pc, #224]	; 5f5c <__kernel_sinf+0x138>
    5e78:	eb0004c4 	bl	7190 <__aeabi_fsub>
    5e7c:	e1a01005 	mov	r1, r5
    5e80:	eb00056b 	bl	7434 <__aeabi_fmul>
    5e84:	e59f10d4 	ldr	r1, [pc, #212]	; 5f60 <__kernel_sinf+0x13c>
    5e88:	eb0004c1 	bl	7194 <__addsf3>
    5e8c:	e1a01005 	mov	r1, r5
    5e90:	eb000567 	bl	7434 <__aeabi_fmul>
    5e94:	e59f10c8 	ldr	r1, [pc, #200]	; 5f64 <__kernel_sinf+0x140>
    5e98:	eb0004bc 	bl	7190 <__aeabi_fsub>
    5e9c:	e1a01005 	mov	r1, r5
    5ea0:	eb000563 	bl	7434 <__aeabi_fmul>
    5ea4:	e59f10bc 	ldr	r1, [pc, #188]	; 5f68 <__kernel_sinf+0x144>
    5ea8:	eb0004b9 	bl	7194 <__addsf3>
    5eac:	e3580000 	cmp	r8, #0
    5eb0:	e1a0a000 	mov	r10, r0
    5eb4:	0a00001b 	beq	5f28 <__kernel_sinf+0x104>
    5eb8:	e3a0143f 	mov	r1, #1056964608	; 0x3f000000
    5ebc:	e1a00007 	mov	r0, r7
    5ec0:	eb00055b 	bl	7434 <__aeabi_fmul>
    5ec4:	e1a0100a 	mov	r1, r10
    5ec8:	e1a08000 	mov	r8, r0
    5ecc:	e1a00006 	mov	r0, r6
    5ed0:	eb000557 	bl	7434 <__aeabi_fmul>
    5ed4:	e1a01000 	mov	r1, r0
    5ed8:	e1a00008 	mov	r0, r8
    5edc:	eb0004ab 	bl	7190 <__aeabi_fsub>
    5ee0:	e1a01005 	mov	r1, r5
    5ee4:	eb000552 	bl	7434 <__aeabi_fmul>
    5ee8:	e1a01007 	mov	r1, r7
    5eec:	eb0004a7 	bl	7190 <__aeabi_fsub>
    5ef0:	e59f1074 	ldr	r1, [pc, #116]	; 5f6c <__kernel_sinf+0x148>
    5ef4:	e1a05000 	mov	r5, r0
    5ef8:	e1a00006 	mov	r0, r6
    5efc:	eb00054c 	bl	7434 <__aeabi_fmul>
    5f00:	e1a01000 	mov	r1, r0
    5f04:	e1a00005 	mov	r0, r5
    5f08:	eb0004a1 	bl	7194 <__addsf3>
    5f0c:	e1a01000 	mov	r1, r0
    5f10:	e1a00004 	mov	r0, r4
    5f14:	eb00049d 	bl	7190 <__aeabi_fsub>
    5f18:	e1a04000 	mov	r4, r0
    5f1c:	e1a00004 	mov	r0, r4
    5f20:	e8bd45f8 	pop	{r3, r4, r5, r6, r7, r8, r10, lr}
    5f24:	e12fff1e 	bx	lr
    5f28:	e1a01000 	mov	r1, r0
    5f2c:	e1a00005 	mov	r0, r5
    5f30:	eb00053f 	bl	7434 <__aeabi_fmul>
    5f34:	e59f1030 	ldr	r1, [pc, #48]	; 5f6c <__kernel_sinf+0x148>
    5f38:	eb000494 	bl	7190 <__aeabi_fsub>
    5f3c:	e1a01006 	mov	r1, r6
    5f40:	eb00053b 	bl	7434 <__aeabi_fmul>
    5f44:	e1a01000 	mov	r1, r0
    5f48:	e1a00004 	mov	r0, r4
    5f4c:	eb000490 	bl	7194 <__addsf3>
    5f50:	e1a04000 	mov	r4, r0
    5f54:	eafffff0 	b	5f1c <__kernel_sinf+0xf8>
    5f58:	2f2ec9d3 	.word	0x2f2ec9d3
    5f5c:	32d72f34 	.word	0x32d72f34
    5f60:	3638ef1b 	.word	0x3638ef1b
    5f64:	39500d01 	.word	0x39500d01
    5f68:	3c088889 	.word	0x3c088889
    5f6c:	3e2aaaab 	.word	0x3e2aaaab

00005f70 <fabs>:
    5f70:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
    5f74:	e12fff1e 	bx	lr

00005f78 <floor>:
    5f78:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, r10, lr}
    5f7c:	e1a08081 	lsl	r8, r1, #1
    5f80:	e1a08aa8 	lsr	r8, r8, #21
    5f84:	e2486fff 	sub	r6, r8, #1020	; 0x3fc
    5f88:	e2466003 	sub	r6, r6, #3
    5f8c:	e3560013 	cmp	r6, #19
    5f90:	e1a02000 	mov	r2, r0
    5f94:	e1a03001 	mov	r3, r1
    5f98:	e1a04000 	mov	r4, r0
    5f9c:	e1a05001 	mov	r5, r1
    5fa0:	e1a07001 	mov	r7, r1
    5fa4:	ca000019 	bgt	6010 <floor+0x98>
    5fa8:	e3560000 	cmp	r6, #0
    5fac:	ba000034 	blt	6084 <floor+0x10c>
    5fb0:	e59f8150 	ldr	r8, [pc, #336]	; 6108 <floor+0x190>
    5fb4:	e1a08658 	asr	r8, r8, r6
    5fb8:	e008c001 	and	r12, r8, r1
    5fbc:	e19cc000 	orrs	r12, r12, r0
    5fc0:	0a00000e 	beq	6000 <floor+0x88>
    5fc4:	e28f3f4d 	add	r3, pc, #308	; 0x134
    5fc8:	e893000c 	ldm	r3, {r2, r3}
    5fcc:	eb0001da 	bl	673c <__adddf3>
    5fd0:	e3a02000 	mov	r2, #0
    5fd4:	e3a03000 	mov	r3, #0
    5fd8:	eb00044d 	bl	7114 <__aeabi_dcmpgt>
    5fdc:	e3500000 	cmp	r0, #0
    5fe0:	0a000004 	beq	5ff8 <floor+0x80>
    5fe4:	e3550000 	cmp	r5, #0
    5fe8:	b3a03601 	movlt	r3, #1048576	; 0x100000
    5fec:	b0855653 	addlt	r5, r5, r3, asr r6
    5ff0:	e3a04000 	mov	r4, #0
    5ff4:	e1c57008 	bic	r7, r5, r8
    5ff8:	e1a03007 	mov	r3, r7
    5ffc:	e1a02004 	mov	r2, r4
    6000:	e1a00002 	mov	r0, r2
    6004:	e1a01003 	mov	r1, r3
    6008:	e8bd45f8 	pop	{r3, r4, r5, r6, r7, r8, r10, lr}
    600c:	e12fff1e 	bx	lr
    6010:	e3560033 	cmp	r6, #51	; 0x33
    6014:	da000005 	ble	6030 <floor+0xb8>
    6018:	e3560b01 	cmp	r6, #1024	; 0x400
    601c:	1afffff7 	bne	6000 <floor+0x88>
    6020:	eb0001c5 	bl	673c <__adddf3>
    6024:	e1a02000 	mov	r2, r0
    6028:	e1a03001 	mov	r3, r1
    602c:	eafffff3 	b	6000 <floor+0x88>
    6030:	e248ae41 	sub	r10, r8, #1040	; 0x410
    6034:	e24aa003 	sub	r10, r10, #3
    6038:	e3e0c000 	mvn	r12, #0
    603c:	e1a0aa3c 	lsr	r10, r12, r10
    6040:	e11a0000 	tst	r10, r0
    6044:	0affffed 	beq	6000 <floor+0x88>
    6048:	e28f30b0 	add	r3, pc, #176	; 0xb0
    604c:	e893000c 	ldm	r3, {r2, r3}
    6050:	eb0001b9 	bl	673c <__adddf3>
    6054:	e3a02000 	mov	r2, #0
    6058:	e3a03000 	mov	r3, #0
    605c:	eb00042c 	bl	7114 <__aeabi_dcmpgt>
    6060:	e3500000 	cmp	r0, #0
    6064:	0affffe3 	beq	5ff8 <floor+0x80>
    6068:	e3550000 	cmp	r5, #0
    606c:	ba000017 	blt	60d0 <floor+0x158>
    6070:	e1c4400a 	bic	r4, r4, r10
    6074:	e1a07005 	mov	r7, r5
    6078:	e1a03007 	mov	r3, r7
    607c:	e1a02004 	mov	r2, r4
    6080:	eaffffde 	b	6000 <floor+0x88>
    6084:	e28f3074 	add	r3, pc, #116	; 0x74
    6088:	e893000c 	ldm	r3, {r2, r3}
    608c:	eb0001aa 	bl	673c <__adddf3>
    6090:	e3a02000 	mov	r2, #0
    6094:	e3a03000 	mov	r3, #0
    6098:	eb00041d 	bl	7114 <__aeabi_dcmpgt>
    609c:	e3500000 	cmp	r0, #0
    60a0:	0affffd4 	beq	5ff8 <floor+0x80>
    60a4:	e3550000 	cmp	r5, #0
    60a8:	a3a04000 	movge	r4, #0
    60ac:	a1a07004 	movge	r7, r4
    60b0:	aaffffd0 	bge	5ff8 <floor+0x80>
    60b4:	e3c73102 	bic	r3, r7, #-2147483648	; 0x80000000
    60b8:	e1833004 	orr	r3, r3, r4
    60bc:	e3530000 	cmp	r3, #0
    60c0:	e59f3044 	ldr	r3, [pc, #68]	; 610c <floor+0x194>
    60c4:	13a04000 	movne	r4, #0
    60c8:	11a07003 	movne	r7, r3
    60cc:	eaffffc9 	b	5ff8 <floor+0x80>
    60d0:	e3560014 	cmp	r6, #20
    60d4:	02855001 	addeq	r5, r5, #1
    60d8:	0affffe4 	beq	6070 <floor+0xf8>
    60dc:	e2688e43 	rsb	r8, r8, #1072	; 0x430
    60e0:	e2888003 	add	r8, r8, #3
    60e4:	e3a03001 	mov	r3, #1
    60e8:	e0843813 	add	r3, r4, r3, lsl r8
    60ec:	e1540003 	cmp	r4, r3
    60f0:	82855001 	addhi	r5, r5, #1
    60f4:	e1a04003 	mov	r4, r3
    60f8:	eaffffdc 	b	6070 <floor+0xf8>
    60fc:	e1a00000 	nop			; (mov r0, r0)
    6100:	8800759c 	.word	0x8800759c
    6104:	7e37e43c 	.word	0x7e37e43c
    6108:	000fffff 	.word	0x000fffff
    610c:	bff00000 	.word	0xbff00000

00006110 <scalbn>:
    6110:	e59f3170 	ldr	r3, [pc, #368]	; 6288 <scalbn+0x178>
    6114:	e0013003 	and	r3, r1, r3
    6118:	e1b03a43 	asrs	r3, r3, #20
    611c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    6120:	e1a04000 	mov	r4, r0
    6124:	e1a05001 	mov	r5, r1
    6128:	e1a06000 	mov	r6, r0
    612c:	e1a07001 	mov	r7, r1
    6130:	e1a08002 	mov	r8, r2
    6134:	1a000011 	bne	6180 <scalbn+0x70>
    6138:	e3c1c102 	bic	r12, r1, #-2147483648	; 0x80000000
    613c:	e19cc000 	orrs	r12, r12, r0
    6140:	0a00001d 	beq	61bc <scalbn+0xac>
    6144:	e59f3140 	ldr	r3, [pc, #320]	; 628c <scalbn+0x17c>
    6148:	e3a02000 	mov	r2, #0
    614c:	eb00027e 	bl	6b4c <__aeabi_dmul>
    6150:	e59f3138 	ldr	r3, [pc, #312]	; 6290 <scalbn+0x180>
    6154:	e1580003 	cmp	r8, r3
    6158:	e1a04000 	mov	r4, r0
    615c:	e1a05001 	mov	r5, r1
    6160:	e1a06000 	mov	r6, r0
    6164:	e1a07001 	mov	r7, r1
    6168:	ba000021 	blt	61f4 <scalbn+0xe4>
    616c:	e59f3114 	ldr	r3, [pc, #276]	; 6288 <scalbn+0x178>
    6170:	e0013003 	and	r3, r1, r3
    6174:	e1a03a43 	asr	r3, r3, #20
    6178:	e2433036 	sub	r3, r3, #54	; 0x36
    617c:	ea000003 	b	6190 <scalbn+0x80>
    6180:	e59f210c 	ldr	r2, [pc, #268]	; 6294 <scalbn+0x184>
    6184:	e1530002 	cmp	r3, r2
    6188:	11a01001 	movne	r1, r1
    618c:	0a000027 	beq	6230 <scalbn+0x120>
    6190:	e59f2100 	ldr	r2, [pc, #256]	; 6298 <scalbn+0x188>
    6194:	e0833008 	add	r3, r3, r8
    6198:	e1530002 	cmp	r3, r2
    619c:	c1a02004 	movgt	r2, r4
    61a0:	c1a03005 	movgt	r3, r5
    61a4:	ca000018 	bgt	620c <scalbn+0xfc>
    61a8:	e3530000 	cmp	r3, #0
    61ac:	da000006 	ble	61cc <scalbn+0xbc>
    61b0:	e3c1147f 	bic	r1, r1, #2130706432	; 0x7f000000
    61b4:	e3c1160f 	bic	r1, r1, #15728640	; 0xf00000
    61b8:	e1815a03 	orr	r5, r1, r3, lsl #20
    61bc:	e1a00004 	mov	r0, r4
    61c0:	e1a01005 	mov	r1, r5
    61c4:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
    61c8:	e12fff1e 	bx	lr
    61cc:	e3730035 	cmn	r3, #53	; 0x35
    61d0:	aa00001c 	bge	6248 <scalbn+0x138>
    61d4:	e59f30c0 	ldr	r3, [pc, #192]	; 629c <scalbn+0x18c>
    61d8:	e1580003 	cmp	r8, r3
    61dc:	e1a02004 	mov	r2, r4
    61e0:	e1a03005 	mov	r3, r5
    61e4:	ca000008 	bgt	620c <scalbn+0xfc>
    61e8:	e28f1088 	add	r1, pc, #136	; 0x88
    61ec:	e8910003 	ldm	r1, {r0, r1}
    61f0:	eb0000aa 	bl	64a0 <copysign>
    61f4:	e28f307c 	add	r3, pc, #124	; 0x7c
    61f8:	e893000c 	ldm	r3, {r2, r3}
    61fc:	eb000252 	bl	6b4c <__aeabi_dmul>
    6200:	e1a04000 	mov	r4, r0
    6204:	e1a05001 	mov	r5, r1
    6208:	eaffffeb 	b	61bc <scalbn+0xac>
    620c:	e28f106c 	add	r1, pc, #108	; 0x6c
    6210:	e8910003 	ldm	r1, {r0, r1}
    6214:	eb0000a1 	bl	64a0 <copysign>
    6218:	e28f3060 	add	r3, pc, #96	; 0x60
    621c:	e893000c 	ldm	r3, {r2, r3}
    6220:	eb000249 	bl	6b4c <__aeabi_dmul>
    6224:	e1a04000 	mov	r4, r0
    6228:	e1a05001 	mov	r5, r1
    622c:	eaffffe2 	b	61bc <scalbn+0xac>
    6230:	e1a03005 	mov	r3, r5
    6234:	e1a02000 	mov	r2, r0
    6238:	eb00013f 	bl	673c <__adddf3>
    623c:	e1a04000 	mov	r4, r0
    6240:	e1a05001 	mov	r5, r1
    6244:	eaffffdc 	b	61bc <scalbn+0xac>
    6248:	e3c1147f 	bic	r1, r1, #2130706432	; 0x7f000000
    624c:	e2833036 	add	r3, r3, #54	; 0x36
    6250:	e3c1160f 	bic	r1, r1, #15728640	; 0xf00000
    6254:	e1815a03 	orr	r5, r1, r3, lsl #20
    6258:	e1a00004 	mov	r0, r4
    625c:	e1a01005 	mov	r1, r5
    6260:	e3a02000 	mov	r2, #0
    6264:	e59f3034 	ldr	r3, [pc, #52]	; 62a0 <scalbn+0x190>
    6268:	eb000237 	bl	6b4c <__aeabi_dmul>
    626c:	e1a04000 	mov	r4, r0
    6270:	e1a05001 	mov	r5, r1
    6274:	eaffffd0 	b	61bc <scalbn+0xac>
    6278:	c2f8f359 	.word	0xc2f8f359
    627c:	01a56e1f 	.word	0x01a56e1f
    6280:	8800759c 	.word	0x8800759c
    6284:	7e37e43c 	.word	0x7e37e43c
    6288:	7ff00000 	.word	0x7ff00000
    628c:	43500000 	.word	0x43500000
    6290:	ffff3cb0 	.word	0xffff3cb0
    6294:	000007ff 	.word	0x000007ff
    6298:	000007fe 	.word	0x000007fe
    629c:	0000c350 	.word	0x0000c350
    62a0:	3c900000 	.word	0x3c900000
    62a4:	e1a00000 	nop			; (mov r0, r0)

000062a8 <fabsf>:
    62a8:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
    62ac:	e12fff1e 	bx	lr

000062b0 <floorf>:
    62b0:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
    62b4:	e3c06102 	bic	r6, r0, #-2147483648	; 0x80000000
    62b8:	e1a05ba6 	lsr	r5, r6, #23
    62bc:	e245507f 	sub	r5, r5, #127	; 0x7f
    62c0:	e3550016 	cmp	r5, #22
    62c4:	e1a01000 	mov	r1, r0
    62c8:	e1a04000 	mov	r4, r0
    62cc:	ca000014 	bgt	6324 <floorf+0x74>
    62d0:	e3550000 	cmp	r5, #0
    62d4:	e1a07000 	mov	r7, r0
    62d8:	ba000017 	blt	633c <floorf+0x8c>
    62dc:	e59f608c 	ldr	r6, [pc, #140]	; 6370 <floorf+0xc0>
    62e0:	e1a06556 	asr	r6, r6, r5
    62e4:	e1160000 	tst	r6, r0
    62e8:	0a00000a 	beq	6318 <floorf+0x68>
    62ec:	e59f1080 	ldr	r1, [pc, #128]	; 6374 <floorf+0xc4>
    62f0:	eb0003a7 	bl	7194 <__addsf3>
    62f4:	e3a01000 	mov	r1, #0
    62f8:	eb00054a 	bl	7828 <__aeabi_fcmpgt>
    62fc:	e3500000 	cmp	r0, #0
    6300:	0a000003 	beq	6314 <floorf+0x64>
    6304:	e3540000 	cmp	r4, #0
    6308:	b3a03502 	movlt	r3, #8388608	; 0x800000
    630c:	b0847553 	addlt	r7, r4, r3, asr r5
    6310:	e1c74006 	bic	r4, r7, r6
    6314:	e1a01004 	mov	r1, r4
    6318:	e1a00001 	mov	r0, r1
    631c:	e8bd40f8 	pop	{r3, r4, r5, r6, r7, lr}
    6320:	e12fff1e 	bx	lr
    6324:	e59f304c 	ldr	r3, [pc, #76]	; 6378 <floorf+0xc8>
    6328:	e1560003 	cmp	r6, r3
    632c:	9afffff9 	bls	6318 <floorf+0x68>
    6330:	eb000397 	bl	7194 <__addsf3>
    6334:	e1a01000 	mov	r1, r0
    6338:	eafffff6 	b	6318 <floorf+0x68>
    633c:	e59f1030 	ldr	r1, [pc, #48]	; 6374 <floorf+0xc4>
    6340:	eb000393 	bl	7194 <__addsf3>
    6344:	e3a01000 	mov	r1, #0
    6348:	eb000536 	bl	7828 <__aeabi_fcmpgt>
    634c:	e3500000 	cmp	r0, #0
    6350:	0affffef 	beq	6314 <floorf+0x64>
    6354:	e3540000 	cmp	r4, #0
    6358:	a3a04000 	movge	r4, #0
    635c:	aaffffec 	bge	6314 <floorf+0x64>
    6360:	e59f3014 	ldr	r3, [pc, #20]	; 637c <floorf+0xcc>
    6364:	e3560000 	cmp	r6, #0
    6368:	11a04003 	movne	r4, r3
    636c:	eaffffe8 	b	6314 <floorf+0x64>
    6370:	007fffff 	.word	0x007fffff
    6374:	7149f2ca 	.word	0x7149f2ca
    6378:	7f7fffff 	.word	0x7f7fffff
    637c:	bf800000 	.word	0xbf800000

00006380 <scalbnf>:
    6380:	e3d0c102 	bics	r12, r0, #-2147483648	; 0x80000000
    6384:	e92d4010 	push	{r4, lr}
    6388:	e1a03000 	mov	r3, r0
    638c:	e1a02000 	mov	r2, r0
    6390:	e1a04001 	mov	r4, r1
    6394:	0a00000e 	beq	63d4 <scalbnf+0x54>
    6398:	e59f10e8 	ldr	r1, [pc, #232]	; 6488 <scalbnf+0x108>
    639c:	e15c0001 	cmp	r12, r1
    63a0:	8a00000e 	bhi	63e0 <scalbnf+0x60>
    63a4:	e35c0502 	cmp	r12, #8388608	; 0x800000
    63a8:	3a000010 	bcc	63f0 <scalbnf+0x70>
    63ac:	e1a0cbac 	lsr	r12, r12, #23
    63b0:	e08cc004 	add	r12, r12, r4
    63b4:	e35c00fe 	cmp	r12, #254	; 0xfe
    63b8:	c1a01003 	movgt	r1, r3
    63bc:	ca000023 	bgt	6450 <scalbnf+0xd0>
    63c0:	e35c0000 	cmp	r12, #0
    63c4:	da000015 	ble	6420 <scalbnf+0xa0>
    63c8:	e3c2247f 	bic	r2, r2, #2130706432	; 0x7f000000
    63cc:	e3c23502 	bic	r3, r2, #8388608	; 0x800000
    63d0:	e1833b8c 	orr	r3, r3, r12, lsl #23
    63d4:	e1a00003 	mov	r0, r3
    63d8:	e8bd4010 	pop	{r4, lr}
    63dc:	e12fff1e 	bx	lr
    63e0:	e1a01000 	mov	r1, r0
    63e4:	eb00036a 	bl	7194 <__addsf3>
    63e8:	e1a03000 	mov	r3, r0
    63ec:	eafffff8 	b	63d4 <scalbnf+0x54>
    63f0:	e3a01313 	mov	r1, #1275068416	; 0x4c000000
    63f4:	eb00040e 	bl	7434 <__aeabi_fmul>
    63f8:	e59f208c 	ldr	r2, [pc, #140]	; 648c <scalbnf+0x10c>
    63fc:	e1540002 	cmp	r4, r2
    6400:	e1a03000 	mov	r3, r0
    6404:	ba00000d 	blt	6440 <scalbnf+0xc0>
    6408:	e59fc080 	ldr	r12, [pc, #128]	; 6490 <scalbnf+0x110>
    640c:	e000c00c 	and	r12, r0, r12
    6410:	e1a0cbcc 	asr	r12, r12, #23
    6414:	e1a02000 	mov	r2, r0
    6418:	e24cc019 	sub	r12, r12, #25
    641c:	eaffffe3 	b	63b0 <scalbnf+0x30>
    6420:	e37c0016 	cmn	r12, #22
    6424:	aa00000f 	bge	6468 <scalbnf+0xe8>
    6428:	e59f2064 	ldr	r2, [pc, #100]	; 6494 <scalbnf+0x114>
    642c:	e1540002 	cmp	r4, r2
    6430:	e1a01003 	mov	r1, r3
    6434:	ca000005 	bgt	6450 <scalbnf+0xd0>
    6438:	e59f0058 	ldr	r0, [pc, #88]	; 6498 <scalbnf+0x118>
    643c:	eb00001f 	bl	64c0 <copysignf>
    6440:	e59f1050 	ldr	r1, [pc, #80]	; 6498 <scalbnf+0x118>
    6444:	eb0003fa 	bl	7434 <__aeabi_fmul>
    6448:	e1a03000 	mov	r3, r0
    644c:	eaffffe0 	b	63d4 <scalbnf+0x54>
    6450:	e59f0044 	ldr	r0, [pc, #68]	; 649c <scalbnf+0x11c>
    6454:	eb000019 	bl	64c0 <copysignf>
    6458:	e59f103c 	ldr	r1, [pc, #60]	; 649c <scalbnf+0x11c>
    645c:	eb0003f4 	bl	7434 <__aeabi_fmul>
    6460:	e1a03000 	mov	r3, r0
    6464:	eaffffda 	b	63d4 <scalbnf+0x54>
    6468:	e3c2247f 	bic	r2, r2, #2130706432	; 0x7f000000
    646c:	e28c0019 	add	r0, r12, #25
    6470:	e3c22502 	bic	r2, r2, #8388608	; 0x800000
    6474:	e1820b80 	orr	r0, r2, r0, lsl #23
    6478:	e3a01433 	mov	r1, #855638016	; 0x33000000
    647c:	eb0003ec 	bl	7434 <__aeabi_fmul>
    6480:	e1a03000 	mov	r3, r0
    6484:	eaffffd2 	b	63d4 <scalbnf+0x54>
    6488:	7f7fffff 	.word	0x7f7fffff
    648c:	ffff3cb0 	.word	0xffff3cb0
    6490:	7f800000 	.word	0x7f800000
    6494:	0000c350 	.word	0x0000c350
    6498:	0da24260 	.word	0x0da24260
    649c:	7149f2ca 	.word	0x7149f2ca

000064a0 <copysign>:
    64a0:	e2033102 	and	r3, r3, #-2147483648	; 0x80000000
    64a4:	e3c12102 	bic	r2, r1, #-2147483648	; 0x80000000
    64a8:	e92d0030 	push	{r4, r5}
    64ac:	e1a05001 	mov	r5, r1
    64b0:	e1a04000 	mov	r4, r0
    64b4:	e1831002 	orr	r1, r3, r2
    64b8:	e8bd0030 	pop	{r4, r5}
    64bc:	e12fff1e 	bx	lr

000064c0 <copysignf>:
    64c0:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    64c4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
    64c8:	e1810000 	orr	r0, r1, r0
    64cc:	e12fff1e 	bx	lr

000064d0 <__aeabi_uidiv>:
    64d0:	e2512001 	subs	r2, r1, #1
    64d4:	012fff1e 	bxeq	lr
    64d8:	3a000036 	bcc	65b8 <__aeabi_uidiv+0xe8>
    64dc:	e1500001 	cmp	r0, r1
    64e0:	9a000022 	bls	6570 <__aeabi_uidiv+0xa0>
    64e4:	e1110002 	tst	r1, r2
    64e8:	0a000023 	beq	657c <__aeabi_uidiv+0xac>
    64ec:	e311020e 	tst	r1, #-536870912	; 0xe0000000
    64f0:	01a01181 	lsleq	r1, r1, #3
    64f4:	03a03008 	moveq	r3, #8
    64f8:	13a03001 	movne	r3, #1
    64fc:	e3510201 	cmp	r1, #268435456	; 0x10000000
    6500:	31510000 	cmpcc	r1, r0
    6504:	31a01201 	lslcc	r1, r1, #4
    6508:	31a03203 	lslcc	r3, r3, #4
    650c:	3afffffa 	bcc	64fc <__aeabi_uidiv+0x2c>
    6510:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
    6514:	31510000 	cmpcc	r1, r0
    6518:	31a01081 	lslcc	r1, r1, #1
    651c:	31a03083 	lslcc	r3, r3, #1
    6520:	3afffffa 	bcc	6510 <__aeabi_uidiv+0x40>
    6524:	e3a02000 	mov	r2, #0
    6528:	e1500001 	cmp	r0, r1
    652c:	20400001 	subcs	r0, r0, r1
    6530:	21822003 	orrcs	r2, r2, r3
    6534:	e15000a1 	cmp	r0, r1, lsr #1
    6538:	204000a1 	subcs	r0, r0, r1, lsr #1
    653c:	218220a3 	orrcs	r2, r2, r3, lsr #1
    6540:	e1500121 	cmp	r0, r1, lsr #2
    6544:	20400121 	subcs	r0, r0, r1, lsr #2
    6548:	21822123 	orrcs	r2, r2, r3, lsr #2
    654c:	e15001a1 	cmp	r0, r1, lsr #3
    6550:	204001a1 	subcs	r0, r0, r1, lsr #3
    6554:	218221a3 	orrcs	r2, r2, r3, lsr #3
    6558:	e3500000 	cmp	r0, #0
    655c:	11b03223 	lsrsne	r3, r3, #4
    6560:	11a01221 	lsrne	r1, r1, #4
    6564:	1affffef 	bne	6528 <__aeabi_uidiv+0x58>
    6568:	e1a00002 	mov	r0, r2
    656c:	e12fff1e 	bx	lr
    6570:	03a00001 	moveq	r0, #1
    6574:	13a00000 	movne	r0, #0
    6578:	e12fff1e 	bx	lr
    657c:	e3510801 	cmp	r1, #65536	; 0x10000
    6580:	21a01821 	lsrcs	r1, r1, #16
    6584:	23a02010 	movcs	r2, #16
    6588:	33a02000 	movcc	r2, #0
    658c:	e3510c01 	cmp	r1, #256	; 0x100
    6590:	21a01421 	lsrcs	r1, r1, #8
    6594:	22822008 	addcs	r2, r2, #8
    6598:	e3510010 	cmp	r1, #16
    659c:	21a01221 	lsrcs	r1, r1, #4
    65a0:	22822004 	addcs	r2, r2, #4
    65a4:	e3510004 	cmp	r1, #4
    65a8:	82822003 	addhi	r2, r2, #3
    65ac:	908220a1 	addls	r2, r2, r1, lsr #1
    65b0:	e1a00230 	lsr	r0, r0, r2
    65b4:	e12fff1e 	bx	lr
    65b8:	e3500000 	cmp	r0, #0
    65bc:	13e00000 	mvnne	r0, #0
    65c0:	ea000059 	b	672c <__aeabi_idiv0>

000065c4 <__aeabi_uidivmod>:
    65c4:	e3510000 	cmp	r1, #0
    65c8:	0afffffa 	beq	65b8 <__aeabi_uidiv+0xe8>
    65cc:	e92d4003 	push	{r0, r1, lr}
    65d0:	ebffffbe 	bl	64d0 <__aeabi_uidiv>
    65d4:	e8bd4006 	pop	{r1, r2, lr}
    65d8:	e0030092 	mul	r3, r2, r0
    65dc:	e0411003 	sub	r1, r1, r3
    65e0:	e12fff1e 	bx	lr

000065e4 <__aeabi_idiv>:
    65e4:	e3510000 	cmp	r1, #0
    65e8:	0a000043 	beq	66fc <.divsi3_skip_div0_test+0x110>

000065ec <.divsi3_skip_div0_test>:
    65ec:	e020c001 	eor	r12, r0, r1
    65f0:	42611000 	rsbmi	r1, r1, #0
    65f4:	e2512001 	subs	r2, r1, #1
    65f8:	0a000027 	beq	669c <.divsi3_skip_div0_test+0xb0>
    65fc:	e1b03000 	movs	r3, r0
    6600:	42603000 	rsbmi	r3, r0, #0
    6604:	e1530001 	cmp	r3, r1
    6608:	9a000026 	bls	66a8 <.divsi3_skip_div0_test+0xbc>
    660c:	e1110002 	tst	r1, r2
    6610:	0a000028 	beq	66b8 <.divsi3_skip_div0_test+0xcc>
    6614:	e311020e 	tst	r1, #-536870912	; 0xe0000000
    6618:	01a01181 	lsleq	r1, r1, #3
    661c:	03a02008 	moveq	r2, #8
    6620:	13a02001 	movne	r2, #1
    6624:	e3510201 	cmp	r1, #268435456	; 0x10000000
    6628:	31510003 	cmpcc	r1, r3
    662c:	31a01201 	lslcc	r1, r1, #4
    6630:	31a02202 	lslcc	r2, r2, #4
    6634:	3afffffa 	bcc	6624 <.divsi3_skip_div0_test+0x38>
    6638:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
    663c:	31510003 	cmpcc	r1, r3
    6640:	31a01081 	lslcc	r1, r1, #1
    6644:	31a02082 	lslcc	r2, r2, #1
    6648:	3afffffa 	bcc	6638 <.divsi3_skip_div0_test+0x4c>
    664c:	e3a00000 	mov	r0, #0
    6650:	e1530001 	cmp	r3, r1
    6654:	20433001 	subcs	r3, r3, r1
    6658:	21800002 	orrcs	r0, r0, r2
    665c:	e15300a1 	cmp	r3, r1, lsr #1
    6660:	204330a1 	subcs	r3, r3, r1, lsr #1
    6664:	218000a2 	orrcs	r0, r0, r2, lsr #1
    6668:	e1530121 	cmp	r3, r1, lsr #2
    666c:	20433121 	subcs	r3, r3, r1, lsr #2
    6670:	21800122 	orrcs	r0, r0, r2, lsr #2
    6674:	e15301a1 	cmp	r3, r1, lsr #3
    6678:	204331a1 	subcs	r3, r3, r1, lsr #3
    667c:	218001a2 	orrcs	r0, r0, r2, lsr #3
    6680:	e3530000 	cmp	r3, #0
    6684:	11b02222 	lsrsne	r2, r2, #4
    6688:	11a01221 	lsrne	r1, r1, #4
    668c:	1affffef 	bne	6650 <.divsi3_skip_div0_test+0x64>
    6690:	e35c0000 	cmp	r12, #0
    6694:	42600000 	rsbmi	r0, r0, #0
    6698:	e12fff1e 	bx	lr
    669c:	e13c0000 	teq	r12, r0
    66a0:	42600000 	rsbmi	r0, r0, #0
    66a4:	e12fff1e 	bx	lr
    66a8:	33a00000 	movcc	r0, #0
    66ac:	01a00fcc 	asreq	r0, r12, #31
    66b0:	03800001 	orreq	r0, r0, #1
    66b4:	e12fff1e 	bx	lr
    66b8:	e3510801 	cmp	r1, #65536	; 0x10000
    66bc:	21a01821 	lsrcs	r1, r1, #16
    66c0:	23a02010 	movcs	r2, #16
    66c4:	33a02000 	movcc	r2, #0
    66c8:	e3510c01 	cmp	r1, #256	; 0x100
    66cc:	21a01421 	lsrcs	r1, r1, #8
    66d0:	22822008 	addcs	r2, r2, #8
    66d4:	e3510010 	cmp	r1, #16
    66d8:	21a01221 	lsrcs	r1, r1, #4
    66dc:	22822004 	addcs	r2, r2, #4
    66e0:	e3510004 	cmp	r1, #4
    66e4:	82822003 	addhi	r2, r2, #3
    66e8:	908220a1 	addls	r2, r2, r1, lsr #1
    66ec:	e35c0000 	cmp	r12, #0
    66f0:	e1a00233 	lsr	r0, r3, r2
    66f4:	42600000 	rsbmi	r0, r0, #0
    66f8:	e12fff1e 	bx	lr
    66fc:	e3500000 	cmp	r0, #0
    6700:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
    6704:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
    6708:	ea000007 	b	672c <__aeabi_idiv0>

0000670c <__aeabi_idivmod>:
    670c:	e3510000 	cmp	r1, #0
    6710:	0afffff9 	beq	66fc <.divsi3_skip_div0_test+0x110>
    6714:	e92d4003 	push	{r0, r1, lr}
    6718:	ebffffb3 	bl	65ec <.divsi3_skip_div0_test>
    671c:	e8bd4006 	pop	{r1, r2, lr}
    6720:	e0030092 	mul	r3, r2, r0
    6724:	e0411003 	sub	r1, r1, r3
    6728:	e12fff1e 	bx	lr

0000672c <__aeabi_idiv0>:
    672c:	e12fff1e 	bx	lr

00006730 <__aeabi_drsub>:
    6730:	e2211102 	eor	r1, r1, #-2147483648	; 0x80000000
    6734:	ea000000 	b	673c <__adddf3>

00006738 <__aeabi_dsub>:
    6738:	e2233102 	eor	r3, r3, #-2147483648	; 0x80000000

0000673c <__adddf3>:
    673c:	e92d4030 	push	{r4, r5, lr}
    6740:	e1a04081 	lsl	r4, r1, #1
    6744:	e1a05083 	lsl	r5, r3, #1
    6748:	e1340005 	teq	r4, r5
    674c:	01300002 	teqeq	r0, r2
    6750:	1194c000 	orrsne	r12, r4, r0
    6754:	1195c002 	orrsne	r12, r5, r2
    6758:	11f0cac4 	mvnsne	r12, r4, asr #21
    675c:	11f0cac5 	mvnsne	r12, r5, asr #21
    6760:	0a00008c 	beq	6998 <__adddf3+0x25c>
    6764:	e1a04aa4 	lsr	r4, r4, #21
    6768:	e0745aa5 	rsbs	r5, r4, r5, lsr #21
    676c:	b2655000 	rsblt	r5, r5, #0
    6770:	da000006 	ble	6790 <__adddf3+0x54>
    6774:	e0844005 	add	r4, r4, r5
    6778:	e0202002 	eor	r2, r0, r2
    677c:	e0213003 	eor	r3, r1, r3
    6780:	e0220000 	eor	r0, r2, r0
    6784:	e0231001 	eor	r1, r3, r1
    6788:	e0202002 	eor	r2, r0, r2
    678c:	e0213003 	eor	r3, r1, r3
    6790:	e3550036 	cmp	r5, #54	; 0x36
    6794:	88bd4030 	pophi	{r4, r5, lr}
    6798:	812fff1e 	bxhi	lr
    679c:	e3110102 	tst	r1, #-2147483648	; 0x80000000
    67a0:	e1a01601 	lsl	r1, r1, #12
    67a4:	e3a0c601 	mov	r12, #1048576	; 0x100000
    67a8:	e18c1621 	orr	r1, r12, r1, lsr #12
    67ac:	0a000001 	beq	67b8 <__adddf3+0x7c>
    67b0:	e2700000 	rsbs	r0, r0, #0
    67b4:	e2e11000 	rsc	r1, r1, #0
    67b8:	e3130102 	tst	r3, #-2147483648	; 0x80000000
    67bc:	e1a03603 	lsl	r3, r3, #12
    67c0:	e18c3623 	orr	r3, r12, r3, lsr #12
    67c4:	0a000001 	beq	67d0 <__adddf3+0x94>
    67c8:	e2722000 	rsbs	r2, r2, #0
    67cc:	e2e33000 	rsc	r3, r3, #0
    67d0:	e1340005 	teq	r4, r5
    67d4:	0a000069 	beq	6980 <__adddf3+0x244>
    67d8:	e2444001 	sub	r4, r4, #1
    67dc:	e275e020 	rsbs	lr, r5, #32
    67e0:	ba000005 	blt	67fc <__adddf3+0xc0>
    67e4:	e1a0ce12 	lsl	r12, r2, lr
    67e8:	e0900532 	adds	r0, r0, r2, lsr r5
    67ec:	e2a11000 	adc	r1, r1, #0
    67f0:	e0900e13 	adds	r0, r0, r3, lsl lr
    67f4:	e0b11553 	adcs	r1, r1, r3, asr r5
    67f8:	ea000006 	b	6818 <__adddf3+0xdc>
    67fc:	e2455020 	sub	r5, r5, #32
    6800:	e28ee020 	add	lr, lr, #32
    6804:	e3520001 	cmp	r2, #1
    6808:	e1a0ce13 	lsl	r12, r3, lr
    680c:	238cc002 	orrcs	r12, r12, #2
    6810:	e0900553 	adds	r0, r0, r3, asr r5
    6814:	e0b11fc3 	adcs	r1, r1, r3, asr #31
    6818:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
    681c:	5a000002 	bpl	682c <__adddf3+0xf0>
    6820:	e27cc000 	rsbs	r12, r12, #0
    6824:	e2f00000 	rscs	r0, r0, #0
    6828:	e2e11000 	rsc	r1, r1, #0
    682c:	e3510601 	cmp	r1, #1048576	; 0x100000
    6830:	3a00000f 	bcc	6874 <__adddf3+0x138>
    6834:	e3510602 	cmp	r1, #2097152	; 0x200000
    6838:	3a000006 	bcc	6858 <__adddf3+0x11c>
    683c:	e1b010a1 	lsrs	r1, r1, #1
    6840:	e1b00060 	rrxs	r0, r0
    6844:	e1a0c06c 	rrx	r12, r12
    6848:	e2844001 	add	r4, r4, #1
    684c:	e1a02a84 	lsl	r2, r4, #21
    6850:	e3720501 	cmn	r2, #4194304	; 0x400000
    6854:	2a00006b 	bcs	6a08 <__adddf3+0x2cc>
    6858:	e35c0102 	cmp	r12, #-2147483648	; 0x80000000
    685c:	01b0c0a0 	lsrseq	r12, r0, #1
    6860:	e2b00000 	adcs	r0, r0, #0
    6864:	e0a11a04 	adc	r1, r1, r4, lsl #20
    6868:	e1811005 	orr	r1, r1, r5
    686c:	e8bd4030 	pop	{r4, r5, lr}
    6870:	e12fff1e 	bx	lr
    6874:	e1b0c08c 	lsls	r12, r12, #1
    6878:	e0b00000 	adcs	r0, r0, r0
    687c:	e0a11001 	adc	r1, r1, r1
    6880:	e3110601 	tst	r1, #1048576	; 0x100000
    6884:	e2444001 	sub	r4, r4, #1
    6888:	1afffff2 	bne	6858 <__adddf3+0x11c>
    688c:	e3310000 	teq	r1, #0
    6890:	13a03014 	movne	r3, #20
    6894:	03a03034 	moveq	r3, #52	; 0x34
    6898:	01a01000 	moveq	r1, r0
    689c:	03a00000 	moveq	r0, #0
    68a0:	e1a02001 	mov	r2, r1
    68a4:	e3520801 	cmp	r2, #65536	; 0x10000
    68a8:	21a02822 	lsrcs	r2, r2, #16
    68ac:	22433010 	subcs	r3, r3, #16
    68b0:	e3520c01 	cmp	r2, #256	; 0x100
    68b4:	21a02422 	lsrcs	r2, r2, #8
    68b8:	22433008 	subcs	r3, r3, #8
    68bc:	e3520010 	cmp	r2, #16
    68c0:	21a02222 	lsrcs	r2, r2, #4
    68c4:	22433004 	subcs	r3, r3, #4
    68c8:	e3520004 	cmp	r2, #4
    68cc:	22433002 	subcs	r3, r3, #2
    68d0:	304330a2 	subcc	r3, r3, r2, lsr #1
    68d4:	e04331a2 	sub	r3, r3, r2, lsr #3
    68d8:	e2532020 	subs	r2, r3, #32
    68dc:	aa000007 	bge	6900 <__adddf3+0x1c4>
    68e0:	e292200c 	adds	r2, r2, #12
    68e4:	da000004 	ble	68fc <__adddf3+0x1c0>
    68e8:	e282c014 	add	r12, r2, #20
    68ec:	e262200c 	rsb	r2, r2, #12
    68f0:	e1a00c11 	lsl	r0, r1, r12
    68f4:	e1a01231 	lsr	r1, r1, r2
    68f8:	ea000004 	b	6910 <__adddf3+0x1d4>
    68fc:	e2822014 	add	r2, r2, #20
    6900:	d262c020 	rsble	r12, r2, #32
    6904:	e1a01211 	lsl	r1, r1, r2
    6908:	d1811c30 	orrle	r1, r1, r0, lsr r12
    690c:	d1a00210 	lslle	r0, r0, r2
    6910:	e0544003 	subs	r4, r4, r3
    6914:	a0811a04 	addge	r1, r1, r4, lsl #20
    6918:	a1811005 	orrge	r1, r1, r5
    691c:	a8bd4030 	popge	{r4, r5, lr}
    6920:	a12fff1e 	bxge	lr
    6924:	e1e04004 	mvn	r4, r4
    6928:	e254401f 	subs	r4, r4, #31
    692c:	aa00000f 	bge	6970 <__adddf3+0x234>
    6930:	e294400c 	adds	r4, r4, #12
    6934:	ca000006 	bgt	6954 <__adddf3+0x218>
    6938:	e2844014 	add	r4, r4, #20
    693c:	e2642020 	rsb	r2, r4, #32
    6940:	e1a00430 	lsr	r0, r0, r4
    6944:	e1800211 	orr	r0, r0, r1, lsl r2
    6948:	e1851431 	orr	r1, r5, r1, lsr r4
    694c:	e8bd4030 	pop	{r4, r5, lr}
    6950:	e12fff1e 	bx	lr
    6954:	e264400c 	rsb	r4, r4, #12
    6958:	e2642020 	rsb	r2, r4, #32
    695c:	e1a00230 	lsr	r0, r0, r2
    6960:	e1800411 	orr	r0, r0, r1, lsl r4
    6964:	e1a01005 	mov	r1, r5
    6968:	e8bd4030 	pop	{r4, r5, lr}
    696c:	e12fff1e 	bx	lr
    6970:	e1a00431 	lsr	r0, r1, r4
    6974:	e1a01005 	mov	r1, r5
    6978:	e8bd4030 	pop	{r4, r5, lr}
    697c:	e12fff1e 	bx	lr
    6980:	e3340000 	teq	r4, #0
    6984:	e2233601 	eor	r3, r3, #1048576	; 0x100000
    6988:	02211601 	eoreq	r1, r1, #1048576	; 0x100000
    698c:	02844001 	addeq	r4, r4, #1
    6990:	12455001 	subne	r5, r5, #1
    6994:	eaffff8f 	b	67d8 <__adddf3+0x9c>
    6998:	e1f0cac4 	mvns	r12, r4, asr #21
    699c:	11f0cac5 	mvnsne	r12, r5, asr #21
    69a0:	0a00001d 	beq	6a1c <__adddf3+0x2e0>
    69a4:	e1340005 	teq	r4, r5
    69a8:	01300002 	teqeq	r0, r2
    69ac:	0a000004 	beq	69c4 <__adddf3+0x288>
    69b0:	e194c000 	orrs	r12, r4, r0
    69b4:	01a01003 	moveq	r1, r3
    69b8:	01a00002 	moveq	r0, r2
    69bc:	e8bd4030 	pop	{r4, r5, lr}
    69c0:	e12fff1e 	bx	lr
    69c4:	e1310003 	teq	r1, r3
    69c8:	13a01000 	movne	r1, #0
    69cc:	13a00000 	movne	r0, #0
    69d0:	18bd4030 	popne	{r4, r5, lr}
    69d4:	112fff1e 	bxne	lr
    69d8:	e1b0caa4 	lsrs	r12, r4, #21
    69dc:	1a000004 	bne	69f4 <__adddf3+0x2b8>
    69e0:	e1b00080 	lsls	r0, r0, #1
    69e4:	e0b11001 	adcs	r1, r1, r1
    69e8:	23811102 	orrcs	r1, r1, #-2147483648	; 0x80000000
    69ec:	e8bd4030 	pop	{r4, r5, lr}
    69f0:	e12fff1e 	bx	lr
    69f4:	e2944501 	adds	r4, r4, #4194304	; 0x400000
    69f8:	32811601 	addcc	r1, r1, #1048576	; 0x100000
    69fc:	38bd4030 	popcc	{r4, r5, lr}
    6a00:	312fff1e 	bxcc	lr
    6a04:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
    6a08:	e385147f 	orr	r1, r5, #2130706432	; 0x7f000000
    6a0c:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
    6a10:	e3a00000 	mov	r0, #0
    6a14:	e8bd4030 	pop	{r4, r5, lr}
    6a18:	e12fff1e 	bx	lr
    6a1c:	e1f0cac4 	mvns	r12, r4, asr #21
    6a20:	11a01003 	movne	r1, r3
    6a24:	11a00002 	movne	r0, r2
    6a28:	01f0cac5 	mvnseq	r12, r5, asr #21
    6a2c:	11a03001 	movne	r3, r1
    6a30:	11a02000 	movne	r2, r0
    6a34:	e1904601 	orrs	r4, r0, r1, lsl #12
    6a38:	01925603 	orrseq	r5, r2, r3, lsl #12
    6a3c:	01310003 	teqeq	r1, r3
    6a40:	13811702 	orrne	r1, r1, #524288	; 0x80000
    6a44:	e8bd4030 	pop	{r4, r5, lr}
    6a48:	e12fff1e 	bx	lr

00006a4c <__aeabi_ui2d>:
    6a4c:	e3300000 	teq	r0, #0
    6a50:	03a01000 	moveq	r1, #0
    6a54:	012fff1e 	bxeq	lr
    6a58:	e92d4030 	push	{r4, r5, lr}
    6a5c:	e3a04b01 	mov	r4, #1024	; 0x400
    6a60:	e2844032 	add	r4, r4, #50	; 0x32
    6a64:	e3a05000 	mov	r5, #0
    6a68:	e3a01000 	mov	r1, #0
    6a6c:	eaffff86 	b	688c <__adddf3+0x150>

00006a70 <__aeabi_i2d>:
    6a70:	e3300000 	teq	r0, #0
    6a74:	03a01000 	moveq	r1, #0
    6a78:	012fff1e 	bxeq	lr
    6a7c:	e92d4030 	push	{r4, r5, lr}
    6a80:	e3a04b01 	mov	r4, #1024	; 0x400
    6a84:	e2844032 	add	r4, r4, #50	; 0x32
    6a88:	e2105102 	ands	r5, r0, #-2147483648	; 0x80000000
    6a8c:	42600000 	rsbmi	r0, r0, #0
    6a90:	e3a01000 	mov	r1, #0
    6a94:	eaffff7c 	b	688c <__adddf3+0x150>

00006a98 <__aeabi_f2d>:
    6a98:	e1b02080 	lsls	r2, r0, #1
    6a9c:	e1a011c2 	asr	r1, r2, #3
    6aa0:	e1a01061 	rrx	r1, r1
    6aa4:	e1a00e02 	lsl	r0, r2, #28
    6aa8:	121234ff 	andsne	r3, r2, #-16777216	; 0xff000000
    6aac:	133304ff 	teqne	r3, #-16777216	; 0xff000000
    6ab0:	1221130e 	eorne	r1, r1, #939524096	; 0x38000000
    6ab4:	112fff1e 	bxne	lr
    6ab8:	e3320000 	teq	r2, #0
    6abc:	133304ff 	teqne	r3, #-16777216	; 0xff000000
    6ac0:	012fff1e 	bxeq	lr
    6ac4:	e92d4030 	push	{r4, r5, lr}
    6ac8:	e3a04d0e 	mov	r4, #896	; 0x380
    6acc:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
    6ad0:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
    6ad4:	eaffff6c 	b	688c <__adddf3+0x150>

00006ad8 <__aeabi_ul2d>:
    6ad8:	e1902001 	orrs	r2, r0, r1
    6adc:	012fff1e 	bxeq	lr
    6ae0:	e92d4030 	push	{r4, r5, lr}
    6ae4:	e3a05000 	mov	r5, #0
    6ae8:	ea000006 	b	6b08 <__aeabi_l2d+0x1c>

00006aec <__aeabi_l2d>:
    6aec:	e1902001 	orrs	r2, r0, r1
    6af0:	012fff1e 	bxeq	lr
    6af4:	e92d4030 	push	{r4, r5, lr}
    6af8:	e2115102 	ands	r5, r1, #-2147483648	; 0x80000000
    6afc:	5a000001 	bpl	6b08 <__aeabi_l2d+0x1c>
    6b00:	e2700000 	rsbs	r0, r0, #0
    6b04:	e2e11000 	rsc	r1, r1, #0
    6b08:	e3a04b01 	mov	r4, #1024	; 0x400
    6b0c:	e2844032 	add	r4, r4, #50	; 0x32
    6b10:	e1b0cb21 	lsrs	r12, r1, #22
    6b14:	0affff44 	beq	682c <__adddf3+0xf0>
    6b18:	e3a02003 	mov	r2, #3
    6b1c:	e1b0c1ac 	lsrs	r12, r12, #3
    6b20:	12822003 	addne	r2, r2, #3
    6b24:	e1b0c1ac 	lsrs	r12, r12, #3
    6b28:	12822003 	addne	r2, r2, #3
    6b2c:	e08221ac 	add	r2, r2, r12, lsr #3
    6b30:	e2623020 	rsb	r3, r2, #32
    6b34:	e1a0c310 	lsl	r12, r0, r3
    6b38:	e1a00230 	lsr	r0, r0, r2
    6b3c:	e1800311 	orr	r0, r0, r1, lsl r3
    6b40:	e1a01231 	lsr	r1, r1, r2
    6b44:	e0844002 	add	r4, r4, r2
    6b48:	eaffff37 	b	682c <__adddf3+0xf0>

00006b4c <__aeabi_dmul>:
    6b4c:	e92d4070 	push	{r4, r5, r6, lr}
    6b50:	e3a0c0ff 	mov	r12, #255	; 0xff
    6b54:	e38ccc07 	orr	r12, r12, #1792	; 0x700
    6b58:	e01c4a21 	ands	r4, r12, r1, lsr #20
    6b5c:	101c5a23 	andsne	r5, r12, r3, lsr #20
    6b60:	1134000c 	teqne	r4, r12
    6b64:	1135000c 	teqne	r5, r12
    6b68:	0b000075 	bleq	6d44 <__aeabi_dmul+0x1f8>
    6b6c:	e0844005 	add	r4, r4, r5
    6b70:	e0216003 	eor	r6, r1, r3
    6b74:	e1c11a8c 	bic	r1, r1, r12, lsl #21
    6b78:	e1c33a8c 	bic	r3, r3, r12, lsl #21
    6b7c:	e1905601 	orrs	r5, r0, r1, lsl #12
    6b80:	11925603 	orrsne	r5, r2, r3, lsl #12
    6b84:	e3811601 	orr	r1, r1, #1048576	; 0x100000
    6b88:	e3833601 	orr	r3, r3, #1048576	; 0x100000
    6b8c:	0a00001d 	beq	6c08 <__aeabi_dmul+0xbc>
    6b90:	e08ec290 	umull	r12, lr, r0, r2
    6b94:	e3a05000 	mov	r5, #0
    6b98:	e0a5e291 	umlal	lr, r5, r1, r2
    6b9c:	e2062102 	and	r2, r6, #-2147483648	; 0x80000000
    6ba0:	e0a5e390 	umlal	lr, r5, r0, r3
    6ba4:	e3a06000 	mov	r6, #0
    6ba8:	e0a65391 	umlal	r5, r6, r1, r3
    6bac:	e33c0000 	teq	r12, #0
    6bb0:	138ee001 	orrne	lr, lr, #1
    6bb4:	e24440ff 	sub	r4, r4, #255	; 0xff
    6bb8:	e3560c02 	cmp	r6, #512	; 0x200
    6bbc:	e2c44c03 	sbc	r4, r4, #768	; 0x300
    6bc0:	2a000002 	bcs	6bd0 <__aeabi_dmul+0x84>
    6bc4:	e1b0e08e 	lsls	lr, lr, #1
    6bc8:	e0b55005 	adcs	r5, r5, r5
    6bcc:	e0a66006 	adc	r6, r6, r6
    6bd0:	e1821586 	orr	r1, r2, r6, lsl #11
    6bd4:	e1811aa5 	orr	r1, r1, r5, lsr #21
    6bd8:	e1a00585 	lsl	r0, r5, #11
    6bdc:	e1800aae 	orr	r0, r0, lr, lsr #21
    6be0:	e1a0e58e 	lsl	lr, lr, #11
    6be4:	e254c0fd 	subs	r12, r4, #253	; 0xfd
    6be8:	835c0c07 	cmphi	r12, #1792	; 0x700
    6bec:	8a000011 	bhi	6c38 <__aeabi_dmul+0xec>
    6bf0:	e35e0102 	cmp	lr, #-2147483648	; 0x80000000
    6bf4:	01b0e0a0 	lsrseq	lr, r0, #1
    6bf8:	e2b00000 	adcs	r0, r0, #0
    6bfc:	e0a11a04 	adc	r1, r1, r4, lsl #20
    6c00:	e8bd4070 	pop	{r4, r5, r6, lr}
    6c04:	e12fff1e 	bx	lr
    6c08:	e2066102 	and	r6, r6, #-2147483648	; 0x80000000
    6c0c:	e1861001 	orr	r1, r6, r1
    6c10:	e1800002 	orr	r0, r0, r2
    6c14:	e0211003 	eor	r1, r1, r3
    6c18:	e05440ac 	subs	r4, r4, r12, lsr #1
    6c1c:	c074500c 	rsbsgt	r5, r4, r12
    6c20:	c1811a04 	orrgt	r1, r1, r4, lsl #20
    6c24:	c8bd4070 	popgt	{r4, r5, r6, lr}
    6c28:	c12fff1e 	bxgt	lr
    6c2c:	e3811601 	orr	r1, r1, #1048576	; 0x100000
    6c30:	e3a0e000 	mov	lr, #0
    6c34:	e2544001 	subs	r4, r4, #1
    6c38:	ca00005d 	bgt	6db4 <__aeabi_dmul+0x268>
    6c3c:	e3740036 	cmn	r4, #54	; 0x36
    6c40:	d3a00000 	movle	r0, #0
    6c44:	d2011102 	andle	r1, r1, #-2147483648	; 0x80000000
    6c48:	d8bd4070 	pople	{r4, r5, r6, lr}
    6c4c:	d12fff1e 	bxle	lr
    6c50:	e2644000 	rsb	r4, r4, #0
    6c54:	e2544020 	subs	r4, r4, #32
    6c58:	aa00001a 	bge	6cc8 <__aeabi_dmul+0x17c>
    6c5c:	e294400c 	adds	r4, r4, #12
    6c60:	ca00000c 	bgt	6c98 <__aeabi_dmul+0x14c>
    6c64:	e2844014 	add	r4, r4, #20
    6c68:	e2645020 	rsb	r5, r4, #32
    6c6c:	e1a03510 	lsl	r3, r0, r5
    6c70:	e1a00430 	lsr	r0, r0, r4
    6c74:	e1800511 	orr	r0, r0, r1, lsl r5
    6c78:	e2012102 	and	r2, r1, #-2147483648	; 0x80000000
    6c7c:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
    6c80:	e0900fa3 	adds	r0, r0, r3, lsr #31
    6c84:	e0a21431 	adc	r1, r2, r1, lsr r4
    6c88:	e19ee083 	orrs	lr, lr, r3, lsl #1
    6c8c:	01c00fa3 	biceq	r0, r0, r3, lsr #31
    6c90:	e8bd4070 	pop	{r4, r5, r6, lr}
    6c94:	e12fff1e 	bx	lr
    6c98:	e264400c 	rsb	r4, r4, #12
    6c9c:	e2645020 	rsb	r5, r4, #32
    6ca0:	e1a03410 	lsl	r3, r0, r4
    6ca4:	e1a00530 	lsr	r0, r0, r5
    6ca8:	e1800411 	orr	r0, r0, r1, lsl r4
    6cac:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    6cb0:	e0900fa3 	adds	r0, r0, r3, lsr #31
    6cb4:	e2a11000 	adc	r1, r1, #0
    6cb8:	e19ee083 	orrs	lr, lr, r3, lsl #1
    6cbc:	01c00fa3 	biceq	r0, r0, r3, lsr #31
    6cc0:	e8bd4070 	pop	{r4, r5, r6, lr}
    6cc4:	e12fff1e 	bx	lr
    6cc8:	e2645020 	rsb	r5, r4, #32
    6ccc:	e18ee510 	orr	lr, lr, r0, lsl r5
    6cd0:	e1a03430 	lsr	r3, r0, r4
    6cd4:	e1833511 	orr	r3, r3, r1, lsl r5
    6cd8:	e1a00431 	lsr	r0, r1, r4
    6cdc:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    6ce0:	e1c00431 	bic	r0, r0, r1, lsr r4
    6ce4:	e0800fa3 	add	r0, r0, r3, lsr #31
    6ce8:	e19ee083 	orrs	lr, lr, r3, lsl #1
    6cec:	01c00fa3 	biceq	r0, r0, r3, lsr #31
    6cf0:	e8bd4070 	pop	{r4, r5, r6, lr}
    6cf4:	e12fff1e 	bx	lr
    6cf8:	e3340000 	teq	r4, #0
    6cfc:	1a000008 	bne	6d24 <__aeabi_dmul+0x1d8>
    6d00:	e2016102 	and	r6, r1, #-2147483648	; 0x80000000
    6d04:	e1b00080 	lsls	r0, r0, #1
    6d08:	e0a11001 	adc	r1, r1, r1
    6d0c:	e3110601 	tst	r1, #1048576	; 0x100000
    6d10:	02444001 	subeq	r4, r4, #1
    6d14:	0afffffa 	beq	6d04 <__aeabi_dmul+0x1b8>
    6d18:	e1811006 	orr	r1, r1, r6
    6d1c:	e3350000 	teq	r5, #0
    6d20:	112fff1e 	bxne	lr
    6d24:	e2036102 	and	r6, r3, #-2147483648	; 0x80000000
    6d28:	e1b02082 	lsls	r2, r2, #1
    6d2c:	e0a33003 	adc	r3, r3, r3
    6d30:	e3130601 	tst	r3, #1048576	; 0x100000
    6d34:	02455001 	subeq	r5, r5, #1
    6d38:	0afffffa 	beq	6d28 <__aeabi_dmul+0x1dc>
    6d3c:	e1833006 	orr	r3, r3, r6
    6d40:	e12fff1e 	bx	lr
    6d44:	e134000c 	teq	r4, r12
    6d48:	e00c5a23 	and	r5, r12, r3, lsr #20
    6d4c:	1135000c 	teqne	r5, r12
    6d50:	0a000007 	beq	6d74 <__aeabi_dmul+0x228>
    6d54:	e1906081 	orrs	r6, r0, r1, lsl #1
    6d58:	11926083 	orrsne	r6, r2, r3, lsl #1
    6d5c:	1affffe5 	bne	6cf8 <__aeabi_dmul+0x1ac>
    6d60:	e0211003 	eor	r1, r1, r3
    6d64:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    6d68:	e3a00000 	mov	r0, #0
    6d6c:	e8bd4070 	pop	{r4, r5, r6, lr}
    6d70:	e12fff1e 	bx	lr
    6d74:	e1906081 	orrs	r6, r0, r1, lsl #1
    6d78:	01a00002 	moveq	r0, r2
    6d7c:	01a01003 	moveq	r1, r3
    6d80:	11926083 	orrsne	r6, r2, r3, lsl #1
    6d84:	0a000010 	beq	6dcc <__aeabi_dmul+0x280>
    6d88:	e134000c 	teq	r4, r12
    6d8c:	1a000001 	bne	6d98 <__aeabi_dmul+0x24c>
    6d90:	e1906601 	orrs	r6, r0, r1, lsl #12
    6d94:	1a00000c 	bne	6dcc <__aeabi_dmul+0x280>
    6d98:	e135000c 	teq	r5, r12
    6d9c:	1a000003 	bne	6db0 <__aeabi_dmul+0x264>
    6da0:	e1926603 	orrs	r6, r2, r3, lsl #12
    6da4:	11a00002 	movne	r0, r2
    6da8:	11a01003 	movne	r1, r3
    6dac:	1a000006 	bne	6dcc <__aeabi_dmul+0x280>
    6db0:	e0211003 	eor	r1, r1, r3
    6db4:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    6db8:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
    6dbc:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
    6dc0:	e3a00000 	mov	r0, #0
    6dc4:	e8bd4070 	pop	{r4, r5, r6, lr}
    6dc8:	e12fff1e 	bx	lr
    6dcc:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
    6dd0:	e381173e 	orr	r1, r1, #16252928	; 0xf80000
    6dd4:	e8bd4070 	pop	{r4, r5, r6, lr}
    6dd8:	e12fff1e 	bx	lr

00006ddc <__aeabi_ddiv>:
    6ddc:	e92d4070 	push	{r4, r5, r6, lr}
    6de0:	e3a0c0ff 	mov	r12, #255	; 0xff
    6de4:	e38ccc07 	orr	r12, r12, #1792	; 0x700
    6de8:	e01c4a21 	ands	r4, r12, r1, lsr #20
    6dec:	101c5a23 	andsne	r5, r12, r3, lsr #20
    6df0:	1134000c 	teqne	r4, r12
    6df4:	1135000c 	teqne	r5, r12
    6df8:	0b00005e 	bleq	6f78 <__aeabi_ddiv+0x19c>
    6dfc:	e0444005 	sub	r4, r4, r5
    6e00:	e021e003 	eor	lr, r1, r3
    6e04:	e1925603 	orrs	r5, r2, r3, lsl #12
    6e08:	e1a01601 	lsl	r1, r1, #12
    6e0c:	0a00004c 	beq	6f44 <__aeabi_ddiv+0x168>
    6e10:	e1a03603 	lsl	r3, r3, #12
    6e14:	e3a05201 	mov	r5, #268435456	; 0x10000000
    6e18:	e1853223 	orr	r3, r5, r3, lsr #4
    6e1c:	e1833c22 	orr	r3, r3, r2, lsr #24
    6e20:	e1a02402 	lsl	r2, r2, #8
    6e24:	e1855221 	orr	r5, r5, r1, lsr #4
    6e28:	e1855c20 	orr	r5, r5, r0, lsr #24
    6e2c:	e1a06400 	lsl	r6, r0, #8
    6e30:	e20e1102 	and	r1, lr, #-2147483648	; 0x80000000
    6e34:	e1550003 	cmp	r5, r3
    6e38:	01560002 	cmpeq	r6, r2
    6e3c:	e2a440fd 	adc	r4, r4, #253	; 0xfd
    6e40:	e2844c03 	add	r4, r4, #768	; 0x300
    6e44:	2a000001 	bcs	6e50 <__aeabi_ddiv+0x74>
    6e48:	e1b030a3 	lsrs	r3, r3, #1
    6e4c:	e1a02062 	rrx	r2, r2
    6e50:	e0566002 	subs	r6, r6, r2
    6e54:	e0c55003 	sbc	r5, r5, r3
    6e58:	e1b030a3 	lsrs	r3, r3, #1
    6e5c:	e1a02062 	rrx	r2, r2
    6e60:	e3a00601 	mov	r0, #1048576	; 0x100000
    6e64:	e3a0c702 	mov	r12, #524288	; 0x80000
    6e68:	e056e002 	subs	lr, r6, r2
    6e6c:	e0d5e003 	sbcs	lr, r5, r3
    6e70:	20466002 	subcs	r6, r6, r2
    6e74:	21a0500e 	movcs	r5, lr
    6e78:	2180000c 	orrcs	r0, r0, r12
    6e7c:	e1b030a3 	lsrs	r3, r3, #1
    6e80:	e1a02062 	rrx	r2, r2
    6e84:	e056e002 	subs	lr, r6, r2
    6e88:	e0d5e003 	sbcs	lr, r5, r3
    6e8c:	20466002 	subcs	r6, r6, r2
    6e90:	21a0500e 	movcs	r5, lr
    6e94:	218000ac 	orrcs	r0, r0, r12, lsr #1
    6e98:	e1b030a3 	lsrs	r3, r3, #1
    6e9c:	e1a02062 	rrx	r2, r2
    6ea0:	e056e002 	subs	lr, r6, r2
    6ea4:	e0d5e003 	sbcs	lr, r5, r3
    6ea8:	20466002 	subcs	r6, r6, r2
    6eac:	21a0500e 	movcs	r5, lr
    6eb0:	2180012c 	orrcs	r0, r0, r12, lsr #2
    6eb4:	e1b030a3 	lsrs	r3, r3, #1
    6eb8:	e1a02062 	rrx	r2, r2
    6ebc:	e056e002 	subs	lr, r6, r2
    6ec0:	e0d5e003 	sbcs	lr, r5, r3
    6ec4:	20466002 	subcs	r6, r6, r2
    6ec8:	21a0500e 	movcs	r5, lr
    6ecc:	218001ac 	orrcs	r0, r0, r12, lsr #3
    6ed0:	e195e006 	orrs	lr, r5, r6
    6ed4:	0a00000d 	beq	6f10 <__aeabi_ddiv+0x134>
    6ed8:	e1a05205 	lsl	r5, r5, #4
    6edc:	e1855e26 	orr	r5, r5, r6, lsr #28
    6ee0:	e1a06206 	lsl	r6, r6, #4
    6ee4:	e1a03183 	lsl	r3, r3, #3
    6ee8:	e1833ea2 	orr	r3, r3, r2, lsr #29
    6eec:	e1a02182 	lsl	r2, r2, #3
    6ef0:	e1b0c22c 	lsrs	r12, r12, #4
    6ef4:	1affffdb 	bne	6e68 <__aeabi_ddiv+0x8c>
    6ef8:	e3110601 	tst	r1, #1048576	; 0x100000
    6efc:	1a000006 	bne	6f1c <__aeabi_ddiv+0x140>
    6f00:	e1811000 	orr	r1, r1, r0
    6f04:	e3a00000 	mov	r0, #0
    6f08:	e3a0c102 	mov	r12, #-2147483648	; 0x80000000
    6f0c:	eaffffd5 	b	6e68 <__aeabi_ddiv+0x8c>
    6f10:	e3110601 	tst	r1, #1048576	; 0x100000
    6f14:	01811000 	orreq	r1, r1, r0
    6f18:	03a00000 	moveq	r0, #0
    6f1c:	e254c0fd 	subs	r12, r4, #253	; 0xfd
    6f20:	835c0c07 	cmphi	r12, #1792	; 0x700
    6f24:	8affff43 	bhi	6c38 <__aeabi_dmul+0xec>
    6f28:	e055c003 	subs	r12, r5, r3
    6f2c:	0056c002 	subseq	r12, r6, r2
    6f30:	01b0c0a0 	lsrseq	r12, r0, #1
    6f34:	e2b00000 	adcs	r0, r0, #0
    6f38:	e0a11a04 	adc	r1, r1, r4, lsl #20
    6f3c:	e8bd4070 	pop	{r4, r5, r6, lr}
    6f40:	e12fff1e 	bx	lr
    6f44:	e20ee102 	and	lr, lr, #-2147483648	; 0x80000000
    6f48:	e18e1621 	orr	r1, lr, r1, lsr #12
    6f4c:	e09440ac 	adds	r4, r4, r12, lsr #1
    6f50:	c074500c 	rsbsgt	r5, r4, r12
    6f54:	c1811a04 	orrgt	r1, r1, r4, lsl #20
    6f58:	c8bd4070 	popgt	{r4, r5, r6, lr}
    6f5c:	c12fff1e 	bxgt	lr
    6f60:	e3811601 	orr	r1, r1, #1048576	; 0x100000
    6f64:	e3a0e000 	mov	lr, #0
    6f68:	e2544001 	subs	r4, r4, #1
    6f6c:	eaffff31 	b	6c38 <__aeabi_dmul+0xec>
    6f70:	e185e006 	orr	lr, r5, r6
    6f74:	eaffff2f 	b	6c38 <__aeabi_dmul+0xec>
    6f78:	e00c5a23 	and	r5, r12, r3, lsr #20
    6f7c:	e134000c 	teq	r4, r12
    6f80:	0135000c 	teqeq	r5, r12
    6f84:	0affff90 	beq	6dcc <__aeabi_dmul+0x280>
    6f88:	e134000c 	teq	r4, r12
    6f8c:	1a000006 	bne	6fac <__aeabi_ddiv+0x1d0>
    6f90:	e1904601 	orrs	r4, r0, r1, lsl #12
    6f94:	1affff8c 	bne	6dcc <__aeabi_dmul+0x280>
    6f98:	e135000c 	teq	r5, r12
    6f9c:	1affff83 	bne	6db0 <__aeabi_dmul+0x264>
    6fa0:	e1a00002 	mov	r0, r2
    6fa4:	e1a01003 	mov	r1, r3
    6fa8:	eaffff87 	b	6dcc <__aeabi_dmul+0x280>
    6fac:	e135000c 	teq	r5, r12
    6fb0:	1a000004 	bne	6fc8 <__aeabi_ddiv+0x1ec>
    6fb4:	e1925603 	orrs	r5, r2, r3, lsl #12
    6fb8:	0affff68 	beq	6d60 <__aeabi_dmul+0x214>
    6fbc:	e1a00002 	mov	r0, r2
    6fc0:	e1a01003 	mov	r1, r3
    6fc4:	eaffff80 	b	6dcc <__aeabi_dmul+0x280>
    6fc8:	e1906081 	orrs	r6, r0, r1, lsl #1
    6fcc:	11926083 	orrsne	r6, r2, r3, lsl #1
    6fd0:	1affff48 	bne	6cf8 <__aeabi_dmul+0x1ac>
    6fd4:	e1904081 	orrs	r4, r0, r1, lsl #1
    6fd8:	1affff74 	bne	6db0 <__aeabi_dmul+0x264>
    6fdc:	e1925083 	orrs	r5, r2, r3, lsl #1
    6fe0:	1affff5e 	bne	6d60 <__aeabi_dmul+0x214>
    6fe4:	eaffff78 	b	6dcc <__aeabi_dmul+0x280>

00006fe8 <__gedf2>:
    6fe8:	e3e0c000 	mvn	r12, #0
    6fec:	ea000002 	b	6ffc <__cmpdf2+0x4>

00006ff0 <__ledf2>:
    6ff0:	e3a0c001 	mov	r12, #1
    6ff4:	ea000000 	b	6ffc <__cmpdf2+0x4>

00006ff8 <__cmpdf2>:
    6ff8:	e3a0c001 	mov	r12, #1
    6ffc:	e52dc004 	push	{r12}		; (str r12, [sp, #-4]!)
    7000:	e1a0c081 	lsl	r12, r1, #1
    7004:	e1f0cacc 	mvns	r12, r12, asr #21
    7008:	e1a0c083 	lsl	r12, r3, #1
    700c:	11f0cacc 	mvnsne	r12, r12, asr #21
    7010:	0a00000e 	beq	7050 <__cmpdf2+0x58>
    7014:	e28dd004 	add	sp, sp, #4
    7018:	e190c081 	orrs	r12, r0, r1, lsl #1
    701c:	0192c083 	orrseq	r12, r2, r3, lsl #1
    7020:	11310003 	teqne	r1, r3
    7024:	01300002 	teqeq	r0, r2
    7028:	03a00000 	moveq	r0, #0
    702c:	012fff1e 	bxeq	lr
    7030:	e3700000 	cmn	r0, #0
    7034:	e1310003 	teq	r1, r3
    7038:	51510003 	cmppl	r1, r3
    703c:	01500002 	cmpeq	r0, r2
    7040:	21a00fc3 	asrcs	r0, r3, #31
    7044:	31e00fc3 	mvncc	r0, r3, asr #31
    7048:	e3800001 	orr	r0, r0, #1
    704c:	e12fff1e 	bx	lr
    7050:	e1a0c081 	lsl	r12, r1, #1
    7054:	e1f0cacc 	mvns	r12, r12, asr #21
    7058:	1a000001 	bne	7064 <__cmpdf2+0x6c>
    705c:	e190c601 	orrs	r12, r0, r1, lsl #12
    7060:	1a000004 	bne	7078 <__cmpdf2+0x80>
    7064:	e1a0c083 	lsl	r12, r3, #1
    7068:	e1f0cacc 	mvns	r12, r12, asr #21
    706c:	1affffe8 	bne	7014 <__cmpdf2+0x1c>
    7070:	e192c603 	orrs	r12, r2, r3, lsl #12
    7074:	0affffe6 	beq	7014 <__cmpdf2+0x1c>
    7078:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    707c:	e12fff1e 	bx	lr

00007080 <__aeabi_cdrcmple>:
    7080:	e1a0c000 	mov	r12, r0
    7084:	e1a00002 	mov	r0, r2
    7088:	e1a0200c 	mov	r2, r12
    708c:	e1a0c001 	mov	r12, r1
    7090:	e1a01003 	mov	r1, r3
    7094:	e1a0300c 	mov	r3, r12
    7098:	eaffffff 	b	709c <__aeabi_cdcmpeq>

0000709c <__aeabi_cdcmpeq>:
    709c:	e92d4001 	push	{r0, lr}
    70a0:	ebffffd4 	bl	6ff8 <__cmpdf2>
    70a4:	e3500000 	cmp	r0, #0
    70a8:	43700000 	cmnmi	r0, #0
    70ac:	e8bd4001 	pop	{r0, lr}
    70b0:	e12fff1e 	bx	lr

000070b4 <__aeabi_dcmpeq>:
    70b4:	e52de008 	str	lr, [sp, #-8]!
    70b8:	ebfffff7 	bl	709c <__aeabi_cdcmpeq>
    70bc:	03a00001 	moveq	r0, #1
    70c0:	13a00000 	movne	r0, #0
    70c4:	e49de008 	ldr	lr, [sp], #8
    70c8:	e12fff1e 	bx	lr

000070cc <__aeabi_dcmplt>:
    70cc:	e52de008 	str	lr, [sp, #-8]!
    70d0:	ebfffff1 	bl	709c <__aeabi_cdcmpeq>
    70d4:	33a00001 	movcc	r0, #1
    70d8:	23a00000 	movcs	r0, #0
    70dc:	e49de008 	ldr	lr, [sp], #8
    70e0:	e12fff1e 	bx	lr

000070e4 <__aeabi_dcmple>:
    70e4:	e52de008 	str	lr, [sp, #-8]!
    70e8:	ebffffeb 	bl	709c <__aeabi_cdcmpeq>
    70ec:	93a00001 	movls	r0, #1
    70f0:	83a00000 	movhi	r0, #0
    70f4:	e49de008 	ldr	lr, [sp], #8
    70f8:	e12fff1e 	bx	lr

000070fc <__aeabi_dcmpge>:
    70fc:	e52de008 	str	lr, [sp, #-8]!
    7100:	ebffffde 	bl	7080 <__aeabi_cdrcmple>
    7104:	93a00001 	movls	r0, #1
    7108:	83a00000 	movhi	r0, #0
    710c:	e49de008 	ldr	lr, [sp], #8
    7110:	e12fff1e 	bx	lr

00007114 <__aeabi_dcmpgt>:
    7114:	e52de008 	str	lr, [sp, #-8]!
    7118:	ebffffd8 	bl	7080 <__aeabi_cdrcmple>
    711c:	33a00001 	movcc	r0, #1
    7120:	23a00000 	movcs	r0, #0
    7124:	e49de008 	ldr	lr, [sp], #8
    7128:	e12fff1e 	bx	lr

0000712c <__aeabi_d2iz>:
    712c:	e1a02081 	lsl	r2, r1, #1
    7130:	e2922602 	adds	r2, r2, #2097152	; 0x200000
    7134:	2a00000c 	bcs	716c <__aeabi_d2iz+0x40>
    7138:	5a000009 	bpl	7164 <__aeabi_d2iz+0x38>
    713c:	e3e03e3e 	mvn	r3, #992	; 0x3e0
    7140:	e0532ac2 	subs	r2, r3, r2, asr #21
    7144:	9a00000a 	bls	7174 <__aeabi_d2iz+0x48>
    7148:	e1a03581 	lsl	r3, r1, #11
    714c:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
    7150:	e1833aa0 	orr	r3, r3, r0, lsr #21
    7154:	e3110102 	tst	r1, #-2147483648	; 0x80000000
    7158:	e1a00233 	lsr	r0, r3, r2
    715c:	12600000 	rsbne	r0, r0, #0
    7160:	e12fff1e 	bx	lr
    7164:	e3a00000 	mov	r0, #0
    7168:	e12fff1e 	bx	lr
    716c:	e1900601 	orrs	r0, r0, r1, lsl #12
    7170:	1a000002 	bne	7180 <__aeabi_d2iz+0x54>
    7174:	e2110102 	ands	r0, r1, #-2147483648	; 0x80000000
    7178:	03e00102 	mvneq	r0, #-2147483648	; 0x80000000
    717c:	e12fff1e 	bx	lr
    7180:	e3a00000 	mov	r0, #0
    7184:	e12fff1e 	bx	lr

00007188 <__aeabi_frsub>:
    7188:	e2200102 	eor	r0, r0, #-2147483648	; 0x80000000
    718c:	ea000000 	b	7194 <__addsf3>

00007190 <__aeabi_fsub>:
    7190:	e2211102 	eor	r1, r1, #-2147483648	; 0x80000000

00007194 <__addsf3>:
    7194:	e1b02080 	lsls	r2, r0, #1
    7198:	11b03081 	lslsne	r3, r1, #1
    719c:	11320003 	teqne	r2, r3
    71a0:	11f0cc42 	mvnsne	r12, r2, asr #24
    71a4:	11f0cc43 	mvnsne	r12, r3, asr #24
    71a8:	0a000047 	beq	72cc <__addsf3+0x138>
    71ac:	e1a02c22 	lsr	r2, r2, #24
    71b0:	e0723c23 	rsbs	r3, r2, r3, lsr #24
    71b4:	c0822003 	addgt	r2, r2, r3
    71b8:	c0201001 	eorgt	r1, r0, r1
    71bc:	c0210000 	eorgt	r0, r1, r0
    71c0:	c0201001 	eorgt	r1, r0, r1
    71c4:	b2633000 	rsblt	r3, r3, #0
    71c8:	e3530019 	cmp	r3, #25
    71cc:	812fff1e 	bxhi	lr
    71d0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    71d4:	e3800502 	orr	r0, r0, #8388608	; 0x800000
    71d8:	e3c004ff 	bic	r0, r0, #-16777216	; 0xff000000
    71dc:	12600000 	rsbne	r0, r0, #0
    71e0:	e3110102 	tst	r1, #-2147483648	; 0x80000000
    71e4:	e3811502 	orr	r1, r1, #8388608	; 0x800000
    71e8:	e3c114ff 	bic	r1, r1, #-16777216	; 0xff000000
    71ec:	12611000 	rsbne	r1, r1, #0
    71f0:	e1320003 	teq	r2, r3
    71f4:	0a00002e 	beq	72b4 <__addsf3+0x120>
    71f8:	e2422001 	sub	r2, r2, #1
    71fc:	e0900351 	adds	r0, r0, r1, asr r3
    7200:	e2633020 	rsb	r3, r3, #32
    7204:	e1a01311 	lsl	r1, r1, r3
    7208:	e2003102 	and	r3, r0, #-2147483648	; 0x80000000
    720c:	5a000001 	bpl	7218 <__addsf3+0x84>
    7210:	e2711000 	rsbs	r1, r1, #0
    7214:	e2e00000 	rsc	r0, r0, #0
    7218:	e3500502 	cmp	r0, #8388608	; 0x800000
    721c:	3a00000b 	bcc	7250 <__addsf3+0xbc>
    7220:	e3500401 	cmp	r0, #16777216	; 0x1000000
    7224:	3a000004 	bcc	723c <__addsf3+0xa8>
    7228:	e1b000a0 	lsrs	r0, r0, #1
    722c:	e1a01061 	rrx	r1, r1
    7230:	e2822001 	add	r2, r2, #1
    7234:	e35200fe 	cmp	r2, #254	; 0xfe
    7238:	2a000038 	bcs	7320 <__addsf3+0x18c>
    723c:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
    7240:	e0a00b82 	adc	r0, r0, r2, lsl #23
    7244:	03c00001 	biceq	r0, r0, #1
    7248:	e1800003 	orr	r0, r0, r3
    724c:	e12fff1e 	bx	lr
    7250:	e1b01081 	lsls	r1, r1, #1
    7254:	e0a00000 	adc	r0, r0, r0
    7258:	e3100502 	tst	r0, #8388608	; 0x800000
    725c:	e2422001 	sub	r2, r2, #1
    7260:	1afffff5 	bne	723c <__addsf3+0xa8>
    7264:	e1b0c620 	lsrs	r12, r0, #12
    7268:	01a00600 	lsleq	r0, r0, #12
    726c:	0242200c 	subeq	r2, r2, #12
    7270:	e31008ff 	tst	r0, #16711680	; 0xff0000
    7274:	01a00400 	lsleq	r0, r0, #8
    7278:	02422008 	subeq	r2, r2, #8
    727c:	e310060f 	tst	r0, #15728640	; 0xf00000
    7280:	01a00200 	lsleq	r0, r0, #4
    7284:	02422004 	subeq	r2, r2, #4
    7288:	e3100503 	tst	r0, #12582912	; 0xc00000
    728c:	01a00100 	lsleq	r0, r0, #2
    7290:	02422002 	subeq	r2, r2, #2
    7294:	e3500502 	cmp	r0, #8388608	; 0x800000
    7298:	31a00080 	lslcc	r0, r0, #1
    729c:	e2d22000 	sbcs	r2, r2, #0
    72a0:	a0800b82 	addge	r0, r0, r2, lsl #23
    72a4:	b2622000 	rsblt	r2, r2, #0
    72a8:	a1800003 	orrge	r0, r0, r3
    72ac:	b1830230 	orrlt	r0, r3, r0, lsr r2
    72b0:	e12fff1e 	bx	lr
    72b4:	e3320000 	teq	r2, #0
    72b8:	e2211502 	eor	r1, r1, #8388608	; 0x800000
    72bc:	02200502 	eoreq	r0, r0, #8388608	; 0x800000
    72c0:	02822001 	addeq	r2, r2, #1
    72c4:	12433001 	subne	r3, r3, #1
    72c8:	eaffffca 	b	71f8 <__addsf3+0x64>
    72cc:	e1a03081 	lsl	r3, r1, #1
    72d0:	e1f0cc42 	mvns	r12, r2, asr #24
    72d4:	11f0cc43 	mvnsne	r12, r3, asr #24
    72d8:	0a000013 	beq	732c <__addsf3+0x198>
    72dc:	e1320003 	teq	r2, r3
    72e0:	0a000002 	beq	72f0 <__addsf3+0x15c>
    72e4:	e3320000 	teq	r2, #0
    72e8:	01a00001 	moveq	r0, r1
    72ec:	e12fff1e 	bx	lr
    72f0:	e1300001 	teq	r0, r1
    72f4:	13a00000 	movne	r0, #0
    72f8:	112fff1e 	bxne	lr
    72fc:	e31204ff 	tst	r2, #-16777216	; 0xff000000
    7300:	1a000002 	bne	7310 <__addsf3+0x17c>
    7304:	e1b00080 	lsls	r0, r0, #1
    7308:	23800102 	orrcs	r0, r0, #-2147483648	; 0x80000000
    730c:	e12fff1e 	bx	lr
    7310:	e2922402 	adds	r2, r2, #33554432	; 0x2000000
    7314:	32800502 	addcc	r0, r0, #8388608	; 0x800000
    7318:	312fff1e 	bxcc	lr
    731c:	e2003102 	and	r3, r0, #-2147483648	; 0x80000000
    7320:	e383047f 	orr	r0, r3, #2130706432	; 0x7f000000
    7324:	e3800502 	orr	r0, r0, #8388608	; 0x800000
    7328:	e12fff1e 	bx	lr
    732c:	e1f02c42 	mvns	r2, r2, asr #24
    7330:	11a00001 	movne	r0, r1
    7334:	01f03c43 	mvnseq	r3, r3, asr #24
    7338:	11a01000 	movne	r1, r0
    733c:	e1b02480 	lsls	r2, r0, #9
    7340:	01b03481 	lslseq	r3, r1, #9
    7344:	01300001 	teqeq	r0, r1
    7348:	13800501 	orrne	r0, r0, #4194304	; 0x400000
    734c:	e12fff1e 	bx	lr

00007350 <__aeabi_ui2f>:
    7350:	e3a03000 	mov	r3, #0
    7354:	ea000001 	b	7360 <__aeabi_i2f+0x8>

00007358 <__aeabi_i2f>:
    7358:	e2103102 	ands	r3, r0, #-2147483648	; 0x80000000
    735c:	42600000 	rsbmi	r0, r0, #0
    7360:	e1b0c000 	movs	r12, r0
    7364:	012fff1e 	bxeq	lr
    7368:	e383344b 	orr	r3, r3, #1258291200	; 0x4b000000
    736c:	e1a01000 	mov	r1, r0
    7370:	e3a00000 	mov	r0, #0
    7374:	ea00000f 	b	73b8 <__aeabi_l2f+0x30>

00007378 <__aeabi_ul2f>:
    7378:	e1902001 	orrs	r2, r0, r1
    737c:	012fff1e 	bxeq	lr
    7380:	e3a03000 	mov	r3, #0
    7384:	ea000005 	b	73a0 <__aeabi_l2f+0x18>

00007388 <__aeabi_l2f>:
    7388:	e1902001 	orrs	r2, r0, r1
    738c:	012fff1e 	bxeq	lr
    7390:	e2113102 	ands	r3, r1, #-2147483648	; 0x80000000
    7394:	5a000001 	bpl	73a0 <__aeabi_l2f+0x18>
    7398:	e2700000 	rsbs	r0, r0, #0
    739c:	e2e11000 	rsc	r1, r1, #0
    73a0:	e1b0c001 	movs	r12, r1
    73a4:	01a0c000 	moveq	r12, r0
    73a8:	01a01000 	moveq	r1, r0
    73ac:	03a00000 	moveq	r0, #0
    73b0:	e383345b 	orr	r3, r3, #1526726656	; 0x5b000000
    73b4:	02433201 	subeq	r3, r3, #268435456	; 0x10000000
    73b8:	e2433502 	sub	r3, r3, #8388608	; 0x800000
    73bc:	e3a02017 	mov	r2, #23
    73c0:	e35c0801 	cmp	r12, #65536	; 0x10000
    73c4:	21a0c82c 	lsrcs	r12, r12, #16
    73c8:	22422010 	subcs	r2, r2, #16
    73cc:	e35c0c01 	cmp	r12, #256	; 0x100
    73d0:	21a0c42c 	lsrcs	r12, r12, #8
    73d4:	22422008 	subcs	r2, r2, #8
    73d8:	e35c0010 	cmp	r12, #16
    73dc:	21a0c22c 	lsrcs	r12, r12, #4
    73e0:	22422004 	subcs	r2, r2, #4
    73e4:	e35c0004 	cmp	r12, #4
    73e8:	22422002 	subcs	r2, r2, #2
    73ec:	304220ac 	subcc	r2, r2, r12, lsr #1
    73f0:	e05221ac 	subs	r2, r2, r12, lsr #3
    73f4:	e0433b82 	sub	r3, r3, r2, lsl #23
    73f8:	ba000006 	blt	7418 <__aeabi_l2f+0x90>
    73fc:	e0833211 	add	r3, r3, r1, lsl r2
    7400:	e1a0c210 	lsl	r12, r0, r2
    7404:	e2622020 	rsb	r2, r2, #32
    7408:	e35c0102 	cmp	r12, #-2147483648	; 0x80000000
    740c:	e0a30230 	adc	r0, r3, r0, lsr r2
    7410:	03c00001 	biceq	r0, r0, #1
    7414:	e12fff1e 	bx	lr
    7418:	e2822020 	add	r2, r2, #32
    741c:	e1a0c211 	lsl	r12, r1, r2
    7420:	e2622020 	rsb	r2, r2, #32
    7424:	e190008c 	orrs	r0, r0, r12, lsl #1
    7428:	e0a30231 	adc	r0, r3, r1, lsr r2
    742c:	01c00fac 	biceq	r0, r0, r12, lsr #31
    7430:	e12fff1e 	bx	lr

00007434 <__aeabi_fmul>:
    7434:	e3a0c0ff 	mov	r12, #255	; 0xff
    7438:	e01c2ba0 	ands	r2, r12, r0, lsr #23
    743c:	101c3ba1 	andsne	r3, r12, r1, lsr #23
    7440:	1132000c 	teqne	r2, r12
    7444:	1133000c 	teqne	r3, r12
    7448:	0a00003e 	beq	7548 <__aeabi_fmul+0x114>
    744c:	e0822003 	add	r2, r2, r3
    7450:	e020c001 	eor	r12, r0, r1
    7454:	e1b00480 	lsls	r0, r0, #9
    7458:	11b01481 	lslsne	r1, r1, #9
    745c:	0a000010 	beq	74a4 <__aeabi_fmul+0x70>
    7460:	e3a03302 	mov	r3, #134217728	; 0x8000000
    7464:	e18302a0 	orr	r0, r3, r0, lsr #5
    7468:	e18312a1 	orr	r1, r3, r1, lsr #5
    746c:	e0813190 	umull	r3, r1, r0, r1
    7470:	e20c0102 	and	r0, r12, #-2147483648	; 0x80000000
    7474:	e3510502 	cmp	r1, #8388608	; 0x800000
    7478:	31a01081 	lslcc	r1, r1, #1
    747c:	31811fa3 	orrcc	r1, r1, r3, lsr #31
    7480:	31a03083 	lslcc	r3, r3, #1
    7484:	e1800001 	orr	r0, r0, r1
    7488:	e2c2207f 	sbc	r2, r2, #127	; 0x7f
    748c:	e35200fd 	cmp	r2, #253	; 0xfd
    7490:	8a00000f 	bhi	74d4 <__aeabi_fmul+0xa0>
    7494:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
    7498:	e0a00b82 	adc	r0, r0, r2, lsl #23
    749c:	03c00001 	biceq	r0, r0, #1
    74a0:	e12fff1e 	bx	lr
    74a4:	e3300000 	teq	r0, #0
    74a8:	e20cc102 	and	r12, r12, #-2147483648	; 0x80000000
    74ac:	01a01481 	lsleq	r1, r1, #9
    74b0:	e18c04a0 	orr	r0, r12, r0, lsr #9
    74b4:	e18004a1 	orr	r0, r0, r1, lsr #9
    74b8:	e252207f 	subs	r2, r2, #127	; 0x7f
    74bc:	c27230ff 	rsbsgt	r3, r2, #255	; 0xff
    74c0:	c1800b82 	orrgt	r0, r0, r2, lsl #23
    74c4:	c12fff1e 	bxgt	lr
    74c8:	e3800502 	orr	r0, r0, #8388608	; 0x800000
    74cc:	e3a03000 	mov	r3, #0
    74d0:	e2522001 	subs	r2, r2, #1
    74d4:	ca000035 	bgt	75b0 <__aeabi_fmul+0x17c>
    74d8:	e3720019 	cmn	r2, #25
    74dc:	d2000102 	andle	r0, r0, #-2147483648	; 0x80000000
    74e0:	d12fff1e 	bxle	lr
    74e4:	e2622000 	rsb	r2, r2, #0
    74e8:	e1b01080 	lsls	r1, r0, #1
    74ec:	e1a01231 	lsr	r1, r1, r2
    74f0:	e2622020 	rsb	r2, r2, #32
    74f4:	e1a0c210 	lsl	r12, r0, r2
    74f8:	e1b00061 	rrxs	r0, r1
    74fc:	e2a00000 	adc	r0, r0, #0
    7500:	e193308c 	orrs	r3, r3, r12, lsl #1
    7504:	01c00fac 	biceq	r0, r0, r12, lsr #31
    7508:	e12fff1e 	bx	lr
    750c:	e3320000 	teq	r2, #0
    7510:	e200c102 	and	r12, r0, #-2147483648	; 0x80000000
    7514:	01a00080 	lsleq	r0, r0, #1
    7518:	03100502 	tsteq	r0, #8388608	; 0x800000
    751c:	02422001 	subeq	r2, r2, #1
    7520:	0afffffb 	beq	7514 <__aeabi_fmul+0xe0>
    7524:	e180000c 	orr	r0, r0, r12
    7528:	e3330000 	teq	r3, #0
    752c:	e201c102 	and	r12, r1, #-2147483648	; 0x80000000
    7530:	01a01081 	lsleq	r1, r1, #1
    7534:	03110502 	tsteq	r1, #8388608	; 0x800000
    7538:	02433001 	subeq	r3, r3, #1
    753c:	0afffffb 	beq	7530 <__aeabi_fmul+0xfc>
    7540:	e181100c 	orr	r1, r1, r12
    7544:	eaffffc0 	b	744c <__aeabi_fmul+0x18>
    7548:	e00c3ba1 	and	r3, r12, r1, lsr #23
    754c:	e132000c 	teq	r2, r12
    7550:	1133000c 	teqne	r3, r12
    7554:	0a000005 	beq	7570 <__aeabi_fmul+0x13c>
    7558:	e3d0c102 	bics	r12, r0, #-2147483648	; 0x80000000
    755c:	13d1c102 	bicsne	r12, r1, #-2147483648	; 0x80000000
    7560:	1affffe9 	bne	750c <__aeabi_fmul+0xd8>
    7564:	e0200001 	eor	r0, r0, r1
    7568:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
    756c:	e12fff1e 	bx	lr
    7570:	e3300000 	teq	r0, #0
    7574:	13300102 	teqne	r0, #-2147483648	; 0x80000000
    7578:	01a00001 	moveq	r0, r1
    757c:	13310000 	teqne	r1, #0
    7580:	13310102 	teqne	r1, #-2147483648	; 0x80000000
    7584:	0a00000d 	beq	75c0 <__aeabi_fmul+0x18c>
    7588:	e132000c 	teq	r2, r12
    758c:	1a000001 	bne	7598 <__aeabi_fmul+0x164>
    7590:	e1b02480 	lsls	r2, r0, #9
    7594:	1a000009 	bne	75c0 <__aeabi_fmul+0x18c>
    7598:	e133000c 	teq	r3, r12
    759c:	1a000002 	bne	75ac <__aeabi_fmul+0x178>
    75a0:	e1b03481 	lsls	r3, r1, #9
    75a4:	11a00001 	movne	r0, r1
    75a8:	1a000004 	bne	75c0 <__aeabi_fmul+0x18c>
    75ac:	e0200001 	eor	r0, r0, r1
    75b0:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
    75b4:	e380047f 	orr	r0, r0, #2130706432	; 0x7f000000
    75b8:	e3800502 	orr	r0, r0, #8388608	; 0x800000
    75bc:	e12fff1e 	bx	lr
    75c0:	e380047f 	orr	r0, r0, #2130706432	; 0x7f000000
    75c4:	e3800503 	orr	r0, r0, #12582912	; 0xc00000
    75c8:	e12fff1e 	bx	lr

000075cc <__aeabi_fdiv>:
    75cc:	e3a0c0ff 	mov	r12, #255	; 0xff
    75d0:	e01c2ba0 	ands	r2, r12, r0, lsr #23
    75d4:	101c3ba1 	andsne	r3, r12, r1, lsr #23
    75d8:	1132000c 	teqne	r2, r12
    75dc:	1133000c 	teqne	r3, r12
    75e0:	0a00003a 	beq	76d0 <__aeabi_fdiv+0x104>
    75e4:	e0422003 	sub	r2, r2, r3
    75e8:	e020c001 	eor	r12, r0, r1
    75ec:	e1b01481 	lsls	r1, r1, #9
    75f0:	e1a00480 	lsl	r0, r0, #9
    75f4:	0a00001c 	beq	766c <__aeabi_fdiv+0xa0>
    75f8:	e3a03201 	mov	r3, #268435456	; 0x10000000
    75fc:	e1831221 	orr	r1, r3, r1, lsr #4
    7600:	e1833220 	orr	r3, r3, r0, lsr #4
    7604:	e20c0102 	and	r0, r12, #-2147483648	; 0x80000000
    7608:	e1530001 	cmp	r3, r1
    760c:	31a03083 	lslcc	r3, r3, #1
    7610:	e2a2207d 	adc	r2, r2, #125	; 0x7d
    7614:	e3a0c502 	mov	r12, #8388608	; 0x800000
    7618:	e1530001 	cmp	r3, r1
    761c:	20433001 	subcs	r3, r3, r1
    7620:	2180000c 	orrcs	r0, r0, r12
    7624:	e15300a1 	cmp	r3, r1, lsr #1
    7628:	204330a1 	subcs	r3, r3, r1, lsr #1
    762c:	218000ac 	orrcs	r0, r0, r12, lsr #1
    7630:	e1530121 	cmp	r3, r1, lsr #2
    7634:	20433121 	subcs	r3, r3, r1, lsr #2
    7638:	2180012c 	orrcs	r0, r0, r12, lsr #2
    763c:	e15301a1 	cmp	r3, r1, lsr #3
    7640:	204331a1 	subcs	r3, r3, r1, lsr #3
    7644:	218001ac 	orrcs	r0, r0, r12, lsr #3
    7648:	e1b03203 	lsls	r3, r3, #4
    764c:	11b0c22c 	lsrsne	r12, r12, #4
    7650:	1afffff0 	bne	7618 <__aeabi_fdiv+0x4c>
    7654:	e35200fd 	cmp	r2, #253	; 0xfd
    7658:	8affff9d 	bhi	74d4 <__aeabi_fmul+0xa0>
    765c:	e1530001 	cmp	r3, r1
    7660:	e0a00b82 	adc	r0, r0, r2, lsl #23
    7664:	03c00001 	biceq	r0, r0, #1
    7668:	e12fff1e 	bx	lr
    766c:	e20cc102 	and	r12, r12, #-2147483648	; 0x80000000
    7670:	e18c04a0 	orr	r0, r12, r0, lsr #9
    7674:	e292207f 	adds	r2, r2, #127	; 0x7f
    7678:	c27230ff 	rsbsgt	r3, r2, #255	; 0xff
    767c:	c1800b82 	orrgt	r0, r0, r2, lsl #23
    7680:	c12fff1e 	bxgt	lr
    7684:	e3800502 	orr	r0, r0, #8388608	; 0x800000
    7688:	e3a03000 	mov	r3, #0
    768c:	e2522001 	subs	r2, r2, #1
    7690:	eaffff8f 	b	74d4 <__aeabi_fmul+0xa0>
    7694:	e3320000 	teq	r2, #0
    7698:	e200c102 	and	r12, r0, #-2147483648	; 0x80000000
    769c:	01a00080 	lsleq	r0, r0, #1
    76a0:	03100502 	tsteq	r0, #8388608	; 0x800000
    76a4:	02422001 	subeq	r2, r2, #1
    76a8:	0afffffb 	beq	769c <__aeabi_fdiv+0xd0>
    76ac:	e180000c 	orr	r0, r0, r12
    76b0:	e3330000 	teq	r3, #0
    76b4:	e201c102 	and	r12, r1, #-2147483648	; 0x80000000
    76b8:	01a01081 	lsleq	r1, r1, #1
    76bc:	03110502 	tsteq	r1, #8388608	; 0x800000
    76c0:	02433001 	subeq	r3, r3, #1
    76c4:	0afffffb 	beq	76b8 <__aeabi_fdiv+0xec>
    76c8:	e181100c 	orr	r1, r1, r12
    76cc:	eaffffc4 	b	75e4 <__aeabi_fdiv+0x18>
    76d0:	e00c3ba1 	and	r3, r12, r1, lsr #23
    76d4:	e132000c 	teq	r2, r12
    76d8:	1a000005 	bne	76f4 <__aeabi_fdiv+0x128>
    76dc:	e1b02480 	lsls	r2, r0, #9
    76e0:	1affffb6 	bne	75c0 <__aeabi_fmul+0x18c>
    76e4:	e133000c 	teq	r3, r12
    76e8:	1affffaf 	bne	75ac <__aeabi_fmul+0x178>
    76ec:	e1a00001 	mov	r0, r1
    76f0:	eaffffb2 	b	75c0 <__aeabi_fmul+0x18c>
    76f4:	e133000c 	teq	r3, r12
    76f8:	1a000003 	bne	770c <__aeabi_fdiv+0x140>
    76fc:	e1b03481 	lsls	r3, r1, #9
    7700:	0affff97 	beq	7564 <__aeabi_fmul+0x130>
    7704:	e1a00001 	mov	r0, r1
    7708:	eaffffac 	b	75c0 <__aeabi_fmul+0x18c>
    770c:	e3d0c102 	bics	r12, r0, #-2147483648	; 0x80000000
    7710:	13d1c102 	bicsne	r12, r1, #-2147483648	; 0x80000000
    7714:	1affffde 	bne	7694 <__aeabi_fdiv+0xc8>
    7718:	e3d02102 	bics	r2, r0, #-2147483648	; 0x80000000
    771c:	1affffa2 	bne	75ac <__aeabi_fmul+0x178>
    7720:	e3d13102 	bics	r3, r1, #-2147483648	; 0x80000000
    7724:	1affff8e 	bne	7564 <__aeabi_fmul+0x130>
    7728:	eaffffa4 	b	75c0 <__aeabi_fmul+0x18c>

0000772c <__gesf2>:
    772c:	e3e0c000 	mvn	r12, #0
    7730:	ea000002 	b	7740 <__cmpsf2+0x4>

00007734 <__lesf2>:
    7734:	e3a0c001 	mov	r12, #1
    7738:	ea000000 	b	7740 <__cmpsf2+0x4>

0000773c <__cmpsf2>:
    773c:	e3a0c001 	mov	r12, #1
    7740:	e52dc004 	push	{r12}		; (str r12, [sp, #-4]!)
    7744:	e1a02080 	lsl	r2, r0, #1
    7748:	e1a03081 	lsl	r3, r1, #1
    774c:	e1f0cc42 	mvns	r12, r2, asr #24
    7750:	11f0cc43 	mvnsne	r12, r3, asr #24
    7754:	0a000007 	beq	7778 <__cmpsf2+0x3c>
    7758:	e28dd004 	add	sp, sp, #4
    775c:	e192c0a3 	orrs	r12, r2, r3, lsr #1
    7760:	11300001 	teqne	r0, r1
    7764:	50520003 	subspl	r0, r2, r3
    7768:	81a00fc1 	asrhi	r0, r1, #31
    776c:	31e00fc1 	mvncc	r0, r1, asr #31
    7770:	13800001 	orrne	r0, r0, #1
    7774:	e12fff1e 	bx	lr
    7778:	e1f0cc42 	mvns	r12, r2, asr #24
    777c:	1a000001 	bne	7788 <__cmpsf2+0x4c>
    7780:	e1b0c480 	lsls	r12, r0, #9
    7784:	1a000003 	bne	7798 <__cmpsf2+0x5c>
    7788:	e1f0cc43 	mvns	r12, r3, asr #24
    778c:	1afffff1 	bne	7758 <__cmpsf2+0x1c>
    7790:	e1b0c481 	lsls	r12, r1, #9
    7794:	0affffef 	beq	7758 <__cmpsf2+0x1c>
    7798:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    779c:	e12fff1e 	bx	lr

000077a0 <__aeabi_cfrcmple>:
    77a0:	e1a0c000 	mov	r12, r0
    77a4:	e1a00001 	mov	r0, r1
    77a8:	e1a0100c 	mov	r1, r12
    77ac:	eaffffff 	b	77b0 <__aeabi_cfcmpeq>

000077b0 <__aeabi_cfcmpeq>:
    77b0:	e92d400f 	push	{r0, r1, r2, r3, lr}
    77b4:	ebffffe0 	bl	773c <__cmpsf2>
    77b8:	e3500000 	cmp	r0, #0
    77bc:	43700000 	cmnmi	r0, #0
    77c0:	e8bd400f 	pop	{r0, r1, r2, r3, lr}
    77c4:	e12fff1e 	bx	lr

000077c8 <__aeabi_fcmpeq>:
    77c8:	e52de008 	str	lr, [sp, #-8]!
    77cc:	ebfffff7 	bl	77b0 <__aeabi_cfcmpeq>
    77d0:	03a00001 	moveq	r0, #1
    77d4:	13a00000 	movne	r0, #0
    77d8:	e49de008 	ldr	lr, [sp], #8
    77dc:	e12fff1e 	bx	lr

000077e0 <__aeabi_fcmplt>:
    77e0:	e52de008 	str	lr, [sp, #-8]!
    77e4:	ebfffff1 	bl	77b0 <__aeabi_cfcmpeq>
    77e8:	33a00001 	movcc	r0, #1
    77ec:	23a00000 	movcs	r0, #0
    77f0:	e49de008 	ldr	lr, [sp], #8
    77f4:	e12fff1e 	bx	lr

000077f8 <__aeabi_fcmple>:
    77f8:	e52de008 	str	lr, [sp, #-8]!
    77fc:	ebffffeb 	bl	77b0 <__aeabi_cfcmpeq>
    7800:	93a00001 	movls	r0, #1
    7804:	83a00000 	movhi	r0, #0
    7808:	e49de008 	ldr	lr, [sp], #8
    780c:	e12fff1e 	bx	lr

00007810 <__aeabi_fcmpge>:
    7810:	e52de008 	str	lr, [sp, #-8]!
    7814:	ebffffe1 	bl	77a0 <__aeabi_cfrcmple>
    7818:	93a00001 	movls	r0, #1
    781c:	83a00000 	movhi	r0, #0
    7820:	e49de008 	ldr	lr, [sp], #8
    7824:	e12fff1e 	bx	lr

00007828 <__aeabi_fcmpgt>:
    7828:	e52de008 	str	lr, [sp, #-8]!
    782c:	ebffffdb 	bl	77a0 <__aeabi_cfrcmple>
    7830:	33a00001 	movcc	r0, #1
    7834:	23a00000 	movcs	r0, #0
    7838:	e49de008 	ldr	lr, [sp], #8
    783c:	e12fff1e 	bx	lr

00007840 <__aeabi_f2iz>:
    7840:	e1a02080 	lsl	r2, r0, #1
    7844:	e352047f 	cmp	r2, #2130706432	; 0x7f000000
    7848:	3a000008 	bcc	7870 <__aeabi_f2iz+0x30>
    784c:	e3a0309e 	mov	r3, #158	; 0x9e
    7850:	e0532c22 	subs	r2, r3, r2, lsr #24
    7854:	9a000007 	bls	7878 <__aeabi_f2iz+0x38>
    7858:	e1a03400 	lsl	r3, r0, #8
    785c:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
    7860:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    7864:	e1a00233 	lsr	r0, r3, r2
    7868:	12600000 	rsbne	r0, r0, #0
    786c:	e12fff1e 	bx	lr
    7870:	e3a00000 	mov	r0, #0
    7874:	e12fff1e 	bx	lr
    7878:	e3720061 	cmn	r2, #97	; 0x61
    787c:	1a000001 	bne	7888 <__aeabi_f2iz+0x48>
    7880:	e1b02480 	lsls	r2, r0, #9
    7884:	1a000002 	bne	7894 <__aeabi_f2iz+0x54>
    7888:	e2100102 	ands	r0, r0, #-2147483648	; 0x80000000
    788c:	03e00102 	mvneq	r0, #-2147483648	; 0x80000000
    7890:	e12fff1e 	bx	lr
    7894:	e3a00000 	mov	r0, #0
    7898:	e12fff1e 	bx	lr

0000789c <atexit>:
    789c:	e1a01000 	mov	r1, r0
    78a0:	e3a00000 	mov	r0, #0
    78a4:	e92d4008 	push	{r3, lr}
    78a8:	e1a02000 	mov	r2, r0
    78ac:	e1a03000 	mov	r3, r0
    78b0:	eb000091 	bl	7afc <__register_exitproc>
    78b4:	e8bd4008 	pop	{r3, lr}
    78b8:	e12fff1e 	bx	lr

000078bc <exit>:
    78bc:	e92d4008 	push	{r3, lr}
    78c0:	e3a01000 	mov	r1, #0
    78c4:	e1a04000 	mov	r4, r0
    78c8:	eb0000c8 	bl	7bf0 <__call_exitprocs>
    78cc:	e59f3018 	ldr	r3, [pc, #24]	; 78ec <exit+0x30>
    78d0:	e5930000 	ldr	r0, [r3]
    78d4:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
    78d8:	e3530000 	cmp	r3, #0
    78dc:	11a0e00f 	movne	lr, pc
    78e0:	112fff13 	bxne	r3
    78e4:	e1a00004 	mov	r0, r4
    78e8:	eb00014c 	bl	7e20 <_exit>
    78ec:	0000a690 	.word	0x0000a690

000078f0 <memset>:
    78f0:	e3520003 	cmp	r2, #3
    78f4:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    78f8:	e20110ff 	and	r1, r1, #255	; 0xff
    78fc:	8a000008 	bhi	7924 <memset+0x34>
    7900:	e3520000 	cmp	r2, #0
    7904:	0a000004 	beq	791c <memset+0x2c>
    7908:	e1a03000 	mov	r3, r0
    790c:	e0822000 	add	r2, r2, r0
    7910:	e4c31001 	strb	r1, [r3], #1
    7914:	e1530002 	cmp	r3, r2
    7918:	1afffffc 	bne	7910 <memset+0x20>
    791c:	e8bd0010 	ldmfd	sp!, {r4}
    7920:	e12fff1e 	bx	lr
    7924:	e3100003 	tst	r0, #3
    7928:	e0802002 	add	r2, r0, r2
    792c:	0a000007 	beq	7950 <memset+0x60>
    7930:	e280c001 	add	r12, r0, #1
    7934:	e20c3003 	and	r3, r12, #3
    7938:	e3530000 	cmp	r3, #0
    793c:	e54c1001 	strb	r1, [r12, #-1]
    7940:	e1a0300c 	mov	r3, r12
    7944:	e28cc001 	add	r12, r12, #1
    7948:	1afffff9 	bne	7934 <memset+0x44>
    794c:	ea000000 	b	7954 <memset+0x64>
    7950:	e1a03000 	mov	r3, r0
    7954:	e0634002 	rsb	r4, r3, r2
    7958:	e081c401 	add	r12, r1, r1, lsl #8
    795c:	e354003f 	cmp	r4, #63	; 0x3f
    7960:	e08cc80c 	add	r12, r12, r12, lsl #16
    7964:	da00001a 	ble	79d4 <memset+0xe4>
    7968:	e583c000 	str	r12, [r3]
    796c:	e583c004 	str	r12, [r3, #4]
    7970:	e583c008 	str	r12, [r3, #8]
    7974:	e583c00c 	str	r12, [r3, #12]
    7978:	e583c010 	str	r12, [r3, #16]
    797c:	e583c014 	str	r12, [r3, #20]
    7980:	e583c018 	str	r12, [r3, #24]
    7984:	e583c01c 	str	r12, [r3, #28]
    7988:	e583c020 	str	r12, [r3, #32]
    798c:	e583c024 	str	r12, [r3, #36]	; 0x24
    7990:	e583c028 	str	r12, [r3, #40]	; 0x28
    7994:	e583c02c 	str	r12, [r3, #44]	; 0x2c
    7998:	e583c030 	str	r12, [r3, #48]	; 0x30
    799c:	e583c034 	str	r12, [r3, #52]	; 0x34
    79a0:	e583c038 	str	r12, [r3, #56]	; 0x38
    79a4:	e583c03c 	str	r12, [r3, #60]	; 0x3c
    79a8:	e2833040 	add	r3, r3, #64	; 0x40
    79ac:	e0634002 	rsb	r4, r3, r2
    79b0:	e354003f 	cmp	r4, #63	; 0x3f
    79b4:	caffffeb 	bgt	7968 <memset+0x78>
    79b8:	ea000005 	b	79d4 <memset+0xe4>
    79bc:	e583c000 	str	r12, [r3]
    79c0:	e583c004 	str	r12, [r3, #4]
    79c4:	e583c008 	str	r12, [r3, #8]
    79c8:	e583c00c 	str	r12, [r3, #12]
    79cc:	e2833010 	add	r3, r3, #16
    79d0:	e0634002 	rsb	r4, r3, r2
    79d4:	e354000f 	cmp	r4, #15
    79d8:	cafffff7 	bgt	79bc <memset+0xcc>
    79dc:	e3540003 	cmp	r4, #3
    79e0:	da000006 	ble	7a00 <memset+0x110>
    79e4:	e2834004 	add	r4, r3, #4
    79e8:	e0643002 	rsb	r3, r4, r2
    79ec:	e3530003 	cmp	r3, #3
    79f0:	e504c004 	str	r12, [r4, #-4]
    79f4:	e1a03004 	mov	r3, r4
    79f8:	e2844004 	add	r4, r4, #4
    79fc:	cafffff9 	bgt	79e8 <memset+0xf8>
    7a00:	e1520003 	cmp	r2, r3
    7a04:	9affffc4 	bls	791c <memset+0x2c>
    7a08:	e2833001 	add	r3, r3, #1
    7a0c:	e2822001 	add	r2, r2, #1
    7a10:	e5431001 	strb	r1, [r3, #-1]
    7a14:	e2833001 	add	r3, r3, #1
    7a18:	e1530002 	cmp	r3, r2
    7a1c:	1afffffb 	bne	7a10 <memset+0x120>
    7a20:	eaffffbd 	b	791c <memset+0x2c>

00007a24 <srand>:
    7a24:	e59f3010 	ldr	r3, [pc, #16]	; 7a3c <srand+0x18>
    7a28:	e5933000 	ldr	r3, [r3]
    7a2c:	e3a02000 	mov	r2, #0
    7a30:	e58300a8 	str	r0, [r3, #168]	; 0xa8
    7a34:	e58320ac 	str	r2, [r3, #172]	; 0xac
    7a38:	e12fff1e 	bx	lr
    7a3c:	0000a750 	.word	0x0000a750

00007a40 <rand>:
    7a40:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    7a44:	e59f3044 	ldr	r3, [pc, #68]	; 7a90 <rand+0x50>
    7a48:	e593c000 	ldr	r12, [r3]
    7a4c:	e59f4040 	ldr	r4, [pc, #64]	; 7a94 <rand+0x54>
    7a50:	e59c20a8 	ldr	r2, [r12, #168]	; 0xa8
    7a54:	e0040492 	mul	r4, r2, r4
    7a58:	e59c10ac 	ldr	r1, [r12, #172]	; 0xac
    7a5c:	e59f3034 	ldr	r3, [pc, #52]	; 7a98 <rand+0x58>
    7a60:	e0244193 	mla	r4, r3, r1, r4
    7a64:	e0810392 	umull	r0, r1, r2, r3
    7a68:	e3a02001 	mov	r2, #1
    7a6c:	e0922000 	adds	r2, r2, r0
    7a70:	e0841001 	add	r1, r4, r1
    7a74:	e3a03000 	mov	r3, #0
    7a78:	e0a33001 	adc	r3, r3, r1
    7a7c:	e58c20a8 	str	r2, [r12, #168]	; 0xa8
    7a80:	e58c30ac 	str	r3, [r12, #172]	; 0xac
    7a84:	e3c30102 	bic	r0, r3, #-2147483648	; 0x80000000
    7a88:	e8bd0010 	ldmfd	sp!, {r4}
    7a8c:	e12fff1e 	bx	lr
    7a90:	0000a750 	.word	0x0000a750
    7a94:	5851f42d 	.word	0x5851f42d
    7a98:	4c957f2d 	.word	0x4c957f2d

00007a9c <strlen>:
    7a9c:	e3c01003 	bic	r1, r0, #3
    7aa0:	e2100003 	ands	r0, r0, #3
    7aa4:	e2600000 	rsb	r0, r0, #0
    7aa8:	e4913004 	ldr	r3, [r1], #4
    7aac:	e280c004 	add	r12, r0, #4
    7ab0:	e1a0c18c 	lsl	r12, r12, #3
    7ab4:	e3e02000 	mvn	r2, #0
    7ab8:	11833c32 	orrne	r3, r3, r2, lsr r12
    7abc:	e3a0c001 	mov	r12, #1
    7ac0:	e18cc40c 	orr	r12, r12, r12, lsl #8
    7ac4:	e18cc80c 	orr	r12, r12, r12, lsl #16
    7ac8:	e043200c 	sub	r2, r3, r12
    7acc:	e1c22003 	bic	r2, r2, r3
    7ad0:	e012238c 	ands	r2, r2, r12, lsl #7
    7ad4:	04913004 	ldreq	r3, [r1], #4
    7ad8:	02800004 	addeq	r0, r0, #4
    7adc:	0afffff9 	beq	7ac8 <strlen+0x2c>
    7ae0:	e31300ff 	tst	r3, #255	; 0xff
    7ae4:	12800001 	addne	r0, r0, #1
    7ae8:	13130cff 	tstne	r3, #65280	; 0xff00
    7aec:	12800001 	addne	r0, r0, #1
    7af0:	131308ff 	tstne	r3, #16711680	; 0xff0000
    7af4:	12800001 	addne	r0, r0, #1
    7af8:	e12fff1e 	bx	lr

00007afc <__register_exitproc>:
    7afc:	e59fc0e4 	ldr	r12, [pc, #228]	; 7be8 <__register_exitproc+0xec>
    7b00:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    7b04:	e59c4000 	ldr	r4, [r12]
    7b08:	e594c148 	ldr	r12, [r4, #328]	; 0x148
    7b0c:	e35c0000 	cmp	r12, #0
    7b10:	0284cf53 	addeq	r12, r4, #332	; 0x14c
    7b14:	e59c5004 	ldr	r5, [r12, #4]
    7b18:	0584c148 	streq	r12, [r4, #328]	; 0x148
    7b1c:	e355001f 	cmp	r5, #31
    7b20:	e24dd010 	sub	sp, sp, #16
    7b24:	e1a06000 	mov	r6, r0
    7b28:	da000015 	ble	7b84 <__register_exitproc+0x88>
    7b2c:	e59f00b8 	ldr	r0, [pc, #184]	; 7bec <__register_exitproc+0xf0>
    7b30:	e3500000 	cmp	r0, #0
    7b34:	1a000001 	bne	7b40 <__register_exitproc+0x44>
    7b38:	e3e00000 	mvn	r0, #0
    7b3c:	ea000018 	b	7ba4 <__register_exitproc+0xa8>
    7b40:	e3a00e19 	mov	r0, #400	; 0x190
    7b44:	e58d100c 	str	r1, [sp, #12]
    7b48:	e58d2008 	str	r2, [sp, #8]
    7b4c:	e58d3004 	str	r3, [sp, #4]
    7b50:	e320f000 	nop	{0}
    7b54:	e250c000 	subs	r12, r0, #0
    7b58:	e59d100c 	ldr	r1, [sp, #12]
    7b5c:	e59d2008 	ldr	r2, [sp, #8]
    7b60:	e59d3004 	ldr	r3, [sp, #4]
    7b64:	0afffff3 	beq	7b38 <__register_exitproc+0x3c>
    7b68:	e5945148 	ldr	r5, [r4, #328]	; 0x148
    7b6c:	e3a00000 	mov	r0, #0
    7b70:	e58c0004 	str	r0, [r12, #4]
    7b74:	e58c5000 	str	r5, [r12]
    7b78:	e584c148 	str	r12, [r4, #328]	; 0x148
    7b7c:	e58c0188 	str	r0, [r12, #392]	; 0x188
    7b80:	e58c018c 	str	r0, [r12, #396]	; 0x18c
    7b84:	e3560000 	cmp	r6, #0
    7b88:	e59c4004 	ldr	r4, [r12, #4]
    7b8c:	1a000007 	bne	7bb0 <__register_exitproc+0xb4>
    7b90:	e2843002 	add	r3, r4, #2
    7b94:	e2844001 	add	r4, r4, #1
    7b98:	e78c1103 	str	r1, [r12, r3, lsl #2]
    7b9c:	e58c4004 	str	r4, [r12, #4]
    7ba0:	e3a00000 	mov	r0, #0
    7ba4:	e28dd010 	add	sp, sp, #16
    7ba8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
    7bac:	e12fff1e 	bx	lr
    7bb0:	e3a00001 	mov	r0, #1
    7bb4:	e1a00410 	lsl	r0, r0, r4
    7bb8:	e08c8104 	add	r8, r12, r4, lsl #2
    7bbc:	e3560002 	cmp	r6, #2
    7bc0:	e59c7188 	ldr	r7, [r12, #392]	; 0x188
    7bc4:	e5883108 	str	r3, [r8, #264]	; 0x108
    7bc8:	059c318c 	ldreq	r3, [r12, #396]	; 0x18c
    7bcc:	e1877000 	orr	r7, r7, r0
    7bd0:	01830000 	orreq	r0, r3, r0
    7bd4:	e1a05008 	mov	r5, r8
    7bd8:	e5882088 	str	r2, [r8, #136]	; 0x88
    7bdc:	e58c7188 	str	r7, [r12, #392]	; 0x188
    7be0:	058c018c 	streq	r0, [r12, #396]	; 0x18c
    7be4:	eaffffe9 	b	7b90 <__register_exitproc+0x94>
    7be8:	0000a690 	.word	0x0000a690
    7bec:	00000000 	.word	0x00000000

00007bf0 <__call_exitprocs>:
    7bf0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    7bf4:	e59f3168 	ldr	r3, [pc, #360]	; 7d64 <__call_exitprocs+0x174>
    7bf8:	e5933000 	ldr	r3, [r3]
    7bfc:	e24dd014 	sub	sp, sp, #20
    7c00:	e58d3004 	str	r3, [sp, #4]
    7c04:	e2833f52 	add	r3, r3, #328	; 0x148
    7c08:	e58d0008 	str	r0, [sp, #8]
    7c0c:	e58d300c 	str	r3, [sp, #12]
    7c10:	e1a07001 	mov	r7, r1
    7c14:	e3a08001 	mov	r8, #1
    7c18:	e59d3004 	ldr	r3, [sp, #4]
    7c1c:	e5936148 	ldr	r6, [r3, #328]	; 0x148
    7c20:	e3560000 	cmp	r6, #0
    7c24:	e59db00c 	ldr	r11, [sp, #12]
    7c28:	0a000033 	beq	7cfc <__call_exitprocs+0x10c>
    7c2c:	e5965004 	ldr	r5, [r6, #4]
    7c30:	e2554001 	subs	r4, r5, #1
    7c34:	5286a088 	addpl	r10, r6, #136	; 0x88
    7c38:	5285501f 	addpl	r5, r5, #31
    7c3c:	508a5105 	addpl	r5, r10, r5, lsl #2
    7c40:	5a000007 	bpl	7c64 <__call_exitprocs+0x74>
    7c44:	ea000029 	b	7cf0 <__call_exitprocs+0x100>
    7c48:	e5953000 	ldr	r3, [r5]
    7c4c:	e1530007 	cmp	r3, r7
    7c50:	0a000005 	beq	7c6c <__call_exitprocs+0x7c>
    7c54:	e2444001 	sub	r4, r4, #1
    7c58:	e3740001 	cmn	r4, #1
    7c5c:	e2455004 	sub	r5, r5, #4
    7c60:	0a000022 	beq	7cf0 <__call_exitprocs+0x100>
    7c64:	e3570000 	cmp	r7, #0
    7c68:	1afffff6 	bne	7c48 <__call_exitprocs+0x58>
    7c6c:	e5963004 	ldr	r3, [r6, #4]
    7c70:	e06a2005 	rsb	r2, r10, r5
    7c74:	e2433001 	sub	r3, r3, #1
    7c78:	e0862002 	add	r2, r6, r2
    7c7c:	e1530004 	cmp	r3, r4
    7c80:	e5123078 	ldr	r3, [r2, #-120]	; 0xffffff88
    7c84:	13a01000 	movne	r1, #0
    7c88:	05864004 	streq	r4, [r6, #4]
    7c8c:	15021078 	strne	r1, [r2, #-120]	; 0xffffff88
    7c90:	e3530000 	cmp	r3, #0
    7c94:	0affffee 	beq	7c54 <__call_exitprocs+0x64>
    7c98:	e1a02418 	lsl	r2, r8, r4
    7c9c:	e5961188 	ldr	r1, [r6, #392]	; 0x188
    7ca0:	e1120001 	tst	r2, r1
    7ca4:	e5969004 	ldr	r9, [r6, #4]
    7ca8:	0a000016 	beq	7d08 <__call_exitprocs+0x118>
    7cac:	e596118c 	ldr	r1, [r6, #396]	; 0x18c
    7cb0:	e1120001 	tst	r2, r1
    7cb4:	1a000016 	bne	7d14 <__call_exitprocs+0x124>
    7cb8:	e59d0008 	ldr	r0, [sp, #8]
    7cbc:	e5151080 	ldr	r1, [r5, #-128]	; 0xffffff80
    7cc0:	e1a0e00f 	mov	lr, pc
    7cc4:	e12fff13 	bx	r3
    7cc8:	e5963004 	ldr	r3, [r6, #4]
    7ccc:	e1530009 	cmp	r3, r9
    7cd0:	1affffd0 	bne	7c18 <__call_exitprocs+0x28>
    7cd4:	e59b3000 	ldr	r3, [r11]
    7cd8:	e1530006 	cmp	r3, r6
    7cdc:	1affffcd 	bne	7c18 <__call_exitprocs+0x28>
    7ce0:	e2444001 	sub	r4, r4, #1
    7ce4:	e3740001 	cmn	r4, #1
    7ce8:	e2455004 	sub	r5, r5, #4
    7cec:	1affffdc 	bne	7c64 <__call_exitprocs+0x74>
    7cf0:	e59f1070 	ldr	r1, [pc, #112]	; 7d68 <__call_exitprocs+0x178>
    7cf4:	e3510000 	cmp	r1, #0
    7cf8:	1a000009 	bne	7d24 <__call_exitprocs+0x134>
    7cfc:	e28dd014 	add	sp, sp, #20
    7d00:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    7d04:	e12fff1e 	bx	lr
    7d08:	e1a0e00f 	mov	lr, pc
    7d0c:	e12fff13 	bx	r3
    7d10:	eaffffec 	b	7cc8 <__call_exitprocs+0xd8>
    7d14:	e5150080 	ldr	r0, [r5, #-128]	; 0xffffff80
    7d18:	e1a0e00f 	mov	lr, pc
    7d1c:	e12fff13 	bx	r3
    7d20:	eaffffe8 	b	7cc8 <__call_exitprocs+0xd8>
    7d24:	e5963004 	ldr	r3, [r6, #4]
    7d28:	e3530000 	cmp	r3, #0
    7d2c:	e5963000 	ldr	r3, [r6]
    7d30:	1a000008 	bne	7d58 <__call_exitprocs+0x168>
    7d34:	e3530000 	cmp	r3, #0
    7d38:	0a000006 	beq	7d58 <__call_exitprocs+0x168>
    7d3c:	e1a00006 	mov	r0, r6
    7d40:	e58b3000 	str	r3, [r11]
    7d44:	e320f000 	nop	{0}
    7d48:	e59b6000 	ldr	r6, [r11]
    7d4c:	e3560000 	cmp	r6, #0
    7d50:	1affffb5 	bne	7c2c <__call_exitprocs+0x3c>
    7d54:	eaffffe8 	b	7cfc <__call_exitprocs+0x10c>
    7d58:	e1a0b006 	mov	r11, r6
    7d5c:	e1a06003 	mov	r6, r3
    7d60:	eafffff9 	b	7d4c <__call_exitprocs+0x15c>
    7d64:	0000a690 	.word	0x0000a690
    7d68:	00000000 	.word	0x00000000

00007d6c <register_fini>:
    7d6c:	e92d4008 	push	{r3, lr}
    7d70:	e59f3010 	ldr	r3, [pc, #16]	; 7d88 <register_fini+0x1c>
    7d74:	e3530000 	cmp	r3, #0
    7d78:	159f000c 	ldrne	r0, [pc, #12]	; 7d8c <register_fini+0x20>
    7d7c:	1bfffec6 	blne	789c <atexit>
    7d80:	e8bd4008 	pop	{r3, lr}
    7d84:	e12fff1e 	bx	lr
    7d88:	0000a6b8 	.word	0x0000a6b8
    7d8c:	00007d90 	.word	0x00007d90

00007d90 <__libc_fini_array>:
    7d90:	e92d4038 	push	{r3, r4, r5, lr}
    7d94:	e59f5030 	ldr	r5, [pc, #48]	; 7dcc <__libc_fini_array+0x3c>
    7d98:	e59f4030 	ldr	r4, [pc, #48]	; 7dd0 <__libc_fini_array+0x40>
    7d9c:	e0654004 	rsb	r4, r5, r4
    7da0:	e1b04144 	asrs	r4, r4, #2
    7da4:	10855104 	addne	r5, r5, r4, lsl #2
    7da8:	0a000004 	beq	7dc0 <__libc_fini_array+0x30>
    7dac:	e5353004 	ldr	r3, [r5, #-4]!
    7db0:	e1a0e00f 	mov	lr, pc
    7db4:	e12fff13 	bx	r3
    7db8:	e2544001 	subs	r4, r4, #1
    7dbc:	1afffffa 	bne	7dac <__libc_fini_array+0x1c>
    7dc0:	eb000a3c 	bl	a6b8 <__libc_fini>
    7dc4:	e8bd4038 	pop	{r3, r4, r5, lr}
    7dc8:	e12fff1e 	bx	lr
    7dcc:	0000a6d0 	.word	0x0000a6d0
    7dd0:	0000a6d4 	.word	0x0000a6d4

00007dd4 <__cs3_premain>:
    7dd4:	e92d4008 	push	{r3, lr}
    7dd8:	eb00001d 	bl	7e54 <__libc_init_array>
    7ddc:	e59f3030 	ldr	r3, [pc, #48]	; 7e14 <__cs3_premain+0x40>
    7de0:	e3530000 	cmp	r3, #0
    7de4:	15930000 	ldrne	r0, [r3]
    7de8:	01a00003 	moveq	r0, r3
    7dec:	e59f3024 	ldr	r3, [pc, #36]	; 7e18 <__cs3_premain+0x44>
    7df0:	e3530000 	cmp	r3, #0
    7df4:	15931000 	ldrne	r1, [r3]
    7df8:	01a01003 	moveq	r1, r3
    7dfc:	e3a02000 	mov	r2, #0
    7e00:	ebffe115 	bl	25c <main>
    7e04:	e59f3010 	ldr	r3, [pc, #16]	; 7e1c <__cs3_premain+0x48>
    7e08:	e3530000 	cmp	r3, #0
    7e0c:	1bfffeaa 	blne	78bc <exit>
    7e10:	eafffffe 	b	7e10 <__cs3_premain+0x3c>
	...
    7e1c:	000078bc 	.word	0x000078bc

00007e20 <_exit>:
    7e20:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    7e24:	e3a00018 	mov	r0, #24
    7e28:	e59f1004 	ldr	r1, [pc, #4]	; 7e34 <_exit+0x14>
    7e2c:	ef123456 	svc	0x00123456
    7e30:	eafffffe 	b	7e30 <_exit+0x10>
    7e34:	00020026 	.word	0x00020026

00007e38 <__cs3_isr_interrupt>:
    7e38:	eafffffe 	b	7e38 <__cs3_isr_interrupt>

00007e3c <__cs3_isr_undef>:
    7e3c:	eafffffe 	b	7e3c <__cs3_isr_undef>

00007e40 <__cs3_isr_swi>:
    7e40:	eafffffe 	b	7e40 <__cs3_isr_swi>

00007e44 <__cs3_isr_pabort>:
    7e44:	eafffffe 	b	7e44 <__cs3_isr_pabort>

00007e48 <__cs3_isr_dabort>:
    7e48:	eafffffe 	b	7e48 <__cs3_isr_dabort>

00007e4c <__cs3_isr_irq>:
    7e4c:	eafffffe 	b	7e4c <__cs3_isr_irq>

00007e50 <__cs3_isr_fiq>:
    7e50:	eafffffe 	b	7e50 <__cs3_isr_fiq>

00007e54 <__libc_init_array>:
    7e54:	e92d4070 	push	{r4, r5, r6, lr}
    7e58:	e59f506c 	ldr	r5, [pc, #108]	; 7ecc <__libc_init_array+0x78>
    7e5c:	e59f606c 	ldr	r6, [pc, #108]	; 7ed0 <__libc_init_array+0x7c>
    7e60:	e0656006 	rsb	r6, r5, r6
    7e64:	e1b06146 	asrs	r6, r6, #2
    7e68:	12455004 	subne	r5, r5, #4
    7e6c:	13a04000 	movne	r4, #0
    7e70:	0a000005 	beq	7e8c <__libc_init_array+0x38>
    7e74:	e5b53004 	ldr	r3, [r5, #4]!
    7e78:	e2844001 	add	r4, r4, #1
    7e7c:	e1a0e00f 	mov	lr, pc
    7e80:	e12fff13 	bx	r3
    7e84:	e1560004 	cmp	r6, r4
    7e88:	1afffff9 	bne	7e74 <__libc_init_array+0x20>
    7e8c:	e59f5040 	ldr	r5, [pc, #64]	; 7ed4 <__libc_init_array+0x80>
    7e90:	e59f6040 	ldr	r6, [pc, #64]	; 7ed8 <__libc_init_array+0x84>
    7e94:	e0656006 	rsb	r6, r5, r6
    7e98:	eb0009fe 	bl	a698 <_init>
    7e9c:	e1b06146 	asrs	r6, r6, #2
    7ea0:	12455004 	subne	r5, r5, #4
    7ea4:	13a04000 	movne	r4, #0
    7ea8:	0a000005 	beq	7ec4 <__libc_init_array+0x70>
    7eac:	e5b53004 	ldr	r3, [r5, #4]!
    7eb0:	e2844001 	add	r4, r4, #1
    7eb4:	e1a0e00f 	mov	lr, pc
    7eb8:	e12fff13 	bx	r3
    7ebc:	e1560004 	cmp	r6, r4
    7ec0:	1afffff9 	bne	7eac <__libc_init_array+0x58>
    7ec4:	e8bd4070 	pop	{r4, r5, r6, lr}
    7ec8:	e12fff1e 	bx	lr
    7ecc:	0000a6b0 	.word	0x0000a6b0
    7ed0:	0000a6b0 	.word	0x0000a6b0
    7ed4:	0000a6b0 	.word	0x0000a6b0
    7ed8:	0000a6b8 	.word	0x0000a6b8

Disassembly of section .rodata:

00007ee0 <intToChar>:
    7ee0:	33323130 37363534 00003938 41544a0a     0123456789...JTA
    7ef0:	41552047 74205452 0a747365 0000203e     G UART test.> ..
    7f00:	6572500a 61207373 6b20796e 74207965     .Press any key t
    7f10:	6f63206f 6e69746e 3e0a6575 00000020     o continue.> ...

00007f20 <colorScale.4664>:
    7f20:	00000037                                7...

00007f24 <colorOffset.4665>:
    7f24:	000000c8                                ....

00007f28 <COSs>:
    7f28:	00000000 3ff00000 91d14e3c 3feffe5c     .......?<N..\..?
    7f38:	b573eab3 3feffb15 fcb923a3 3feff487     ..s....?.#.....?
    7f48:	d5cfaace 3fefec56 d288ce70 3fefe0de     ....V..?p......?
    7f58:	a9fbe76d 3fefd2f1 5c28f5c3 3fefc28f     m......?..(\...?
    7f68:	a0275254 3fefb089 07c84b5e 3fef9b3d     TR'....?^K..=..?
    7f78:	4a2339c1 3fef837b 67381d7e 3fef6944     .9#J{..?~.8gDi.?
    7f88:	5f06f694 3fef4c98 e8a71de7 3fef2e48     ..._.L.?....H..?
    7f98:	95e9e1b1 3fef0cb2 1de69ad4 3feee8a7     .......?.......?
    7fa8:	37b4a234 3feec2f8 7525460b 3fee9a02     4..7...?.F%u...?
    7fb8:	4467381d 3fee6f69 374bc6a8 3fee4189     .8gDio.?..K7.A.?
    7fc8:	bc01a36e 3fee1205 1b71758e 3fede00d     n......?.uq....?
    7fd8:	559b3d08 3fedab9f 6a7ef9db 3fed74bc     .=.U...?..~j.t.?
    7fe8:	5a1cac08 3fed3b64 db8bac71 3fed0068     ...Zd;.?q...h..?
    7ff8:	37b4a234 3fecc2f8 6e978d50 3fec8312     4..7...?P..n...?
    8008:	80346dc6 3fec40b7 23a29c78 3febfcb9     .m4..@.?x..#...?
    8018:	a1cac083 3febb645 b1c432ca 3feb6e2e     ....E..?.2...n.?
    8028:	e5604189 3feb22d0 61e4f766 3fead6a1     .A`..".?f..a...?
    8038:	020c49ba 3fea872b eb1c432d 3fea36e2     .I..+..?-C...6.?
    8048:	f7ced917 3fe9e353 9652bd3c 3fe98e21     ....S..?<.R.!..?
    8058:	c6a7ef9e 3fe9374b d1b71759 3fe8de00     ....K7.?Y......?
    8068:	6e978d50 3fe88312 9d495183 3fe82680     P..n...?.QI..&.?
    8078:	a6b50b0f 3fe7c779 f9096bba 3fe767a0     ....y..?.k...g.?
    8088:	6f0068dc 3fe70481 2de00d1b 3fe6a090     .h.o...?...-...?
    8098:	7e90ff97 3fe63afb a9fbe76d 3fe5d2f1     ...~.:.?m......?
    80a8:	67381d7e 3fe56944 6d5cfaad 3fe4fec5     ~.8gDi.?..\m...?
    80b8:	4e3bcd36 3fe491d1 c0ebedfa 3fe42339     6.;N...?....9#.?
    80c8:	7c84b5dd 3fe3b3d0 12d77319 3fe341f2     ...|...?.s...A.?
    80d8:	f212d773 3fe2cf41 631f8a09 3fe25aee     s...A..?...c.Z.?
    80e8:	65fd8adb 3fe1e4f7 faacd9e8 3fe16d5c     ...e...?....\m.?
    80f8:	d844d014 3fe0f4f0 47ae147b 3fe07ae1     ..D....?{..G.z.?
    8108:	00000000 3fe00000 94467382 3fdf06f6     .......?.sF....?
    8118:	ba5e353f 3fde0c49 04189375 3fdd0e56     ?5^.I..?u...V..?
    8128:	dfa43fe6 3fdc0ebe ded288ce 3fdb0be0     .?.....?.......?
    8138:	6fd21ff3 3fda075f 92a30553 3fd9013a     ...o_..?S...:..?
    8148:	474538ef 3fd7f972 8db8bac7 3fd6f006     .8EGr..?.......?
    8158:	f7ced917 3fd5e353 61e4f766 3fd4d6a1     ....S..?f..a...?
    8168:	ef9db22d 3fd3c6a7 7d566cf4 3fd2b6ae     -......?.lV}...?
    8178:	2eb1c433 3fd1a36e e00d1b71 3fd0902d     3...n..?q...-..?
    8188:	467381d8 3fcef694 cccccccd 3fcccccc     ..sF...?.......?
    8198:	9a6b50b1 3fca9c77 6809d495 3fc86c22     .Pk.w..?...h"l.?
    81a8:	594af4f1 3fc63886 4a8c154d 3fc404ea     ..JY.8.?M..J...?
    81b8:	3bcd35a8 3fc1d14e a161e4f7 3fbf34d6     .5.;N..?..a..4.?
    81c8:	126e978d 3fbac083 3c361134 3fb652bd     ..n....?4.6<.R.?
    81d8:	ad42c3ca 3fb1de69 cb295e9e 3faac710     ..B.i..?.^)....?
    81e8:	ad42c3ca 3fa1de69 1eb851ec 3f91eb85     ..B.i..?.Q.....?
	...
    8200:	1eb851ec bf91eb85 ad42c3ca bfa1de69     .Q........B.i...
    8210:	cb295e9e bfaac710 ad42c3ca bfb1de69     .^).......B.i...
    8220:	3c361134 bfb652bd 126e978d bfbac083     4.6<.R....n.....
    8230:	a161e4f7 bfbf34d6 3bcd35a8 bfc1d14e     ..a..4...5.;N...
    8240:	4a8c154d bfc404ea 594af4f1 bfc63886     M..J......JY.8..
    8250:	6809d495 bfc86c22 9a6b50b1 bfca9c77     ...h"l...Pk.w...
    8260:	cccccccd bfcccccc 467381d8 bfcef694     ..........sF....
    8270:	e00d1b71 bfd0902d 2eb1c433 bfd1a36e     q...-...3...n...
    8280:	7d566cf4 bfd2b6ae ef9db22d bfd3c6a7     .lV}....-.......
    8290:	61e4f766 bfd4d6a1 f7ced917 bfd5e353     f..a........S...
    82a0:	8db8bac7 bfd6f006 474538ef bfd7f972     .........8EGr...
    82b0:	92a30553 bfd9013a 6fd21ff3 bfda075f     S...:......o_...
    82c0:	ded288ce bfdb0be0 dfa43fe6 bfdc0ebe     .........?......
    82d0:	04189375 bfdd0e56 ba5e353f bfde0c49     u...V...?5^.I...
    82e0:	94467382 bfdf06f6 00000000 bfe00000     .sF.............
    82f0:	47ae147b bfe07ae1 d844d014 bfe0f4f0     {..G.z....D.....
    8300:	faacd9e8 bfe16d5c 65fd8adb bfe1e4f7     ....\m.....e....
    8310:	631f8a09 bfe25aee f212d773 bfe2cf41     ...c.Z..s...A...
    8320:	12d77319 bfe341f2 7c84b5dd bfe3b3d0     .s...A.....|....
    8330:	c0ebedfa bfe42339 4e3bcd36 bfe491d1     ....9#..6.;N....
    8340:	6d5cfaad bfe4fec5 67381d7e bfe56944     ..\m....~.8gDi..
    8350:	a9fbe76d bfe5d2f1 7e90ff97 bfe63afb     m..........~.:..
    8360:	2de00d1b bfe6a090 6f0068dc bfe70481     ...-.....h.o....
    8370:	f9096bba bfe767a0 a6b50b0f bfe7c779     .k...g......y...
    8380:	9d495183 bfe82680 6e978d50 bfe88312     .QI..&..P..n....
    8390:	d1b71759 bfe8de00 c6a7ef9e bfe9374b     Y...........K7..
    83a0:	9652bd3c bfe98e21 f7ced917 bfe9e353     <.R.!.......S...
    83b0:	eb1c432d bfea36e2 020c49ba bfea872b     -C...6...I..+...
    83c0:	61e4f766 bfead6a1 e5604189 bfeb22d0     f..a.....A`.."..
    83d0:	b1c432ca bfeb6e2e a1cac083 bfebb645     .2...n......E...
    83e0:	23a29c78 bfebfcb9 80346dc6 bfec40b7     x..#.....m4..@..
    83f0:	6e978d50 bfec8312 37b4a234 bfecc2f8     P..n....4..7....
    8400:	db8bac71 bfed0068 5a1cac08 bfed3b64     q...h......Zd;..
    8410:	6a7ef9db bfed74bc 559b3d08 bfedab9f     ..~j.t...=.U....
    8420:	1b71758e bfede00d bc01a36e bfee1205     .uq.....n.......
    8430:	374bc6a8 bfee4189 4467381d bfee6f69     ..K7.A...8gDio..
    8440:	7525460b bfee9a02 37b4a234 bfeec2f8     .F%u....4..7....
    8450:	1de69ad4 bfeee8a7 95e9e1b1 bfef0cb2     ................
    8460:	e8a71de7 bfef2e48 5f06f694 bfef4c98     ....H......_.L..
    8470:	67381d7e bfef6944 4a2339c1 bfef837b     ~.8gDi...9#J{...
    8480:	07c84b5e bfef9b3d a0275254 bfefb089     ^K..=...TR'.....
    8490:	5c28f5c3 bfefc28f a9fbe76d bfefd2f1     ..(\....m.......
    84a0:	d288ce70 bfefe0de d5cfaace bfefec56     p...........V...
    84b0:	fcb923a3 bfeff487 b573eab3 bfeffb15     .#........s.....
    84c0:	91d14e3c bfeffe5c 00000000 bff00000     <N..\...........
    84d0:	91d14e3c bfeffe5c b573eab3 bfeffb15     <N..\.....s.....
    84e0:	fcb923a3 bfeff487 d5cfaace bfefec56     .#..........V...
    84f0:	d288ce70 bfefe0de a9fbe76d bfefd2f1     p.......m.......
    8500:	5c28f5c3 bfefc28f a0275254 bfefb089     ..(\....TR'.....
    8510:	07c84b5e bfef9b3d 4a2339c1 bfef837b     ^K..=....9#J{...
    8520:	67381d7e bfef6944 5f06f694 bfef4c98     ~.8gDi....._.L..
    8530:	e8a71de7 bfef2e48 95e9e1b1 bfef0cb2     ....H...........
    8540:	1de69ad4 bfeee8a7 37b4a234 bfeec2f8     ........4..7....
    8550:	7525460b bfee9a02 4467381d bfee6f69     .F%u.....8gDio..
    8560:	374bc6a8 bfee4189 bc01a36e bfee1205     ..K7.A..n.......
    8570:	1b71758e bfede00d 559b3d08 bfedab9f     .uq......=.U....
    8580:	6a7ef9db bfed74bc 5a1cac08 bfed3b64     ..~j.t.....Zd;..
    8590:	db8bac71 bfed0068 37b4a234 bfecc2f8     q...h...4..7....
    85a0:	6e978d50 bfec8312 80346dc6 bfec40b7     P..n.....m4..@..
    85b0:	23a29c78 bfebfcb9 a1cac083 bfebb645     x..#........E...
    85c0:	b1c432ca bfeb6e2e e5604189 bfeb22d0     .2...n...A`.."..
    85d0:	61e4f766 bfead6a1 020c49ba bfea872b     f..a.....I..+...
    85e0:	eb1c432d bfea36e2 f7ced917 bfe9e353     -C...6......S...
    85f0:	9652bd3c bfe98e21 c6a7ef9e bfe9374b     <.R.!.......K7..
    8600:	d1b71759 bfe8de00 6e978d50 bfe88312     Y.......P..n....
    8610:	9d495183 bfe82680 a6b50b0f bfe7c779     .QI..&......y...
    8620:	f9096bba bfe767a0 6f0068dc bfe70481     .k...g...h.o....
    8630:	2de00d1b bfe6a090 7e90ff97 bfe63afb     ...-.......~.:..
    8640:	a9fbe76d bfe5d2f1 67381d7e bfe56944     m.......~.8gDi..
    8650:	6d5cfaad bfe4fec5 4e3bcd36 bfe491d1     ..\m....6.;N....
    8660:	c0ebedfa bfe42339 7c84b5dd bfe3b3d0     ....9#.....|....
    8670:	12d77319 bfe341f2 f212d773 bfe2cf41     .s...A..s...A...
    8680:	631f8a09 bfe25aee 65fd8adb bfe1e4f7     ...c.Z.....e....
    8690:	faacd9e8 bfe16d5c d844d014 bfe0f4f0     ....\m....D.....
    86a0:	47ae147b bfe07ae1 00000000 bfe00000     {..G.z..........
    86b0:	94467382 bfdf06f6 ba5e353f bfde0c49     .sF.....?5^.I...
    86c0:	04189375 bfdd0e56 dfa43fe6 bfdc0ebe     u...V....?......
    86d0:	ded288ce bfdb0be0 6fd21ff3 bfda075f     ...........o_...
    86e0:	92a30553 bfd9013a 474538ef bfd7f972     S...:....8EGr...
    86f0:	8db8bac7 bfd6f006 f7ced917 bfd5e353     ............S...
    8700:	61e4f766 bfd4d6a1 ef9db22d bfd3c6a7     f..a....-.......
    8710:	7d566cf4 bfd2b6ae 2eb1c433 bfd1a36e     .lV}....3...n...
    8720:	e00d1b71 bfd0902d 467381d8 bfcef694     q...-.....sF....
    8730:	cccccccd bfcccccc 9a6b50b1 bfca9c77     .........Pk.w...
    8740:	6809d495 bfc86c22 594af4f1 bfc63886     ...h"l....JY.8..
    8750:	4a8c154d bfc404ea 3bcd35a8 bfc1d14e     M..J.....5.;N...
    8760:	a161e4f7 bfbf34d6 126e978d bfbac083     ..a..4....n.....
    8770:	3c361134 bfb652bd ad42c3ca bfb1de69     4.6<.R....B.i...
    8780:	cb295e9e bfaac710 ad42c3ca bfa1de69     .^).......B.i...
    8790:	1eb851ec bf91eb85 00000000 80000000     .Q..............
    87a0:	1eb851ec 3f91eb85 ad42c3ca 3fa1de69     .Q.....?..B.i..?
    87b0:	cb295e9e 3faac710 ad42c3ca 3fb1de69     .^)....?..B.i..?
    87c0:	3c361134 3fb652bd 126e978d 3fbac083     4.6<.R.?..n....?
    87d0:	a161e4f7 3fbf34d6 3bcd35a8 3fc1d14e     ..a..4.?.5.;N..?
    87e0:	4a8c154d 3fc404ea 594af4f1 3fc63886     M..J...?..JY.8.?
    87f0:	6809d495 3fc86c22 9a6b50b1 3fca9c77     ...h"l.?.Pk.w..?
    8800:	cccccccd 3fcccccc 467381d8 3fcef694     .......?..sF...?
    8810:	e00d1b71 3fd0902d 2eb1c433 3fd1a36e     q...-..?3...n..?
    8820:	7d566cf4 3fd2b6ae ef9db22d 3fd3c6a7     .lV}...?-......?
    8830:	61e4f766 3fd4d6a1 f7ced917 3fd5e353     f..a...?....S..?
    8840:	8db8bac7 3fd6f006 474538ef 3fd7f972     .......?.8EGr..?
    8850:	92a30553 3fd9013a 6fd21ff3 3fda075f     S...:..?...o_..?
    8860:	ded288ce 3fdb0be0 dfa43fe6 3fdc0ebe     .......?.?.....?
    8870:	04189375 3fdd0e56 ba5e353f 3fde0c49     u...V..??5^.I..?
    8880:	94467382 3fdf06f6 00000000 3fe00000     .sF....?.......?
    8890:	47ae147b 3fe07ae1 d844d014 3fe0f4f0     {..G.z.?..D....?
    88a0:	faacd9e8 3fe16d5c 65fd8adb 3fe1e4f7     ....\m.?...e...?
    88b0:	631f8a09 3fe25aee f212d773 3fe2cf41     ...c.Z.?s...A..?
    88c0:	12d77319 3fe341f2 7c84b5dd 3fe3b3d0     .s...A.?...|...?
    88d0:	c0ebedfa 3fe42339 4e3bcd36 3fe491d1     ....9#.?6.;N...?
    88e0:	6d5cfaad 3fe4fec5 67381d7e 3fe56944     ..\m...?~.8gDi.?
    88f0:	a9fbe76d 3fe5d2f1 7e90ff97 3fe63afb     m......?...~.:.?
    8900:	2de00d1b 3fe6a090 6f0068dc 3fe70481     ...-...?.h.o...?
    8910:	f9096bba 3fe767a0 a6b50b0f 3fe7c779     .k...g.?....y..?
    8920:	9d495183 3fe82680 6e978d50 3fe88312     .QI..&.?P..n...?
    8930:	d1b71759 3fe8de00 c6a7ef9e 3fe9374b     Y......?....K7.?
    8940:	9652bd3c 3fe98e21 f7ced917 3fe9e353     <.R.!..?....S..?
    8950:	eb1c432d 3fea36e2 020c49ba 3fea872b     -C...6.?.I..+..?
    8960:	61e4f766 3fead6a1 e5604189 3feb22d0     f..a...?.A`..".?
    8970:	b1c432ca 3feb6e2e a1cac083 3febb645     .2...n.?....E..?
    8980:	23a29c78 3febfcb9 80346dc6 3fec40b7     x..#...?.m4..@.?
    8990:	6e978d50 3fec8312 37b4a234 3fecc2f8     P..n...?4..7...?
    89a0:	db8bac71 3fed0068 5a1cac08 3fed3b64     q...h..?...Zd;.?
    89b0:	6a7ef9db 3fed74bc 559b3d08 3fedab9f     ..~j.t.?.=.U...?
    89c0:	1b71758e 3fede00d bc01a36e 3fee1205     .uq....?n......?
    89d0:	374bc6a8 3fee4189 4467381d 3fee6f69     ..K7.A.?.8gDio.?
    89e0:	7525460b 3fee9a02 37b4a234 3feec2f8     .F%u...?4..7...?
    89f0:	1de69ad4 3feee8a7 95e9e1b1 3fef0cb2     .......?.......?
    8a00:	e8a71de7 3fef2e48 5f06f694 3fef4c98     ....H..?..._.L.?
    8a10:	67381d7e 3fef6944 4a2339c1 3fef837b     ~.8gDi.?.9#J{..?
    8a20:	07c84b5e 3fef9b3d a0275254 3fefb089     ^K..=..?TR'....?
    8a30:	5c28f5c3 3fefc28f a9fbe76d 3fefd2f1     ..(\...?m......?
    8a40:	d288ce70 3fefe0de d5cfaace 3fefec56     p......?....V..?
    8a50:	fcb923a3 3feff487 b573eab3 3feffb15     .#.....?..s....?
    8a60:	91d14e3c 3feffe5c                       <N..\..?

00008a68 <SINs>:
	...
    8a70:	1eb851ec 3f91eb85 ad42c3ca 3fa1de69     .Q.....?..B.i..?
    8a80:	cb295e9e 3faac710 ad42c3ca 3fb1de69     .^)....?..B.i..?
    8a90:	3c361134 3fb652bd 126e978d 3fbac083     4.6<.R.?..n....?
    8aa0:	a161e4f7 3fbf34d6 3bcd35a8 3fc1d14e     ..a..4.?.5.;N..?
    8ab0:	4a8c154d 3fc404ea 594af4f1 3fc63886     M..J...?..JY.8.?
    8ac0:	6809d495 3fc86c22 9a6b50b1 3fca9c77     ...h"l.?.Pk.w..?
    8ad0:	cccccccd 3fcccccc 467381d8 3fcef694     .......?..sF...?
    8ae0:	e00d1b71 3fd0902d 2eb1c433 3fd1a36e     q...-..?3...n..?
    8af0:	7d566cf4 3fd2b6ae ef9db22d 3fd3c6a7     .lV}...?-......?
    8b00:	61e4f766 3fd4d6a1 f7ced917 3fd5e353     f..a...?....S..?
    8b10:	8db8bac7 3fd6f006 474538ef 3fd7f972     .......?.8EGr..?
    8b20:	92a30553 3fd9013a 6fd21ff3 3fda075f     S...:..?...o_..?
    8b30:	ded288ce 3fdb0be0 dfa43fe6 3fdc0ebe     .......?.?.....?
    8b40:	04189375 3fdd0e56 ba5e353f 3fde0c49     u...V..??5^.I..?
    8b50:	94467382 3fdf06f6 00000000 3fe00000     .sF....?.......?
    8b60:	47ae147b 3fe07ae1 d844d014 3fe0f4f0     {..G.z.?..D....?
    8b70:	faacd9e8 3fe16d5c 65fd8adb 3fe1e4f7     ....\m.?...e...?
    8b80:	631f8a09 3fe25aee f212d773 3fe2cf41     ...c.Z.?s...A..?
    8b90:	12d77319 3fe341f2 7c84b5dd 3fe3b3d0     .s...A.?...|...?
    8ba0:	c0ebedfa 3fe42339 4e3bcd36 3fe491d1     ....9#.?6.;N...?
    8bb0:	6d5cfaad 3fe4fec5 67381d7e 3fe56944     ..\m...?~.8gDi.?
    8bc0:	a9fbe76d 3fe5d2f1 7e90ff97 3fe63afb     m......?...~.:.?
    8bd0:	2de00d1b 3fe6a090 6f0068dc 3fe70481     ...-...?.h.o...?
    8be0:	f9096bba 3fe767a0 a6b50b0f 3fe7c779     .k...g.?....y..?
    8bf0:	9d495183 3fe82680 6e978d50 3fe88312     .QI..&.?P..n...?
    8c00:	d1b71759 3fe8de00 c6a7ef9e 3fe9374b     Y......?....K7.?
    8c10:	9652bd3c 3fe98e21 f7ced917 3fe9e353     <.R.!..?....S..?
    8c20:	eb1c432d 3fea36e2 020c49ba 3fea872b     -C...6.?.I..+..?
    8c30:	61e4f766 3fead6a1 e5604189 3feb22d0     f..a...?.A`..".?
    8c40:	b1c432ca 3feb6e2e a1cac083 3febb645     .2...n.?....E..?
    8c50:	23a29c78 3febfcb9 80346dc6 3fec40b7     x..#...?.m4..@.?
    8c60:	6e978d50 3fec8312 37b4a234 3fecc2f8     P..n...?4..7...?
    8c70:	db8bac71 3fed0068 5a1cac08 3fed3b64     q...h..?...Zd;.?
    8c80:	6a7ef9db 3fed74bc 559b3d08 3fedab9f     ..~j.t.?.=.U...?
    8c90:	1b71758e 3fede00d bc01a36e 3fee1205     .uq....?n......?
    8ca0:	374bc6a8 3fee4189 4467381d 3fee6f69     ..K7.A.?.8gDio.?
    8cb0:	7525460b 3fee9a02 37b4a234 3feec2f8     .F%u...?4..7...?
    8cc0:	1de69ad4 3feee8a7 95e9e1b1 3fef0cb2     .......?.......?
    8cd0:	e8a71de7 3fef2e48 5f06f694 3fef4c98     ....H..?..._.L.?
    8ce0:	67381d7e 3fef6944 4a2339c1 3fef837b     ~.8gDi.?.9#J{..?
    8cf0:	07c84b5e 3fef9b3d a0275254 3fefb089     ^K..=..?TR'....?
    8d00:	5c28f5c3 3fefc28f a9fbe76d 3fefd2f1     ..(\...?m......?
    8d10:	d288ce70 3fefe0de d5cfaace 3fefec56     p......?....V..?
    8d20:	fcb923a3 3feff487 b573eab3 3feffb15     .#.....?..s....?
    8d30:	91d14e3c 3feffe5c 00000000 3ff00000     <N..\..?.......?
    8d40:	91d14e3c 3feffe5c b573eab3 3feffb15     <N..\..?..s....?
    8d50:	fcb923a3 3feff487 d5cfaace 3fefec56     .#.....?....V..?
    8d60:	d288ce70 3fefe0de a9fbe76d 3fefd2f1     p......?m......?
    8d70:	5c28f5c3 3fefc28f a0275254 3fefb089     ..(\...?TR'....?
    8d80:	07c84b5e 3fef9b3d 4a2339c1 3fef837b     ^K..=..?.9#J{..?
    8d90:	67381d7e 3fef6944 5f06f694 3fef4c98     ~.8gDi.?..._.L.?
    8da0:	e8a71de7 3fef2e48 95e9e1b1 3fef0cb2     ....H..?.......?
    8db0:	1de69ad4 3feee8a7 37b4a234 3feec2f8     .......?4..7...?
    8dc0:	7525460b 3fee9a02 4467381d 3fee6f69     .F%u...?.8gDio.?
    8dd0:	374bc6a8 3fee4189 bc01a36e 3fee1205     ..K7.A.?n......?
    8de0:	1b71758e 3fede00d 559b3d08 3fedab9f     .uq....?.=.U...?
    8df0:	6a7ef9db 3fed74bc 5a1cac08 3fed3b64     ..~j.t.?...Zd;.?
    8e00:	db8bac71 3fed0068 37b4a234 3fecc2f8     q...h..?4..7...?
    8e10:	6e978d50 3fec8312 80346dc6 3fec40b7     P..n...?.m4..@.?
    8e20:	23a29c78 3febfcb9 a1cac083 3febb645     x..#...?....E..?
    8e30:	b1c432ca 3feb6e2e e5604189 3feb22d0     .2...n.?.A`..".?
    8e40:	61e4f766 3fead6a1 020c49ba 3fea872b     f..a...?.I..+..?
    8e50:	eb1c432d 3fea36e2 f7ced917 3fe9e353     -C...6.?....S..?
    8e60:	9652bd3c 3fe98e21 c6a7ef9e 3fe9374b     <.R.!..?....K7.?
    8e70:	d1b71759 3fe8de00 6e978d50 3fe88312     Y......?P..n...?
    8e80:	9d495183 3fe82680 a6b50b0f 3fe7c779     .QI..&.?....y..?
    8e90:	f9096bba 3fe767a0 6f0068dc 3fe70481     .k...g.?.h.o...?
    8ea0:	2de00d1b 3fe6a090 7e90ff97 3fe63afb     ...-...?...~.:.?
    8eb0:	a9fbe76d 3fe5d2f1 67381d7e 3fe56944     m......?~.8gDi.?
    8ec0:	6d5cfaad 3fe4fec5 4e3bcd36 3fe491d1     ..\m...?6.;N...?
    8ed0:	c0ebedfa 3fe42339 7c84b5dd 3fe3b3d0     ....9#.?...|...?
    8ee0:	12d77319 3fe341f2 f212d773 3fe2cf41     .s...A.?s...A..?
    8ef0:	631f8a09 3fe25aee 65fd8adb 3fe1e4f7     ...c.Z.?...e...?
    8f00:	faacd9e8 3fe16d5c d844d014 3fe0f4f0     ....\m.?..D....?
    8f10:	47ae147b 3fe07ae1 00000000 3fe00000     {..G.z.?.......?
    8f20:	94467382 3fdf06f6 ba5e353f 3fde0c49     .sF....??5^.I..?
    8f30:	04189375 3fdd0e56 dfa43fe6 3fdc0ebe     u...V..?.?.....?
    8f40:	ded288ce 3fdb0be0 6fd21ff3 3fda075f     .......?...o_..?
    8f50:	92a30553 3fd9013a 474538ef 3fd7f972     S...:..?.8EGr..?
    8f60:	8db8bac7 3fd6f006 f7ced917 3fd5e353     .......?....S..?
    8f70:	61e4f766 3fd4d6a1 ef9db22d 3fd3c6a7     f..a...?-......?
    8f80:	7d566cf4 3fd2b6ae 2eb1c433 3fd1a36e     .lV}...?3...n..?
    8f90:	e00d1b71 3fd0902d 467381d8 3fcef694     q...-..?..sF...?
    8fa0:	cccccccd 3fcccccc 9a6b50b1 3fca9c77     .......?.Pk.w..?
    8fb0:	6809d495 3fc86c22 594af4f1 3fc63886     ...h"l.?..JY.8.?
    8fc0:	4a8c154d 3fc404ea 3bcd35a8 3fc1d14e     M..J...?.5.;N..?
    8fd0:	a161e4f7 3fbf34d6 126e978d 3fbac083     ..a..4.?..n....?
    8fe0:	3c361134 3fb652bd ad42c3ca 3fb1de69     4.6<.R.?..B.i..?
    8ff0:	cb295e9e 3faac710 ad42c3ca 3fa1de69     .^)....?..B.i..?
    9000:	1eb851ec 3f91eb85 00000000 00000000     .Q.....?........
    9010:	1eb851ec bf91eb85 ad42c3ca bfa1de69     .Q........B.i...
    9020:	cb295e9e bfaac710 ad42c3ca bfb1de69     .^).......B.i...
    9030:	3c361134 bfb652bd 126e978d bfbac083     4.6<.R....n.....
    9040:	a161e4f7 bfbf34d6 3bcd35a8 bfc1d14e     ..a..4...5.;N...
    9050:	4a8c154d bfc404ea 594af4f1 bfc63886     M..J......JY.8..
    9060:	6809d495 bfc86c22 9a6b50b1 bfca9c77     ...h"l...Pk.w...
    9070:	cccccccd bfcccccc 467381d8 bfcef694     ..........sF....
    9080:	e00d1b71 bfd0902d 2eb1c433 bfd1a36e     q...-...3...n...
    9090:	7d566cf4 bfd2b6ae ef9db22d bfd3c6a7     .lV}....-.......
    90a0:	61e4f766 bfd4d6a1 f7ced917 bfd5e353     f..a........S...
    90b0:	8db8bac7 bfd6f006 474538ef bfd7f972     .........8EGr...
    90c0:	92a30553 bfd9013a 6fd21ff3 bfda075f     S...:......o_...
    90d0:	ded288ce bfdb0be0 dfa43fe6 bfdc0ebe     .........?......
    90e0:	04189375 bfdd0e56 ba5e353f bfde0c49     u...V...?5^.I...
    90f0:	94467382 bfdf06f6 00000000 bfe00000     .sF.............
    9100:	47ae147b bfe07ae1 d844d014 bfe0f4f0     {..G.z....D.....
    9110:	faacd9e8 bfe16d5c 65fd8adb bfe1e4f7     ....\m.....e....
    9120:	631f8a09 bfe25aee f212d773 bfe2cf41     ...c.Z..s...A...
    9130:	12d77319 bfe341f2 7c84b5dd bfe3b3d0     .s...A.....|....
    9140:	c0ebedfa bfe42339 4e3bcd36 bfe491d1     ....9#..6.;N....
    9150:	6d5cfaad bfe4fec5 67381d7e bfe56944     ..\m....~.8gDi..
    9160:	a9fbe76d bfe5d2f1 7e90ff97 bfe63afb     m..........~.:..
    9170:	2de00d1b bfe6a090 6f0068dc bfe70481     ...-.....h.o....
    9180:	f9096bba bfe767a0 a6b50b0f bfe7c779     .k...g......y...
    9190:	9d495183 bfe82680 6e978d50 bfe88312     .QI..&..P..n....
    91a0:	d1b71759 bfe8de00 c6a7ef9e bfe9374b     Y...........K7..
    91b0:	9652bd3c bfe98e21 f7ced917 bfe9e353     <.R.!.......S...
    91c0:	eb1c432d bfea36e2 020c49ba bfea872b     -C...6...I..+...
    91d0:	61e4f766 bfead6a1 e5604189 bfeb22d0     f..a.....A`.."..
    91e0:	b1c432ca bfeb6e2e a1cac083 bfebb645     .2...n......E...
    91f0:	23a29c78 bfebfcb9 80346dc6 bfec40b7     x..#.....m4..@..
    9200:	6e978d50 bfec8312 37b4a234 bfecc2f8     P..n....4..7....
    9210:	db8bac71 bfed0068 5a1cac08 bfed3b64     q...h......Zd;..
    9220:	6a7ef9db bfed74bc 559b3d08 bfedab9f     ..~j.t...=.U....
    9230:	1b71758e bfede00d bc01a36e bfee1205     .uq.....n.......
    9240:	374bc6a8 bfee4189 4467381d bfee6f69     ..K7.A...8gDio..
    9250:	7525460b bfee9a02 37b4a234 bfeec2f8     .F%u....4..7....
    9260:	1de69ad4 bfeee8a7 95e9e1b1 bfef0cb2     ................
    9270:	e8a71de7 bfef2e48 5f06f694 bfef4c98     ....H......_.L..
    9280:	67381d7e bfef6944 4a2339c1 bfef837b     ~.8gDi...9#J{...
    9290:	07c84b5e bfef9b3d a0275254 bfefb089     ^K..=...TR'.....
    92a0:	5c28f5c3 bfefc28f a9fbe76d bfefd2f1     ..(\....m.......
    92b0:	d288ce70 bfefe0de d5cfaace bfefec56     p...........V...
    92c0:	fcb923a3 bfeff487 b573eab3 bfeffb15     .#........s.....
    92d0:	91d14e3c bfeffe5c 00000000 bff00000     <N..\...........
    92e0:	91d14e3c bfeffe5c b573eab3 bfeffb15     <N..\.....s.....
    92f0:	fcb923a3 bfeff487 d5cfaace bfefec56     .#..........V...
    9300:	d288ce70 bfefe0de a9fbe76d bfefd2f1     p.......m.......
    9310:	5c28f5c3 bfefc28f a0275254 bfefb089     ..(\....TR'.....
    9320:	07c84b5e bfef9b3d 4a2339c1 bfef837b     ^K..=....9#J{...
    9330:	67381d7e bfef6944 5f06f694 bfef4c98     ~.8gDi....._.L..
    9340:	e8a71de7 bfef2e48 95e9e1b1 bfef0cb2     ....H...........
    9350:	1de69ad4 bfeee8a7 37b4a234 bfeec2f8     ........4..7....
    9360:	7525460b bfee9a02 4467381d bfee6f69     .F%u.....8gDio..
    9370:	374bc6a8 bfee4189 bc01a36e bfee1205     ..K7.A..n.......
    9380:	1b71758e bfede00d 559b3d08 bfedab9f     .uq......=.U....
    9390:	6a7ef9db bfed74bc 5a1cac08 bfed3b64     ..~j.t.....Zd;..
    93a0:	db8bac71 bfed0068 37b4a234 bfecc2f8     q...h...4..7....
    93b0:	6e978d50 bfec8312 80346dc6 bfec40b7     P..n.....m4..@..
    93c0:	23a29c78 bfebfcb9 a1cac083 bfebb645     x..#........E...
    93d0:	b1c432ca bfeb6e2e e5604189 bfeb22d0     .2...n...A`.."..
    93e0:	61e4f766 bfead6a1 020c49ba bfea872b     f..a.....I..+...
    93f0:	eb1c432d bfea36e2 f7ced917 bfe9e353     -C...6......S...
    9400:	9652bd3c bfe98e21 c6a7ef9e bfe9374b     <.R.!.......K7..
    9410:	d1b71759 bfe8de00 6e978d50 bfe88312     Y.......P..n....
    9420:	9d495183 bfe82680 a6b50b0f bfe7c779     .QI..&......y...
    9430:	f9096bba bfe767a0 6f0068dc bfe70481     .k...g...h.o....
    9440:	2de00d1b bfe6a090 7e90ff97 bfe63afb     ...-.......~.:..
    9450:	a9fbe76d bfe5d2f1 67381d7e bfe56944     m.......~.8gDi..
    9460:	6d5cfaad bfe4fec5 4e3bcd36 bfe491d1     ..\m....6.;N....
    9470:	c0ebedfa bfe42339 7c84b5dd bfe3b3d0     ....9#.....|....
    9480:	12d77319 bfe341f2 f212d773 bfe2cf41     .s...A..s...A...
    9490:	631f8a09 bfe25aee 65fd8adb bfe1e4f7     ...c.Z.....e....
    94a0:	faacd9e8 bfe16d5c d844d014 bfe0f4f0     ....\m....D.....
    94b0:	47ae147b bfe07ae1 00000000 bfe00000     {..G.z..........
    94c0:	94467382 bfdf06f6 ba5e353f bfde0c49     .sF.....?5^.I...
    94d0:	04189375 bfdd0e56 dfa43fe6 bfdc0ebe     u...V....?......
    94e0:	ded288ce bfdb0be0 6fd21ff3 bfda075f     ...........o_...
    94f0:	92a30553 bfd9013a 474538ef bfd7f972     S...:....8EGr...
    9500:	8db8bac7 bfd6f006 f7ced917 bfd5e353     ............S...
    9510:	61e4f766 bfd4d6a1 ef9db22d bfd3c6a7     f..a....-.......
    9520:	7d566cf4 bfd2b6ae 2eb1c433 bfd1a36e     .lV}....3...n...
    9530:	e00d1b71 bfd0902d 467381d8 bfcef694     q...-.....sF....
    9540:	cccccccd bfcccccc 9a6b50b1 bfca9c77     .........Pk.w...
    9550:	6809d495 bfc86c22 594af4f1 bfc63886     ...h"l....JY.8..
    9560:	4a8c154d bfc404ea 3bcd35a8 bfc1d14e     M..J.....5.;N...
    9570:	a161e4f7 bfbf34d6 126e978d bfbac083     ..a..4....n.....
    9580:	3c361134 bfb652bd ad42c3ca bfb1de69     4.6<.R....B.i...
    9590:	cb295e9e bfaac710 ad42c3ca bfa1de69     .^).......B.i...
    95a0:	1eb851ec bf91eb85                       .Q......

000095a8 <SIN_large>:
    95a8:	00000000 00000477 000008ef 00000d65     ....w.......e...
    95b8:	000011db 0000164f 00001ac2 00001f32     ....O.......2...
    95c8:	000023a0 0000280c 00002c74 000030d8     .#...(..t,...0..
    95d8:	00003539 00003996 00003dee 00004241     95...9...=..AB..
    95e8:	00004690 00004ad8 00004f1b 00005358     .F...J...O..XS..
    95f8:	0000578e 00005bbe 00005fe6 00006406     .W...[..._...d..
    9608:	0000681f 00006c30 00007039 00007438     .h..0l..9p..8t..
    9618:	0000782f 00007c1c 00007fff 000083d9     /x...|..........
    9628:	000087a8 00008b6d 00008f27 000092d5     ....m...'.......
    9638:	00009679 00009a10 00009d9b 0000a11b     y...............
    9648:	0000a48d 0000a7f3 0000ab4c 0000ae97     ........L.......
    9658:	0000b1d5 0000b504 0000b826 0000bb39     ........&...9...
    9668:	0000be3e 0000c134 0000c41b 0000c6f3     >...4...........
    9678:	0000c9bb 0000cc73 0000cf1b 0000d1b3     ....s...........
    9688:	0000d43b 0000d6b3 0000d919 0000db6f     ;...........o...
    9698:	0000ddb3 0000dfe7 0000e208 0000e419     ................
    96a8:	0000e617 0000e803 0000e9de 0000eba6     ................
    96b8:	0000ed5b 0000eeff 0000f08f 0000f20d     [...............
    96c8:	0000f378 0000f4d0 0000f615 0000f746     x...........F...
    96d8:	0000f865 0000f970 0000fa67 0000fb4b     e...p...g...K...
    96e8:	0000fc1c 0000fcd9 0000fd82 0000fe17     ................
    96f8:	0000fe98 0000ff06 0000ff60 0000ffa6     ........`.......
    9708:	0000ffd8 0000fff6 00010000 0000fff6     ................
    9718:	0000ffd8 0000ffa6 0000ff60 0000ff06     ........`.......
    9728:	0000fe98 0000fe17 0000fd82 0000fcd9     ................
    9738:	0000fc1c 0000fb4b 0000fa67 0000f970     ....K...g...p...
    9748:	0000f865 0000f746 0000f615 0000f4d0     e...F...........
    9758:	0000f378 0000f20d 0000f08f 0000eeff     x...............
    9768:	0000ed5b 0000eba6 0000e9de 0000e803     [...............
    9778:	0000e617 0000e419 0000e208 0000dfe7     ................
    9788:	0000ddb3 0000db6f 0000d919 0000d6b3     ....o...........
    9798:	0000d43b 0000d1b3 0000cf1b 0000cc73     ;...........s...
    97a8:	0000c9bb 0000c6f3 0000c41b 0000c134     ............4...
    97b8:	0000be3e 0000bb39 0000b826 0000b504     >...9...&.......
    97c8:	0000b1d5 0000ae97 0000ab4c 0000a7f3     ........L.......
    97d8:	0000a48d 0000a11b 00009d9b 00009a10     ................
    97e8:	00009679 000092d5 00008f27 00008b6d     y.......'...m...
    97f8:	000087a8 000083d9 00007fff 00007c1c     .............|..
    9808:	0000782f 00007438 00007039 00006c30     /x..8t..9p..0l..
    9818:	0000681f 00006406 00005fe6 00005bbe     .h...d..._...[..
    9828:	0000578e 00005358 00004f1b 00004ad8     .W..XS...O...J..
    9838:	00004690 00004241 00003dee 00003996     .F..AB...=...9..
    9848:	00003539 000030d8 00002c74 0000280c     95...0..t,...(..
    9858:	000023a0 00001f32 00001ac2 0000164f     .#..2.......O...
    9868:	000011db 00000d65 000008ef 00000477     ....e.......w...
    9878:	00000000 fffffb89 fffff711 fffff29b     ................
    9888:	ffffee25 ffffe9b1 ffffe53e ffffe0ce     %.......>.......
    9898:	ffffdc60 ffffd7f4 ffffd38c ffffcf28     `...........(...
    98a8:	ffffcac7 ffffc66a ffffc212 ffffbdbf     ....j...........
    98b8:	ffffb970 ffffb528 ffffb0e5 ffffaca8     p...(...........
    98c8:	ffffa872 ffffa442 ffffa01a ffff9bfa     r...B...........
    98d8:	ffff97e1 ffff93d0 ffff8fc7 ffff8bc8     ................
    98e8:	ffff87d1 ffff83e4 ffff8000 ffff7c27     ............'|..
    98f8:	ffff7858 ffff7493 ffff70d9 ffff6d2b     Xx...t...p..+m..
    9908:	ffff6987 ffff65f0 ffff6265 ffff5ee5     .i...e..eb...^..
    9918:	ffff5b73 ffff580d ffff54b4 ffff5169     s[...X...T..iQ..
    9928:	ffff4e2b ffff4afc ffff47da ffff44c7     +N...J...G...D..
    9938:	ffff41c2 ffff3ecc ffff3be5 ffff390d     .A...>...;...9..
    9948:	ffff3645 ffff338d ffff30e5 ffff2e4d     E6...3...0..M...
    9958:	ffff2bc5 ffff294d ffff26e7 ffff2491     .+..M)...&...$..
    9968:	ffff224d ffff2019 ffff1df8 ffff1be7     M"... ..........
    9978:	ffff19e9 ffff17fd ffff1622 ffff145a     ........"...Z...
    9988:	ffff12a5 ffff1101 ffff0f71 ffff0df3     ........q.......
    9998:	ffff0c88 ffff0b30 ffff09eb ffff08ba     ....0...........
    99a8:	ffff079b ffff0690 ffff0599 ffff04b5     ................
    99b8:	ffff03e4 ffff0327 ffff027e ffff01e9     ....'...~.......
    99c8:	ffff0168 ffff00fa ffff00a0 ffff005a     h...........Z...
    99d8:	ffff0028 ffff000a ffff0000 ffff000a     (...............
    99e8:	ffff0028 ffff005a ffff00a0 ffff00fa     (...Z...........
    99f8:	ffff0168 ffff01e9 ffff027e ffff0327     h.......~...'...
    9a08:	ffff03e4 ffff04b5 ffff0599 ffff0690     ................
    9a18:	ffff079b ffff08ba ffff09eb ffff0b30     ............0...
    9a28:	ffff0c88 ffff0df3 ffff0f71 ffff1101     ........q.......
    9a38:	ffff12a5 ffff145a ffff1622 ffff17fd     ....Z...".......
    9a48:	ffff19e9 ffff1be7 ffff1df8 ffff2019     ............. ..
    9a58:	ffff224d ffff2491 ffff26e7 ffff294d     M"...$...&..M)..
    9a68:	ffff2bc5 ffff2e4d ffff30e5 ffff338d     .+..M....0...3..
    9a78:	ffff3645 ffff390d ffff3be5 ffff3ecc     E6...9...;...>..
    9a88:	ffff41c2 ffff44c7 ffff47da ffff4afc     .A...D...G...J..
    9a98:	ffff4e2b ffff5169 ffff54b4 ffff580d     +N..iQ...T...X..
    9aa8:	ffff5b73 ffff5ee5 ffff6265 ffff65f0     s[...^..eb...e..
    9ab8:	ffff6987 ffff6d2b ffff70d9 ffff7493     .i..+m...p...t..
    9ac8:	ffff7858 ffff7c27 ffff8000 ffff83e4     Xx..'|..........
    9ad8:	ffff87d1 ffff8bc8 ffff8fc7 ffff93d0     ................
    9ae8:	ffff97e1 ffff9bfa ffffa01a ffffa442     ............B...
    9af8:	ffffa872 ffffaca8 ffffb0e5 ffffb528     r...........(...
    9b08:	ffffb970 ffffbdbf ffffc212 ffffc66a     p...........j...
    9b18:	ffffcac7 ffffcf28 ffffd38c ffffd7f4     ....(...........
    9b28:	ffffdc60 ffffe0ce ffffe53e ffffe9b1     `.......>.......
    9b38:	ffffee25 fffff29b fffff711 fffffb89     %...............

00009b48 <COS_large>:
    9b48:	00010000 0000fff6 0000ffd8 0000ffa6     ................
    9b58:	0000ff60 0000ff06 0000fe98 0000fe17     `...............
    9b68:	0000fd82 0000fcd9 0000fc1c 0000fb4b     ............K...
    9b78:	0000fa67 0000f970 0000f865 0000f746     g...p...e...F...
    9b88:	0000f615 0000f4d0 0000f378 0000f20d     ........x.......
    9b98:	0000f08f 0000eeff 0000ed5b 0000eba6     ........[.......
    9ba8:	0000e9de 0000e803 0000e617 0000e419     ................
    9bb8:	0000e208 0000dfe7 0000ddb3 0000db6f     ............o...
    9bc8:	0000d919 0000d6b3 0000d43b 0000d1b3     ........;.......
    9bd8:	0000cf1b 0000cc73 0000c9bb 0000c6f3     ....s...........
    9be8:	0000c41b 0000c134 0000be3e 0000bb39     ....4...>...9...
    9bf8:	0000b826 0000b504 0000b1d5 0000ae97     &...............
    9c08:	0000ab4c 0000a7f3 0000a48d 0000a11b     L...............
    9c18:	00009d9b 00009a10 00009679 000092d5     ........y.......
    9c28:	00008f27 00008b6d 000087a8 000083d9     '...m...........
    9c38:	00008000 00007c1c 0000782f 00007438     .....|../x..8t..
    9c48:	00007039 00006c30 0000681f 00006406     9p..0l...h...d..
    9c58:	00005fe6 00005bbe 0000578e 00005358     ._...[...W..XS..
    9c68:	00004f1b 00004ad8 00004690 00004241     .O...J...F..AB..
    9c78:	00003dee 00003996 00003539 000030d8     .=...9..95...0..
    9c88:	00002c74 0000280c 000023a0 00001f32     t,...(...#..2...
    9c98:	00001ac2 0000164f 000011db 00000d65     ....O.......e...
    9ca8:	000008ef 00000477 00000000 fffffb89     ....w...........
    9cb8:	fffff711 fffff29b ffffee25 ffffe9b1     ........%.......
    9cc8:	ffffe53e ffffe0ce ffffdc60 ffffd7f4     >.......`.......
    9cd8:	ffffd38c ffffcf28 ffffcac7 ffffc66a     ....(.......j...
    9ce8:	ffffc212 ffffbdbf ffffb970 ffffb528     ........p...(...
    9cf8:	ffffb0e5 ffffaca8 ffffa872 ffffa442     ........r...B...
    9d08:	ffffa01a ffff9bfa ffff97e1 ffff93d0     ................
    9d18:	ffff8fc7 ffff8bc8 ffff87d1 ffff83e4     ................
    9d28:	ffff8001 ffff7c27 ffff7858 ffff7493     ....'|..Xx...t..
    9d38:	ffff70d9 ffff6d2b ffff6987 ffff65f0     .p..+m...i...e..
    9d48:	ffff6265 ffff5ee5 ffff5b73 ffff580d     eb...^..s[...X..
    9d58:	ffff54b4 ffff5169 ffff4e2b ffff4afc     .T..iQ..+N...J..
    9d68:	ffff47da ffff44c7 ffff41c2 ffff3ecc     .G...D...A...>..
    9d78:	ffff3be5 ffff390d ffff3645 ffff338d     .;...9..E6...3..
    9d88:	ffff30e5 ffff2e4d ffff2bc5 ffff294d     .0..M....+..M)..
    9d98:	ffff26e7 ffff2491 ffff224d ffff2019     .&...$..M"... ..
    9da8:	ffff1df8 ffff1be7 ffff19e9 ffff17fd     ................
    9db8:	ffff1622 ffff145a ffff12a5 ffff1101     "...Z...........
    9dc8:	ffff0f71 ffff0df3 ffff0c88 ffff0b30     q...........0...
    9dd8:	ffff09eb ffff08ba ffff079b ffff0690     ................
    9de8:	ffff0599 ffff04b5 ffff03e4 ffff0327     ............'...
    9df8:	ffff027e ffff01e9 ffff0168 ffff00fa     ~.......h.......
    9e08:	ffff00a0 ffff005a ffff0028 ffff000a     ....Z...(.......
    9e18:	ffff0000 ffff000a ffff0028 ffff005a     ........(...Z...
    9e28:	ffff00a0 ffff00fa ffff0168 ffff01e9     ........h.......
    9e38:	ffff027e ffff0327 ffff03e4 ffff04b5     ~...'...........
    9e48:	ffff0599 ffff0690 ffff079b ffff08ba     ................
    9e58:	ffff09eb ffff0b30 ffff0c88 ffff0df3     ....0...........
    9e68:	ffff0f71 ffff1101 ffff12a5 ffff145a     q...........Z...
    9e78:	ffff1622 ffff17fd ffff19e9 ffff1be7     "...............
    9e88:	ffff1df8 ffff2019 ffff224d ffff2491     ..... ..M"...$..
    9e98:	ffff26e7 ffff294d ffff2bc5 ffff2e4d     .&..M)...+..M...
    9ea8:	ffff30e5 ffff338d ffff3645 ffff390d     .0...3..E6...9..
    9eb8:	ffff3be5 ffff3ecc ffff41c2 ffff44c7     .;...>...A...D..
    9ec8:	ffff47da ffff4afc ffff4e2b ffff5169     .G...J..+N..iQ..
    9ed8:	ffff54b4 ffff580d ffff5b73 ffff5ee5     .T...X..s[...^..
    9ee8:	ffff6265 ffff65f0 ffff6987 ffff6d2b     eb...e...i..+m..
    9ef8:	ffff70d9 ffff7493 ffff7858 ffff7c27     .p...t..Xx..'|..
    9f08:	ffff8000 ffff83e4 ffff87d1 ffff8bc8     ................
    9f18:	ffff8fc7 ffff93d0 ffff97e1 ffff9bfa     ................
    9f28:	ffffa01a ffffa442 ffffa872 ffffaca8     ....B...r.......
    9f38:	ffffb0e5 ffffb528 ffffb970 ffffbdbf     ....(...p.......
    9f48:	ffffc212 ffffc66a ffffcac7 ffffcf28     ....j.......(...
    9f58:	ffffd38c ffffd7f4 ffffdc60 ffffe0ce     ........`.......
    9f68:	ffffe53e ffffe9b1 ffffee25 fffff29b     >.......%.......
    9f78:	fffff711 fffffb89 00000000 00000477     ............w...
    9f88:	000008ef 00000d65 000011db 0000164f     ....e.......O...
    9f98:	00001ac2 00001f32 000023a0 0000280c     ....2....#...(..
    9fa8:	00002c74 000030d8 00003539 00003996     t,...0..95...9..
    9fb8:	00003dee 00004241 00004690 00004ad8     .=..AB...F...J..
    9fc8:	00004f1b 00005358 0000578e 00005bbe     .O..XS...W...[..
    9fd8:	00005fe6 00006406 0000681f 00006c30     ._...d...h..0l..
    9fe8:	00007039 00007438 0000782f 00007c1c     9p..8t../x...|..
    9ff8:	00008000 000083d9 000087a8 00008b6d     ............m...
    a008:	00008f27 000092d5 00009679 00009a10     '.......y.......
    a018:	00009d9b 0000a11b 0000a48d 0000a7f3     ................
    a028:	0000ab4c 0000ae97 0000b1d5 0000b504     L...............
    a038:	0000b826 0000bb39 0000be3e 0000c134     &...9...>...4...
    a048:	0000c41b 0000c6f3 0000c9bb 0000cc73     ............s...
    a058:	0000cf1b 0000d1b3 0000d43b 0000d6b3     ........;.......
    a068:	0000d919 0000db6f 0000ddb3 0000dfe7     ....o...........
    a078:	0000e208 0000e419 0000e617 0000e803     ................
    a088:	0000e9de 0000eba6 0000ed5b 0000eeff     ........[.......
    a098:	0000f08f 0000f20d 0000f378 0000f4d0     ........x.......
    a0a8:	0000f615 0000f746 0000f865 0000f970     ....F...e...p...
    a0b8:	0000fa67 0000fb4b 0000fc1c 0000fcd9     g...K...........
    a0c8:	0000fd82 0000fe17 0000fe98 0000ff06     ................
    a0d8:	0000ff60 0000ffa6 0000ffd8 0000fff6     `...............

0000a0e8 <npio2_hw>:
    a0e8:	3ff921fb 400921fb 4012d97c 401921fb     .!.?.!.@|..@.!.@
    a0f8:	401f6a7a 4022d97c 4025fdbb 402921fb     zj.@|."@..%@.!)@
    a108:	402c463a 402f6a7a 4031475c 4032d97c     :F,@zj/@\G1@|.2@
    a118:	40346b9c 4035fdbb 40378fdb 403921fb     .k4@..5@..7@.!9@
    a128:	403ab41b 403c463a 403dd85a 403f6a7a     ..:@:F<@Z.=@zj?@
    a138:	40407e4c 4041475c 4042106c 4042d97c     L~@@\GA@l.B@|.B@
    a148:	4043a28c 40446b9c 404534ac 4045fdbb     ..C@.kD@.4E@..E@
    a158:	4046c6cb 40478fdb 404858eb 404921fb     ..F@..G@.XH@.!I@

0000a168 <two_over_pi>:
    a168:	00a2f983 006e4e44 001529fc 002757d1     ....DNn..)...W'.
    a178:	00f534dd 00c0db62 0095993c 00439041     .4..b...<...A.C.
    a188:	00fe5163 00abdebb 00c561b7 00246e3a     cQ.......a..:n$.
    a198:	00424dd2 00e00649 002eea09 00d1921c     .MB.I...........
    a1a8:	00fe1deb 001cb129 00a73ee8 008235f5     ....)....>...5..
    a1b8:	002ebb44 0084e99c 007026b4 005f7e41     D........&p.A~_.
    a1c8:	003991d6 00398353 0039f49c 00845f8b     ..9.S.9...9.._..
    a1d8:	00bdf928 003b1ff8 0097ffde 0005980f     (.....;.........
    a1e8:	00ef2f11 008b5a0a 006d1f6d 00367ecf     ./...Z..m.m..~6.
    a1f8:	0027cb09 00b74f46 003f669e 005fea2d     ..'.FO...f?.-._.
    a208:	007527ba 00c7ebe5 00f17b3d 000739f7     .'u.....={...9..
    a218:	008a5292 00ea6bfb 005fb11f 008d5d08     .R...k...._..]..
    a228:	00560330 0046fc7b 006babf0 00cfbc20     0.V.{.F...k. ...
    a238:	009af436 001da9e3 0091615e 00e61b08     6.......^a......
    a248:	00659985 005f14a0 0068408d 00ffd880     ..e..._..@h.....
    a258:	004d7327 00310606 001556ca 0073a8c9     'sM...1..V....s.
    a268:	0060e27b 00c08c6b                       {.`.k...

0000a270 <npio2_hw>:
    a270:	3fc90f00 40490f00 4096cb00 40c90f00     ...?..I@...@...@
    a280:	40fb5300 4116cb00 412fed00 41490f00     .S.@...A../A..IA
    a290:	41623100 417b5300 418a3a00 4196cb00     .1bA.S{A.:.A...A
    a2a0:	41a35c00 41afed00 41bc7e00 41c90f00     .\.A...A.~.A...A
    a2b0:	41d5a000 41e23100 41eec200 41fb5300     ...A.1.A...A.S.A
    a2c0:	4203f200 420a3a00 42108300 4216cb00     ...B.:.B...B...B
    a2d0:	421d1400 42235c00 4229a500 422fed00     ...B.\#B..)B../B
    a2e0:	42363600 423c7e00 4242c700 42490f00     .66B.~<B..BB..IB

0000a2f0 <two_over_pi>:
    a2f0:	000000a2 000000f9 00000083 0000006e     ............n...
    a300:	0000004e 00000044 00000015 00000029     N...D.......)...
    a310:	000000fc 00000027 00000057 000000d1     ....'...W.......
    a320:	000000f5 00000034 000000dd 000000c0     ....4...........
    a330:	000000db 00000062 00000095 00000099     ....b...........
    a340:	0000003c 00000043 00000090 00000041     <...C.......A...
    a350:	000000fe 00000051 00000063 000000ab     ....Q...c.......
    a360:	000000de 000000bb 000000c5 00000061     ............a...
    a370:	000000b7 00000024 0000006e 0000003a     ....$...n...:...
    a380:	00000042 0000004d 000000d2 000000e0     B...M...........
    a390:	00000006 00000049 0000002e 000000ea     ....I...........
    a3a0:	00000009 000000d1 00000092 0000001c     ................
    a3b0:	000000fe 0000001d 000000eb 0000001c     ................
    a3c0:	000000b1 00000029 000000a7 0000003e     ....).......>...
    a3d0:	000000e8 00000082 00000035 000000f5     ........5.......
    a3e0:	0000002e 000000bb 00000044 00000084     ........D.......
    a3f0:	000000e9 0000009c 00000070 00000026     ........p...&...
    a400:	000000b4 0000005f 0000007e 00000041     ...._...~...A...
    a410:	00000039 00000091 000000d6 00000039     9...........9...
    a420:	00000083 00000053 00000039 000000f4     ....S...9.......
    a430:	0000009c 00000084 0000005f 0000008b     ........_.......
    a440:	000000bd 000000f9 00000028 0000003b     ........(...;...
    a450:	0000001f 000000f8 00000097 000000ff     ................
    a460:	000000de 00000005 00000098 0000000f     ................
    a470:	000000ef 0000002f 00000011 0000008b     ..../...........
    a480:	0000005a 0000000a 0000006d 0000001f     Z.......m.......
    a490:	0000006d 00000036 0000007e 000000cf     m...6...~.......
    a4a0:	00000027 000000cb 00000009 000000b7     '...............
    a4b0:	0000004f 00000046 0000003f 00000066     O...F...?...f...
    a4c0:	0000009e 0000005f 000000ea 0000002d     ...._.......-...
    a4d0:	00000075 00000027 000000ba 000000c7     u...'...........
    a4e0:	000000eb 000000e5 000000f1 0000007b     ............{...
    a4f0:	0000003d 00000007 00000039 000000f7     =.......9.......
    a500:	0000008a 00000052 00000092 000000ea     ....R...........
    a510:	0000006b 000000fb 0000005f 000000b1     k......._.......
    a520:	0000001f 0000008d 0000005d 00000008     ........].......
    a530:	00000056 00000003 00000030 00000046     V.......0...F...
    a540:	000000fc 0000007b 0000006b 000000ab     ....{...k.......
    a550:	000000f0 000000cf 000000bc 00000020     ............ ...
    a560:	0000009a 000000f4 00000036 0000001d     ........6.......
    a570:	000000a9 000000e3 00000091 00000061     ............a...
    a580:	0000005e 000000e6 0000001b 00000008     ^...............
    a590:	00000065 00000099 00000085 0000005f     e..........._...
    a5a0:	00000014 000000a0 00000068 00000040     ........h...@...
    a5b0:	0000008d 000000ff 000000d8 00000080     ................
    a5c0:	0000004d 00000073 00000027 00000031     M...s...'...1...
    a5d0:	00000006 00000006 00000015 00000056     ............V...
    a5e0:	000000ca 00000073 000000a8 000000c9     ....s...........
    a5f0:	00000060 000000e2 0000007b 000000c0     `.......{.......
    a600:	0000008c 0000006b                       ....k...

0000a608 <init_jk>:
    a608:	00000002 00000003 00000004 00000006     ................

0000a618 <PIo2>:
    a618:	40000000 3ff921fb 00000000 3e74442d     ...@.!.?....-Dt>
    a628:	80000000 3cf84698 60000000 3b78cc51     .....F.<...`Q.x;
    a638:	80000000 39f01b83 40000000 387a2520     .......9...@ %z8
    a648:	80000000 36e38222 00000000 3569f31d     ...."..6......i5

0000a658 <init_jk>:
    a658:	00000004 00000007 00000009              ............

0000a664 <PIo2>:
    a664:	3fc90000 39f00000 37da0000 33a20000     ...?...9...7...3
    a674:	2e840000 2b500000 27c20000 22d00000     ......P+...'..."
    a684:	1fc40000 1bc60000 17440000              ..........D.

0000a690 <_global_impure_ptr>:
    a690:	0000a758 00000043                       X...C...

0000a698 <_init>:
    a698:	e1a0c00d 	mov	r12, sp
    a69c:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
    a6a0:	e24cb004 	sub	r11, r12, #4
    a6a4:	e24bd028 	sub	sp, r11, #40	; 0x28
    a6a8:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
    a6ac:	e12fff1e 	bx	lr

0000a6b0 <__init_array_start>:
    a6b0:	00007d6c 	.word	0x00007d6c

0000a6b4 <__frame_dummy_init_array_entry>:
    a6b4:	00000208                                ....

0000a6b8 <__libc_fini>:
    a6b8:	e1a0c00d 	mov	r12, sp
    a6bc:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
    a6c0:	e24cb004 	sub	r11, r12, #4
    a6c4:	e24bd028 	sub	sp, r11, #40	; 0x28
    a6c8:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
    a6cc:	e12fff1e 	bx	lr

0000a6d0 <__fini_array_start>:
    a6d0:	000001c4 	.word	0x000001c4

0000a6d4 <__cs3_regions>:
	...
    a6e0:	0000ab88 	.word	0x0000ab88
    a6e4:	00009c90 	.word	0x00009c90
